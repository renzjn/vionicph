O:21:"Akeeba\Engine\Factory":1:{s:13:" * objectList";a:42:{s:28:"\Akeeba\Engine\Configuration";O:27:"Akeeba\Engine\Configuration":5:{s:45:" Akeeba\Engine\Configuration defaultNameSpace";s:6:"global";s:54:" Akeeba\Engine\Configuration directory_containing_keys";a:1:{i:0;s:29:"akeeba.basic.output_directory";}s:44:" Akeeba\Engine\Configuration protected_nodes";a:10:{i:20;s:19:"akeeba.quota.remote";i:21;s:26:"akeeba.quota.maxage.enable";i:22;s:37:"akeeba.tuning.nobreak.beforelargefile";i:23;s:36:"akeeba.tuning.nobreak.afterlargefile";i:24;s:31:"akeeba.tuning.nobreak.proactive";i:25;s:29:"akeeba.tuning.nobreak.domains";i:26;s:34:"akeeba.tuning.nobreak.finalization";i:27;s:26:"akeeba.tuning.settimelimit";i:28;s:27:"akeeba.advanced.scan_engine";i:29;s:31:"akeeba.advanced.postproc_engine";}s:37:" Akeeba\Engine\Configuration registry";a:5:{s:6:"global";a:1:{s:4:"data";O:8:"stdClass":0:{}}s:6:"akeeba";a:1:{s:4:"data";O:8:"stdClass":6:{s:5:"basic";O:8:"stdClass":6:{s:16:"output_directory";s:65:"C:\wamp64\www\vionicph/administrator/components/com_akeeba/backup";s:9:"log_level";s:1:"4";s:12:"archive_name";s:28:"site-[HOST]-[DATE]-[TIME_TZ]";s:11:"backup_type";s:4:"full";s:14:"clientsidewait";s:1:"0";s:9:"useiframe";s:1:"0";}s:4:"core";O:8:"stdClass":1:{s:12:"usedbstorage";s:1:"0";}s:8:"advanced";O:8:"stdClass":9:{s:11:"dump_engine";s:6:"native";s:11:"scan_engine";s:5:"smart";s:15:"archiver_engine";s:3:"jpa";s:15:"postproc_engine";s:4:"none";s:18:"embedded_installer";s:5:"angie";s:10:"autoresume";s:1:"1";s:18:"autoresume_timeout";s:2:"10";s:21:"autoresume_maxretries";s:1:"3";s:14:"integritycheck";s:1:"0";}s:5:"quota";O:8:"stdClass":7:{s:6:"remote";s:1:"0";s:6:"maxage";O:8:"stdClass":1:{s:6:"enable";s:1:"0";}s:14:"obsolete_quota";s:2:"50";s:17:"enable_size_quota";s:1:"0";s:10:"size_quota";s:8:"15728640";s:18:"enable_count_quota";s:1:"1";s:11:"count_quota";s:1:"3";}s:6:"tuning";O:8:"stdClass":5:{s:13:"min_exec_time";s:1:"0";s:13:"max_exec_time";s:2:"30";s:13:"run_time_bias";s:2:"75";s:7:"nobreak";O:8:"stdClass":5:{s:15:"beforelargefile";s:1:"0";s:14:"afterlargefile";s:1:"0";s:9:"proactive";s:1:"0";s:7:"domains";s:1:"0";s:12:"finalization";s:1:"0";}s:12:"settimelimit";s:1:"1";}s:4:"flag";O:8:"stdClass":1:{s:7:"confwiz";s:1:"1";}}}s:6:"engine";a:1:{s:4:"data";O:8:"stdClass":4:{s:9:"installer";O:8:"stdClass":1:{s:5:"angie";O:8:"stdClass":1:{s:3:"key";s:0:"";}}s:8:"archiver";O:8:"stdClass":2:{s:6:"common";O:8:"stdClass":4:{s:20:"dereference_symlinks";s:1:"0";s:9:"part_size";s:10:"2147352576";s:10:"chunk_size";s:7:"1048576";s:18:"big_file_threshold";s:7:"1048576";}s:3:"zip";O:8:"stdClass":1:{s:18:"cd_glue_chunk_size";s:7:"1048576";}}s:4:"dump";O:8:"stdClass":3:{s:7:"divider";O:8:"stdClass":3:{s:6:"common";s:1:"0";s:5:"mysql";s:1:"0";s:7:"reverse";s:1:"0";}s:6:"common";O:8:"stdClass":5:{s:12:"blankoutpass";s:1:"0";s:16:"extended_inserts";s:1:"1";s:11:"packet_size";s:8:"209715.2";s:9:"splitsize";s:6:"524288";s:9:"batchsize";s:4:"1000";}s:6:"native";O:8:"stdClass":3:{s:18:"advanced_entitites";s:1:"0";s:14:"nodependencies";s:1:"0";s:7:"nobtree";s:1:"1";}}s:4:"scan";O:8:"stdClass":2:{s:5:"smart";O:8:"stdClass":1:{s:19:"large_dir_threshold";s:3:"100";}s:6:"common";O:8:"stdClass":1:{s:9:"largefile";s:8:"10485760";}}}}s:4:"core";a:1:{s:4:"data";O:8:"stdClass":1:{s:7:"filters";O:8:"stdClass":5:{s:15:"dateconditional";O:8:"stdClass":2:{s:7:"enabled";s:1:"0";s:5:"start";s:22:"1981-02-20 12:15 GMT+2";}s:9:"errorlogs";O:8:"stdClass":1:{s:7:"enabled";s:1:"1";}s:9:"hoststats";O:8:"stdClass":1:{s:7:"enabled";s:1:"1";}s:6:"finder";O:8:"stdClass":1:{s:7:"enabled";s:1:"1";}s:8:"myjoomla";O:8:"stdClass":1:{s:7:"enabled";s:1:"1";}}}}s:8:"volatile";a:1:{s:4:"data";O:8:"stdClass":12:{s:4:"core";O:8:"stdClass":3:{s:12:"finalization";O:8:"stdClass":2:{s:15:"action_handlers";a:1:{i:0;O:38:"Akeeba\Engine\Finalization\TestExtract":4:{s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}}s:19:"action_queue_before";a:1:{i:0;s:12:"test_extract";}}s:11:"description";N;s:7:"comment";N;}s:17:"operation_counter";i:916;s:12:"step_counter";i:17;s:9:"breakflag";b:0;s:12:"akeebaengine";O:8:"stdClass":2:{s:7:"domains";s:36:"init|installer|packdb|packing|finale";s:7:"scripts";s:42:"full|dbonly|fileonly|alldb|incfile|incfull";}s:6:"domain";O:8:"stdClass":5:{s:4:"init";O:8:"stdClass":3:{s:6:"domain";s:4:"init";s:5:"class";s:4:"Init";s:4:"text";s:35:"COM_AKEEBA_BACKUP_LABEL_DOMAIN_INIT";}s:9:"installer";O:8:"stdClass":3:{s:6:"domain";s:9:"installer";s:5:"class";s:9:"Installer";s:4:"text";s:40:"COM_AKEEBA_BACKUP_LABEL_DOMAIN_INSTALLER";}s:6:"packdb";O:8:"stdClass":3:{s:6:"domain";s:6:"PackDB";s:5:"class";s:2:"Db";s:4:"text";s:37:"COM_AKEEBA_BACKUP_LABEL_DOMAIN_PACKDB";}s:7:"packing";O:8:"stdClass":3:{s:6:"domain";s:7:"Packing";s:5:"class";s:4:"Pack";s:4:"text";s:38:"COM_AKEEBA_BACKUP_LABEL_DOMAIN_PACKING";}s:6:"finale";O:8:"stdClass":3:{s:6:"domain";s:6:"finale";s:5:"class";s:12:"Finalization";s:4:"text";s:39:"COM_AKEEBA_BACKUP_LABEL_DOMAIN_FINISHED";}}s:9:"scripting";O:8:"stdClass":6:{s:4:"full";O:8:"stdClass":4:{s:5:"chain";s:36:"init|installer|packdb|packing|finale";s:4:"text";s:33:"COM_AKEEBA_CONFIG_BACKUPTYPE_FULL";s:2:"db";O:8:"stdClass":5:{s:10:"saveasname";s:6:"normal";s:12:"databasesini";s:1:"1";s:11:"skipextradb";s:1:"0";s:13:"abstractnames";s:1:"1";s:14:"dropstatements";s:1:"0";}s:4:"core";O:8:"stdClass":1:{s:13:"createarchive";s:1:"1";}}s:6:"dbonly";O:8:"stdClass":4:{s:5:"chain";s:18:"init|packdb|finale";s:4:"text";s:35:"COM_AKEEBA_CONFIG_BACKUPTYPE_DBONLY";s:2:"db";O:8:"stdClass":5:{s:10:"saveasname";s:6:"output";s:12:"databasesini";s:1:"0";s:11:"skipextradb";s:1:"1";s:13:"abstractnames";s:1:"0";s:14:"dropstatements";s:1:"1";}s:4:"core";O:8:"stdClass":2:{s:14:"forceextension";s:4:".sql";s:13:"createarchive";s:1:"0";}}s:8:"fileonly";O:8:"stdClass":3:{s:5:"chain";s:19:"init|packing|finale";s:4:"text";s:37:"COM_AKEEBA_CONFIG_BACKUPTYPE_FILEONLY";s:4:"core";O:8:"stdClass":1:{s:13:"createarchive";s:1:"1";}}s:5:"alldb";O:8:"stdClass":4:{s:5:"chain";s:28:"init|installer|packdb|finale";s:4:"text";s:34:"COM_AKEEBA_CONFIG_BACKUPTYPE_ALLDB";s:2:"db";O:8:"stdClass":7:{s:8:"tempfile";s:9:"temporary";s:10:"saveasname";s:6:"normal";s:12:"databasesini";s:1:"1";s:11:"skipextradb";s:1:"0";s:13:"abstractnames";s:1:"1";s:14:"dropstatements";s:1:"0";s:15:"finalizearchive";s:1:"1";}s:4:"core";O:8:"stdClass":1:{s:13:"createarchive";s:1:"1";}}s:7:"incfile";O:8:"stdClass":3:{s:5:"chain";s:19:"init|packing|finale";s:4:"text";s:36:"COM_AKEEBA_CONFIG_BACKUPTYPE_INCFILE";s:6:"filter";O:8:"stdClass":1:{s:11:"incremental";s:1:"1";}}s:7:"incfull";O:8:"stdClass":5:{s:5:"chain";s:36:"init|installer|packdb|packing|finale";s:4:"text";s:36:"COM_AKEEBA_CONFIG_BACKUPTYPE_INCFULL";s:2:"db";O:8:"stdClass":5:{s:10:"saveasname";s:6:"normal";s:12:"databasesini";s:1:"1";s:11:"skipextradb";s:1:"0";s:13:"abstractnames";s:1:"1";s:14:"dropstatements";s:1:"0";}s:4:"core";O:8:"stdClass":1:{s:13:"createarchive";s:1:"1";}s:6:"filter";O:8:"stdClass":1:{s:11:"incremental";s:1:"1";}}}s:10:"statistics";O:8:"stdClass":1:{s:9:"multipart";i:1;}s:6:"engine";O:8:"stdClass":1:{s:8:"archiver";O:8:"stdClass":4:{s:16:"sourceNameOrData";N;s:7:"unc_len";N;s:6:"resume";N;s:14:"processingfile";b:0;}}s:8:"database";O:8:"stdClass":3:{s:4:"root";s:8:"[SITEDB]";s:13:"largest_query";i:208876;s:9:"batchsize";i:624;}s:9:"tempfiles";s:6:"a:0:{}";s:10:"filesystem";O:8:"stdClass":1:{s:12:"current_root";s:22:"C:\wamp64\www\vionicph";}}}}s:13:"activeProfile";i:2;}s:27:"\Akeeba\Engine\Core\Filters";O:26:"Akeeba\Engine\Core\Filters":7:{s:43:" Akeeba\Engine\Core\Filters filter_registry";a:0:{}s:35:" Akeeba\Engine\Core\Filters filters";a:14:{s:11:"Incremental";O:32:"Akeeba\Engine\Filter\Incremental":11:{s:11:"filter_name";s:0:"";s:6:"object";s:4:"file";s:7:"subtype";s:3:"all";s:6:"method";s:3:"api";s:7:"enabled";b:1;s:14:" * filter_data";N;s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:10:"Cvsfolders";O:31:"Akeeba\Engine\Filter\Cvsfolders":11:{s:11:"filter_name";s:10:"Cvsfolders";s:6:"object";s:3:"dir";s:7:"subtype";s:3:"all";s:6:"method";s:5:"regex";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{s:10:"[SITEROOT]";a:4:{i:0;s:9:"#/\.git$#";i:1;s:9:"#^\.git$#";i:2;s:9:"#/\.svn$#";i:3;s:9:"#^\.svn$#";}}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:12:"Excludefiles";O:33:"Akeeba\Engine\Filter\Excludefiles":11:{s:11:"filter_name";s:12:"Excludefiles";s:6:"object";s:4:"file";s:7:"subtype";s:3:"all";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{s:10:"[SITEROOT]";a:3:{i:0;s:13:"kickstart.php";i:1;s:9:"error_log";i:2;s:23:"administrator/error_log";}}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:14:"Excludefolders";O:35:"Akeeba\Engine\Filter\Excludefolders":11:{s:11:"filter_name";s:14:"Excludefolders";s:6:"object";s:3:"dir";s:7:"subtype";s:3:"all";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{s:10:"[SITEROOT]";a:2:{i:0;s:7:"awstats";i:1;s:7:"cgi-bin";}}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:16:"Excludetabledata";O:37:"Akeeba\Engine\Filter\Excludetabledata":11:{s:11:"filter_name";s:16:"Excludetabledata";s:6:"object";s:8:"dbobject";s:7:"subtype";s:7:"content";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{s:8:"[SITEDB]";a:2:{i:0;s:10:"#__session";i:1;s:15:"#__guardxt_runs";}}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:14:"Joomlaskipdirs";O:35:"Akeeba\Engine\Filter\Joomlaskipdirs":11:{s:11:"filter_name";s:14:"Joomlaskipdirs";s:6:"object";s:3:"dir";s:7:"subtype";s:8:"children";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{s:10:"[SITEROOT]";a:34:{i:0;s:42:"administrator/components/com_akeeba/backup";i:1;s:28:"C:/wamp64/www/vionicshop/tmp";i:2;s:43:"C:/wamp64/www/vionicshop/administrator/logs";i:3;s:3:"tmp";i:4;s:3:"tmp";i:5;s:3:"tmp";i:6;s:19:"administrator/cache";i:7;s:19:"administrator/cache";i:8;s:5:"cache";i:9;s:5:"cache";i:10;s:19:"administrator/cache";i:11;s:5:"cache";i:12;s:19:"administrator/cache";i:13;s:12:"installation";i:14;s:12:"installation";i:15;s:12:"installation";i:16;s:42:"administrator/components/com_akeeba/backup";i:17;s:42:"administrator/components/com_akeeba/backup";i:18;s:42:"administrator/components/com_akeeba/backup";i:19;s:33:"components/libraries/cmslib/cache";i:20;s:33:"components/libraries/cmslib/cache";i:21;s:33:"components/libraries/cmslib/cache";i:22;s:4:"logs";i:23;s:4:"logs";i:24;s:4:"logs";i:25;s:3:"log";i:26;s:3:"log";i:27;s:3:"log";i:28;s:18:"administrator/logs";i:29;s:18:"administrator/logs";i:30;s:18:"administrator/logs";i:31;s:17:"administrator/log";i:32;s:17:"administrator/log";i:33;s:17:"administrator/log";}}s:10:" * fsTools";O:29:"Akeeba\Engine\Util\FileSystem":1:{s:40:" Akeeba\Engine\Util\FileSystem isWindows";b:1;}s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:15:"Joomlaskipfiles";O:36:"Akeeba\Engine\Filter\Joomlaskipfiles":11:{s:11:"filter_name";s:15:"Joomlaskipfiles";s:6:"object";s:3:"dir";s:7:"subtype";s:7:"content";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{s:10:"[SITEROOT]";a:34:{i:0;s:42:"administrator/components/com_akeeba/backup";i:1;s:28:"C:/wamp64/www/vionicshop/tmp";i:2;s:43:"C:/wamp64/www/vionicshop/administrator/logs";i:3;s:3:"tmp";i:4;s:3:"tmp";i:5;s:3:"tmp";i:6;s:19:"administrator/cache";i:7;s:19:"administrator/cache";i:8;s:5:"cache";i:9;s:5:"cache";i:10;s:19:"administrator/cache";i:11;s:5:"cache";i:12;s:19:"administrator/cache";i:13;s:12:"installation";i:14;s:12:"installation";i:15;s:12:"installation";i:16;s:42:"administrator/components/com_akeeba/backup";i:17;s:42:"administrator/components/com_akeeba/backup";i:18;s:42:"administrator/components/com_akeeba/backup";i:19;s:33:"components/libraries/cmslib/cache";i:20;s:33:"components/libraries/cmslib/cache";i:21;s:33:"components/libraries/cmslib/cache";i:22;s:4:"logs";i:23;s:4:"logs";i:24;s:4:"logs";i:25;s:3:"log";i:26;s:3:"log";i:27;s:3:"log";i:28;s:18:"administrator/logs";i:29;s:18:"administrator/logs";i:30;s:18:"administrator/logs";i:31;s:17:"administrator/log";i:32;s:17:"administrator/log";i:33;s:17:"administrator/log";}}s:10:" * fsTools";r:348;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:6:"Sitedb";O:27:"Akeeba\Engine\Filter\Sitedb":11:{s:11:"filter_name";s:6:"Sitedb";s:6:"object";s:2:"db";s:7:"subtype";s:9:"inclusion";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{s:8:"[SITEDB]";a:8:{s:4:"host";s:9:"localhost";s:4:"port";s:0:"";s:8:"username";s:4:"root";s:8:"password";N;s:8:"database";s:20:"coffeecu_beta_vionic";s:6:"prefix";s:6:"gr0us_";s:8:"dumpFile";s:8:"site.sql";s:6:"driver";s:28:"\Akeeba\Engine\Driver\Joomla";}}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:8:"Siteroot";O:29:"Akeeba\Engine\Filter\Siteroot":11:{s:11:"filter_name";s:8:"Siteroot";s:6:"object";s:3:"dir";s:7:"subtype";s:9:"inclusion";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{i:0;a:2:{i:0;s:10:"[SITEROOT]";i:1;N;}}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:16:"Systemcachefiles";O:37:"Akeeba\Engine\Filter\Systemcachefiles":11:{s:11:"filter_name";s:16:"Systemcachefiles";s:6:"object";s:4:"file";s:7:"subtype";s:3:"all";s:6:"method";s:5:"regex";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{s:10:"[SITEROOT]";a:5:{i:0;s:14:"#/Thumbs\.db$#";i:1;s:14:"#^Thumbs\.db$#";i:2;s:15:"#/\.DS_Store$#i";i:3;s:15:"#^\.DS_Store$#i";i:4;s:21:"#^core\.[\d]{1,10}$#i";}}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:20:"Stack\StackErrorlogs";O:41:"Akeeba\Engine\Filter\Stack\StackErrorlogs":11:{s:11:"filter_name";s:14:"stackerrorlogs";s:6:"object";s:4:"file";s:7:"subtype";s:3:"all";s:6:"method";s:3:"api";s:7:"enabled";b:1;s:14:" * filter_data";N;s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:20:"Stack\StackHoststats";O:41:"Akeeba\Engine\Filter\Stack\StackHoststats":11:{s:11:"filter_name";s:14:"stackhoststats";s:6:"object";s:3:"dir";s:7:"subtype";s:3:"all";s:6:"method";s:3:"api";s:7:"enabled";b:1;s:14:" * filter_data";N;s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:17:"Stack\StackFinder";O:38:"Akeeba\Engine\Filter\Stack\StackFinder":11:{s:11:"filter_name";s:0:"";s:6:"object";s:8:"dbobject";s:7:"subtype";s:7:"content";s:6:"method";s:3:"api";s:7:"enabled";b:1;s:14:" * filter_data";N;s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:19:"Stack\StackMyjoomla";O:40:"Akeeba\Engine\Filter\Stack\StackMyjoomla":11:{s:11:"filter_name";s:4:"base";s:6:"object";s:8:"dbobject";s:7:"subtype";s:7:"content";s:6:"method";s:3:"api";s:7:"enabled";b:1;s:14:" * filter_data";N;s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}}s:43:" Akeeba\Engine\Core\Filters cleanup_has_run";b:1;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:33:"\Akeeba\Engine\Filter\Directories";O:32:"Akeeba\Engine\Filter\Directories":11:{s:11:"filter_name";s:11:"directories";s:6:"object";s:3:"dir";s:7:"subtype";s:3:"all";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:29:"\Akeeba\Engine\Core\Kettenrad";O:28:"Akeeba\Engine\Core\Kettenrad":26:{s:41:" Akeeba\Engine\Core\Kettenrad array_cache";a:13:{s:6:"HasRun";i:0;s:6:"Domain";s:7:"Packing";s:4:"Step";s:64:"C:/wamp64/www/vionicph/components/com_jce/editor/libraries/uikit";s:7:"Substep";s:0:"";s:5:"Error";s:0:"";s:8:"Warnings";a:0:{}s:7:"Archive";s:37:"site-localhost-20180415-085901utc.jpa";s:3:"tag";s:7:"backend";s:8:"Progress";i:74;s:8:"backupid";s:3:"id1";s:9:"sleepTime";i:0;s:10:"stepNumber";i:17;s:9:"stepState";s:7:"running";}s:42:" Akeeba\Engine\Core\Kettenrad domain_chain";a:1:{i:0;a:2:{s:6:"domain";s:6:"finale";s:5:"class";s:12:"Finalization";}}s:36:" Akeeba\Engine\Core\Kettenrad domain";s:7:"Packing";s:35:" Akeeba\Engine\Core\Kettenrad class";s:4:"Pack";s:33:" Akeeba\Engine\Core\Kettenrad tag";s:7:"backend";s:41:" Akeeba\Engine\Core\Kettenrad total_steps";i:4;s:39:" Akeeba\Engine\Core\Kettenrad backup_id";s:3:"id1";s:45:" Akeeba\Engine\Core\Kettenrad warnings_issued";b:0;s:13:" * isPrepared";b:1;s:12:" * isRunning";b:1;s:13:" * isFinished";b:0;s:9:" * hasRan";b:0;s:16:" * active_domain";s:7:"Packing";s:14:" * active_step";s:64:"C:/wamp64/www/vionicph/components/com_jce/editor/libraries/uikit";s:17:" * active_substep";s:0:"";s:19:" * _parametersArray";a:4:{s:11:"description";s:43:"Backup taken on Sunday, 15 April 2018 08:59";s:7:"comment";s:0:"";s:6:"jpskey";s:0:"";s:8:"angiekey";s:0:"";}s:15:" * databaseRoot";a:0:{}s:41:" Akeeba\Engine\Base\Part warnings_pointer";i:0;s:15:" * nest_logging";b:1;s:20:" * installerSettings";O:8:"stdClass":9:{s:4:"name";s:23:"ANGIE for Joomla! Sites";s:7:"package";s:26:"angie.jpa,angie-joomla.jpa";s:8:"language";s:38:"language-angie.jpa,language-joomla.jpa";s:13:"installerroot";s:12:"installation";s:7:"sqlroot";s:16:"installation/sql";s:12:"databasesini";s:1:"1";s:6:"readme";s:1:"1";s:9:"extrainfo";s:1:"1";s:8:"password";s:1:"1";}s:15:" * waitTimeMsec";i:0;s:29:" * ignoreMinimumExecutionTime";b:0;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:31:"\Akeeba\Engine\Filter\Extradirs";O:30:"Akeeba\Engine\Filter\Extradirs":11:{s:11:"filter_name";s:9:"extradirs";s:6:"object";s:3:"dir";s:7:"subtype";s:9:"inclusion";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:27:"\Akeeba\Engine\Filter\Files";O:26:"Akeeba\Engine\Filter\Files":11:{s:11:"filter_name";s:5:"files";s:6:"object";s:4:"file";s:7:"subtype";s:3:"all";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:33:"\Akeeba\Engine\Filter\Incremental";r:231;s:29:"\Akeeba\Engine\Filter\Multidb";O:28:"Akeeba\Engine\Filter\Multidb":11:{s:11:"filter_name";s:7:"multidb";s:6:"object";s:2:"db";s:7:"subtype";s:9:"inclusion";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:38:"\Akeeba\Engine\Filter\Regexdirectories";O:37:"Akeeba\Engine\Filter\Regexdirectories":11:{s:11:"filter_name";s:16:"regexdirectories";s:6:"object";s:3:"dir";s:7:"subtype";s:3:"all";s:6:"method";s:5:"regex";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:32:"\Akeeba\Engine\Filter\Regexfiles";O:31:"Akeeba\Engine\Filter\Regexfiles":11:{s:11:"filter_name";s:10:"regexfiles";s:6:"object";s:4:"file";s:7:"subtype";s:3:"all";s:6:"method";s:5:"regex";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:35:"\Akeeba\Engine\Filter\Regexskipdirs";O:34:"Akeeba\Engine\Filter\Regexskipdirs":11:{s:11:"filter_name";s:13:"regexskipdirs";s:6:"object";s:3:"dir";s:7:"subtype";s:8:"children";s:6:"method";s:5:"regex";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:36:"\Akeeba\Engine\Filter\Regexskipfiles";O:35:"Akeeba\Engine\Filter\Regexskipfiles":11:{s:11:"filter_name";s:14:"regexskipfiles";s:6:"object";s:3:"dir";s:7:"subtype";s:7:"content";s:6:"method";s:5:"regex";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:36:"\Akeeba\Engine\Filter\Regextabledata";O:35:"Akeeba\Engine\Filter\Regextabledata":11:{s:11:"filter_name";s:14:"regextabledata";s:6:"object";s:8:"dbobject";s:7:"subtype";s:7:"content";s:6:"method";s:5:"regex";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:33:"\Akeeba\Engine\Filter\Regextables";O:32:"Akeeba\Engine\Filter\Regextables":11:{s:11:"filter_name";s:11:"regextables";s:6:"object";s:8:"dbobject";s:7:"subtype";s:3:"all";s:6:"method";s:5:"regex";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:30:"\Akeeba\Engine\Filter\Skipdirs";O:29:"Akeeba\Engine\Filter\Skipdirs":11:{s:11:"filter_name";s:8:"skipdirs";s:6:"object";s:3:"dir";s:7:"subtype";s:8:"children";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:31:"\Akeeba\Engine\Filter\Skipfiles";O:30:"Akeeba\Engine\Filter\Skipfiles":11:{s:11:"filter_name";s:9:"skipfiles";s:6:"object";s:3:"dir";s:7:"subtype";s:7:"content";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:31:"\Akeeba\Engine\Filter\Tabledata";O:30:"Akeeba\Engine\Filter\Tabledata":11:{s:11:"filter_name";s:9:"tabledata";s:6:"object";s:8:"dbobject";s:7:"subtype";s:7:"content";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:28:"\Akeeba\Engine\Filter\Tables";O:27:"Akeeba\Engine\Filter\Tables":11:{s:11:"filter_name";s:6:"tables";s:6:"object";s:8:"dbobject";s:7:"subtype";s:3:"all";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:32:"\Akeeba\Engine\Filter\Cvsfolders";r:243;s:34:"\Akeeba\Engine\Filter\Excludefiles";r:260;s:36:"\Akeeba\Engine\Filter\Excludefolders";r:276;s:38:"\Akeeba\Engine\Filter\Excludetabledata";r:291;s:36:"\Akeeba\Engine\Filter\Joomlaskipdirs";r:306;s:37:"\Akeeba\Engine\Filter\Joomlaskipfiles";r:354;s:31:"\Akeeba\Engine\Filter\Libraries";O:30:"Akeeba\Engine\Filter\Libraries":11:{s:11:"filter_name";s:9:"Libraries";s:6:"object";s:3:"dir";s:7:"subtype";s:9:"inclusion";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:28:"\Akeeba\Engine\Filter\Sitedb";r:401;s:30:"\Akeeba\Engine\Filter\Siteroot";r:422;s:38:"\Akeeba\Engine\Filter\Systemcachefiles";r:437;s:42:"\Akeeba\Engine\Filter\Stack\StackErrorlogs";r:455;s:42:"\Akeeba\Engine\Filter\Stack\StackHoststats";r:467;s:39:"\Akeeba\Engine\Filter\Stack\StackFinder";r:479;s:41:"\Akeeba\Engine\Filter\Stack\StackMyjoomla";r:491;s:25:"\Akeeba\Engine\Core\Timer";O:24:"Akeeba\Engine\Core\Timer":6:{s:39:" Akeeba\Engine\Core\Timer max_exec_time";d:22.5;s:36:" Akeeba\Engine\Core\Timer start_time";d:1523782890.4419651;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:31:"Akeeba\Engine\Util\PushMessages";O:31:"Akeeba\Engine\Util\PushMessages":2:{s:43:" Akeeba\Engine\Util\PushMessages connectors";a:0:{}s:40:" Akeeba\Engine\Util\PushMessages enabled";b:0;}s:31:"\Akeeba\Engine\Core\Domain\Init";O:30:"Akeeba\Engine\Core\Domain\Init":20:{s:43:" Akeeba\Engine\Core\Domain\Init description";s:43:"Backup taken on Sunday, 15 April 2018 08:59";s:39:" Akeeba\Engine\Core\Domain\Init comment";s:0:"";s:13:" * isPrepared";b:1;s:12:" * isRunning";b:0;s:13:" * isFinished";b:1;s:9:" * hasRan";b:0;s:16:" * active_domain";s:0:"";s:14:" * active_step";s:0:"";s:17:" * active_substep";s:0:"";s:19:" * _parametersArray";a:4:{s:11:"description";s:43:"Backup taken on Sunday, 15 April 2018 08:59";s:7:"comment";s:0:"";s:6:"jpskey";s:0:"";s:8:"angiekey";s:0:"";}s:15:" * databaseRoot";a:0:{}s:41:" Akeeba\Engine\Base\Part warnings_pointer";i:0;s:15:" * nest_logging";b:0;s:20:" * installerSettings";O:8:"stdClass":9:{s:4:"name";s:23:"ANGIE for Joomla! Sites";s:7:"package";s:26:"angie.jpa,angie-joomla.jpa";s:8:"language";s:38:"language-angie.jpa,language-joomla.jpa";s:13:"installerroot";s:12:"installation";s:7:"sqlroot";s:16:"installation/sql";s:12:"databasesini";s:1:"1";s:6:"readme";s:1:"1";s:9:"extrainfo";s:1:"1";s:8:"password";s:1:"1";}s:15:" * waitTimeMsec";i:0;s:29:" * ignoreMinimumExecutionTime";b:0;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:27:"\Akeeba\Engine\Archiver\Jpa";O:26:"Akeeba\Engine\Archiver\Jpa":25:{s:43:" Akeeba\Engine\Archiver\Jpa totalFilesCount";i:7176;s:47:" Akeeba\Engine\Archiver\Jpa totalCompressedSize";i:20682481;s:49:" Akeeba\Engine\Archiver\Jpa totalUncompressedSize";i:53193657;s:44:" Akeeba\Engine\Archiver\Jpa archiveSignature";s:3:"JPA";s:47:" Akeeba\Engine\Archiver\Jpa fileHeaderSignature";s:3:"JPF";s:51:" Akeeba\Engine\Archiver\Jpa splitArchiveExtraHeader";s:4:"JP";s:45:" Akeeba\Engine\Archiver\Jpa currentPartNumber";i:1;s:38:" Akeeba\Engine\Archiver\Jpa totalParts";i:1;s:12:"finishedPart";a:0:{}s:5:" * fp";N;s:7:" * cdfp";N;s:16:" * _dataFileName";s:103:"C:/wamp64/www/vionicph/administrator/components/com_akeeba/backup/site-localhost-20180415-085901utc.j01";s:31:" * dataFileNameWithoutExtension";s:99:"C:/wamp64/www/vionicph/administrator/components/com_akeeba/backup/site-localhost-20180415-085901utc";s:21:" * storeSymlinkTarget";b:0;s:11:" * partSize";s:10:"2147352576";s:18:" * useSplitArchive";b:1;s:55:" Akeeba\Engine\Archiver\BaseFileManagement filePointers";a:0:{}s:54:" Akeeba\Engine\Archiver\BaseFileManagement fileOffsets";a:1:{s:103:"C:/wamp64/www/vionicph/administrator/components/com_akeeba/backup/site-localhost-20180415-085901utc.j01";i:21232953;}s:10:" * fsUtils";O:29:"Akeeba\Engine\Util\FileSystem":1:{s:40:" Akeeba\Engine\Util\FileSystem isWindows";b:1;}s:11:" * _comment";s:0:"";s:38:" Akeeba\Engine\Archiver\Base _xform_fp";i:0;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:30:"\Akeeba\Engine\Util\Statistics";O:29:"Akeeba\Engine\Util\Statistics":7:{s:45:" Akeeba\Engine\Util\Statistics multipart_lock";b:0;s:44:" Akeeba\Engine\Util\Statistics statistics_id";i:1;s:42:" Akeeba\Engine\Util\Statistics cached_data";a:13:{s:11:"description";s:43:"Backup taken on Sunday, 15 April 2018 08:59";s:7:"comment";s:0:"";s:11:"backupstart";s:19:"2018-04-15 08:59:01";s:6:"status";s:3:"run";s:6:"origin";s:7:"backend";s:4:"type";s:4:"full";s:10:"profile_id";i:2;s:11:"archivename";s:37:"site-localhost-20180415-085901utc.jpa";s:13:"absolute_path";s:103:"C:/wamp64/www/vionicph/administrator/components/com_akeeba/backup/site-localhost-20180415-085901utc.jpa";s:9:"multipart";i:0;s:10:"filesexist";i:1;s:3:"tag";s:7:"backend";s:8:"backupid";s:3:"id1";}s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:36:"\Akeeba\Engine\Core\Domain\Installer";O:35:"Akeeba\Engine\Core\Domain\Installer":22:{s:43:" Akeeba\Engine\Core\Domain\Installer offset";i:25913;s:48:" Akeeba\Engine\Core\Domain\Installer runningSize";i:550510;s:47:" Akeeba\Engine\Core\Domain\Installer xformIndex";i:1;s:45:" Akeeba\Engine\Core\Domain\Installer progress";i:1;s:13:" * isPrepared";b:1;s:12:" * isRunning";b:0;s:13:" * isFinished";b:1;s:9:" * hasRan";b:0;s:16:" * active_domain";s:0:"";s:14:" * active_step";s:0:"";s:17:" * active_substep";s:0:"";s:19:" * _parametersArray";a:4:{s:11:"description";s:43:"Backup taken on Sunday, 15 April 2018 08:59";s:7:"comment";s:0:"";s:6:"jpskey";s:0:"";s:8:"angiekey";s:0:"";}s:15:" * databaseRoot";a:0:{}s:41:" Akeeba\Engine\Base\Part warnings_pointer";i:0;s:15:" * nest_logging";b:0;s:20:" * installerSettings";O:8:"stdClass":9:{s:4:"name";s:23:"ANGIE for Joomla! Sites";s:7:"package";s:26:"angie.jpa,angie-joomla.jpa";s:8:"language";s:38:"language-angie.jpa,language-joomla.jpa";s:13:"installerroot";s:12:"installation";s:7:"sqlroot";s:16:"installation/sql";s:12:"databasesini";s:1:"1";s:6:"readme";s:1:"1";s:9:"extrainfo";s:1:"1";s:8:"password";s:1:"1";}s:15:" * waitTimeMsec";i:0;s:29:" * ignoreMinimumExecutionTime";b:0;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:29:"\Akeeba\Engine\Core\Domain\Db";O:28:"Akeeba\Engine\Core\Domain\Db":24:{s:43:" Akeeba\Engine\Core\Domain\Db database_list";a:0:{}s:45:" Akeeba\Engine\Core\Domain\Db database_config";a:11:{s:4:"host";s:9:"localhost";s:4:"port";s:0:"";s:8:"username";s:4:"root";s:8:"password";N;s:8:"database";s:20:"coffeecu_beta_vionic";s:6:"prefix";s:6:"gr0us_";s:8:"dumpFile";s:8:"site.sql";s:6:"driver";s:28:"\Akeeba\Engine\Driver\Joomla";s:4:"root";s:8:"[SITEDB]";s:20:"process_empty_prefix";b:1;s:5:"parts";i:7;}s:41:" Akeeba\Engine\Core\Domain\Db dump_engine";N;s:43:" Akeeba\Engine\Core\Domain\Db databases_ini";s:178:"[site.sql]
dbtype = "mysqli"
dbtech = "mysql"
dbname = "coffeecu_beta_vionic"
sqlfile = "site.sql"
dbhost = "localhost"
dbuser = "root"
dbpass = ""
prefix = "gr0us_"
parts = "7"
";s:45:" Akeeba\Engine\Core\Domain\Db dumpedDatabases";a:1:{i:0;a:11:{s:4:"host";s:9:"localhost";s:4:"port";s:0:"";s:8:"username";s:4:"root";s:8:"password";N;s:8:"database";s:20:"coffeecu_beta_vionic";s:6:"prefix";s:6:"gr0us_";s:8:"dumpFile";s:8:"site.sql";s:6:"driver";s:28:"\Akeeba\Engine\Driver\Joomla";s:4:"root";s:8:"[SITEDB]";s:20:"process_empty_prefix";b:1;s:5:"parts";i:7;}}s:45:" Akeeba\Engine\Core\Domain\Db total_databases";i:1;s:13:" * isPrepared";b:1;s:12:" * isRunning";b:0;s:13:" * isFinished";b:1;s:9:" * hasRan";b:0;s:16:" * active_domain";s:0:"";s:14:" * active_step";s:0:"";s:17:" * active_substep";s:0:"";s:19:" * _parametersArray";a:4:{s:11:"description";s:43:"Backup taken on Sunday, 15 April 2018 08:59";s:7:"comment";s:0:"";s:6:"jpskey";s:0:"";s:8:"angiekey";s:0:"";}s:15:" * databaseRoot";a:0:{}s:41:" Akeeba\Engine\Base\Part warnings_pointer";i:0;s:15:" * nest_logging";b:0;s:20:" * installerSettings";O:8:"stdClass":9:{s:4:"name";s:23:"ANGIE for Joomla! Sites";s:7:"package";s:26:"angie.jpa,angie-joomla.jpa";s:8:"language";s:38:"language-angie.jpa,language-joomla.jpa";s:13:"installerroot";s:12:"installation";s:7:"sqlroot";s:16:"installation/sql";s:12:"databasesini";s:1:"1";s:6:"readme";s:1:"1";s:9:"extrainfo";s:1:"1";s:8:"password";s:1:"1";}s:15:" * waitTimeMsec";i:0;s:29:" * ignoreMinimumExecutionTime";b:0;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:26:"\Akeeba\Engine\Dump\Native";O:25:"Akeeba\Engine\Dump\Native":20:{s:34:" Akeeba\Engine\Dump\Native _engine";O:31:"Akeeba\Engine\Dump\Native\Mysql":47:{s:22:" * table_autoincrement";a:3:{s:5:"table";s:16:"vionc_viewlevels";s:5:"field";s:2:"id";s:5:"value";s:1:"6";}s:9:" * prefix";s:6:"gr0us_";s:7:" * host";s:9:"localhost";s:7:" * port";s:0:"";s:11:" * username";s:4:"root";s:11:" * password";N;s:11:" * database";s:20:"coffeecu_beta_vionic";s:9:" * driver";s:28:"\Akeeba\Engine\Driver\Joomla";s:20:" * postProcessValues";b:0;s:11:" * dumpFile";s:8:"site.sql";s:13:" * data_cache";s:0:"";s:16:" * largest_query";i:208876;s:13:" * cache_size";i:131072;s:21:" * processEmptyPrefix";b:1;s:10:"partNumber";i:6;s:27:" Akeeba\Engine\Dump\Base fp";N;s:11:" * tempFile";s:78:"C:/wamp64/www/vionicph/administrator/components/com_akeeba/backup/6b688441.sql";s:13:" * saveAsName";s:25:"installation/sql/site.s06";s:9:" * tables";a:0:{}s:14:" * tables_data";a:306:{s:23:"gr0us_acymailing_action";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:935:"CREATE TABLE `#__acymailing_action` (   `action_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(255) DEFAULT NULL,   `frequency` int(10) unsigned NOT NULL,   `nextdate` int(10) unsigned NOT NULL,   `description` text,   `server` varchar(255) NOT NULL,   `port` varchar(50) NOT NULL,   `connection_method` varchar(10) NOT NULL DEFAULT '0',   `secure_method` varchar(10) NOT NULL DEFAULT '0',   `self_signed` tinyint(4) NOT NULL DEFAULT '0',   `username` varchar(255) NOT NULL,   `password` varchar(50) NOT NULL,   `userid` int(10) unsigned DEFAULT NULL,   `conditions` text,   `actions` text,   `report` text,   `delete_wrong_emails` tinyint(4) NOT NULL DEFAULT '0',   `senderfrom` tinyint(4) NOT NULL DEFAULT '0',   `senderto` tinyint(4) NOT NULL DEFAULT '0',   `published` tinyint(4) NOT NULL DEFAULT '0',   `ordering` smallint(5) unsigned DEFAULT '0',   PRIMARY KEY (`action_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:23:"gr0us_acymailing_config";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:153:"CREATE TABLE `#__acymailing_config` (   `namekey` varchar(200) NOT NULL,   `value` text,   PRIMARY KEY (`namekey`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:23:"gr0us_acymailing_fields";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1324:"CREATE TABLE `#__acymailing_fields` (   `fieldid` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `fieldname` varchar(250) NOT NULL,   `namekey` varchar(50) NOT NULL,   `type` varchar(50) DEFAULT NULL,   `value` text NOT NULL,   `published` tinyint(3) unsigned NOT NULL DEFAULT '1',   `ordering` smallint(5) unsigned DEFAULT '99',   `options` text,   `core` tinyint(3) unsigned NOT NULL DEFAULT '0',   `required` tinyint(3) unsigned NOT NULL DEFAULT '0',   `backend` tinyint(3) unsigned NOT NULL DEFAULT '1',   `frontcomp` tinyint(3) unsigned NOT NULL DEFAULT '0',   `frontform` tinyint(3) unsigned NOT NULL DEFAULT '1',   `default` longtext,   `listing` tinyint(3) unsigned DEFAULT NULL,   `frontlisting` tinyint(3) unsigned NOT NULL DEFAULT '0',   `frontjoomlaprofile` tinyint(3) unsigned NOT NULL DEFAULT '0',   `frontjoomlaregistration` tinyint(3) unsigned NOT NULL DEFAULT '0',   `joomlaprofile` tinyint(3) unsigned NOT NULL DEFAULT '0',   `access` varchar(250) NOT NULL DEFAULT 'all',   `fieldcat` int(11) NOT NULL DEFAULT '0',   `listingfilter` tinyint(3) unsigned NOT NULL DEFAULT '0',   `frontlistingfilter` tinyint(3) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`fieldid`),   UNIQUE KEY `namekey` (`namekey`),   KEY `orderingindex` (`published`,`ordering`) ) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:23:"gr0us_acymailing_filter";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:419:"CREATE TABLE `#__acymailing_filter` (   `filid` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(250) DEFAULT NULL,   `description` text,   `published` tinyint(3) unsigned DEFAULT NULL,   `lasttime` int(10) unsigned DEFAULT NULL,   `trigger` text,   `report` text,   `action` text,   `filter` text,   `daycron` int(10) unsigned DEFAULT NULL,   PRIMARY KEY (`filid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:24:"gr0us_acymailing_forward";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:302:"CREATE TABLE `#__acymailing_forward` (   `subid` int(10) unsigned NOT NULL,   `mailid` mediumint(8) unsigned NOT NULL,   `date` int(10) unsigned NOT NULL,   `ip` varchar(50) DEFAULT NULL,   `nbforwarded` int(10) unsigned NOT NULL,   PRIMARY KEY (`subid`,`mailid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:28:"gr0us_acymailing_geolocation";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1168:"CREATE TABLE `#__acymailing_geolocation` (   `geolocation_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `geolocation_subid` int(10) unsigned NOT NULL DEFAULT '0',   `geolocation_type` varchar(255) NOT NULL DEFAULT 'subscription',   `geolocation_ip` varchar(255) NOT NULL DEFAULT '',   `geolocation_created` int(10) unsigned NOT NULL DEFAULT '0',   `geolocation_latitude` decimal(9,6) NOT NULL DEFAULT '0.000000',   `geolocation_longitude` decimal(9,6) NOT NULL DEFAULT '0.000000',   `geolocation_postal_code` varchar(255) NOT NULL DEFAULT '',   `geolocation_country` varchar(255) NOT NULL DEFAULT '',   `geolocation_country_code` varchar(255) NOT NULL DEFAULT '',   `geolocation_state` varchar(255) NOT NULL DEFAULT '',   `geolocation_state_code` varchar(255) NOT NULL DEFAULT '',   `geolocation_city` varchar(255) NOT NULL DEFAULT '',   `geolocation_continent` varchar(255) NOT NULL DEFAULT '',   `geolocation_timezone` varchar(255) NOT NULL DEFAULT '',   PRIMARY KEY (`geolocation_id`),   KEY `geolocation_type` (`geolocation_subid`,`geolocation_type`),   KEY `geolocation_ip_created` (`geolocation_ip`,`geolocation_created`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:24:"gr0us_acymailing_history";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:451:"CREATE TABLE `#__acymailing_history` (   `subid` int(10) unsigned NOT NULL,   `date` int(10) unsigned NOT NULL,   `ip` varchar(50) DEFAULT NULL,   `action` varchar(50) NOT NULL COMMENT 'different actions: created,modified,confirmed',   `data` text,   `source` text,   `mailid` mediumint(8) unsigned DEFAULT NULL,   PRIMARY KEY (`subid`,`date`),   KEY `dateindex` (`date`),   KEY `actionindex` (`action`,`mailid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:21:"gr0us_acymailing_list";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:991:"CREATE TABLE `#__acymailing_list` (   `name` varchar(250) NOT NULL,   `description` text,   `ordering` smallint(5) unsigned DEFAULT '0',   `listid` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `published` tinyint(4) DEFAULT NULL,   `userid` int(10) unsigned DEFAULT NULL,   `alias` varchar(250) DEFAULT NULL,   `color` varchar(30) DEFAULT NULL,   `visible` tinyint(4) NOT NULL DEFAULT '1',   `welmailid` mediumint(9) DEFAULT NULL,   `unsubmailid` mediumint(9) DEFAULT NULL,   `type` enum('list','campaign') NOT NULL DEFAULT 'list',   `access_sub` varchar(250) NOT NULL DEFAULT 'all',   `access_manage` varchar(250) NOT NULL DEFAULT 'none',   `languages` varchar(250) NOT NULL DEFAULT 'all',   `startrule` varchar(50) NOT NULL DEFAULT '0',   `category` varchar(250) NOT NULL DEFAULT '',   PRIMARY KEY (`listid`),   KEY `typeorderingindex` (`type`,`ordering`),   KEY `useridindex` (`userid`),   KEY `typeuseridindex` (`type`,`userid`) ) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:29:"gr0us_acymailing_listcampaign";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:208:"CREATE TABLE `#__acymailing_listcampaign` (   `campaignid` smallint(5) unsigned NOT NULL,   `listid` smallint(5) unsigned NOT NULL,   PRIMARY KEY (`campaignid`,`listid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_acymailing_listmail";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:197:"CREATE TABLE `#__acymailing_listmail` (   `listid` smallint(5) unsigned NOT NULL,   `mailid` mediumint(8) unsigned NOT NULL,   PRIMARY KEY (`listid`,`mailid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:24:"gr0us_acymailing_listsub";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:386:"CREATE TABLE `#__acymailing_listsub` (   `listid` smallint(5) unsigned NOT NULL,   `subid` int(10) unsigned NOT NULL,   `subdate` int(10) unsigned DEFAULT NULL,   `unsubdate` int(10) unsigned DEFAULT NULL,   `status` tinyint(4) NOT NULL,   PRIMARY KEY (`listid`,`subid`),   KEY `subidindex` (`subid`),   KEY `listidstatusindex` (`listid`,`status`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:21:"gr0us_acymailing_mail";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1531:"CREATE TABLE `#__acymailing_mail` (   `mailid` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,   `subject` varchar(250) NOT NULL,   `body` longtext NOT NULL,   `altbody` longtext NOT NULL,   `published` tinyint(4) DEFAULT '1',   `senddate` int(10) unsigned DEFAULT NULL,   `created` int(10) unsigned DEFAULT NULL,   `lastupdate` int(10) unsigned DEFAULT NULL,   `userlastupdate` int(10) unsigned DEFAULT NULL,   `fromname` varchar(250) DEFAULT NULL,   `fromemail` varchar(250) DEFAULT NULL,   `replyname` varchar(250) DEFAULT NULL,   `replyemail` varchar(250) DEFAULT NULL,   `bccaddresses` varchar(250) DEFAULT NULL,   `type` enum('news','autonews','followup','unsub','welcome','notification','joomlanotification','action','article') NOT NULL DEFAULT 'news',   `visible` tinyint(4) NOT NULL DEFAULT '1',   `userid` int(10) unsigned DEFAULT NULL,   `alias` varchar(250) DEFAULT NULL,   `attach` text,   `favicon` text,   `html` tinyint(4) NOT NULL DEFAULT '1',   `tempid` smallint(6) NOT NULL DEFAULT '0',   `key` varchar(200) DEFAULT NULL,   `frequency` varchar(50) DEFAULT NULL,   `params` text,   `sentby` int(10) unsigned DEFAULT NULL,   `metakey` text,   `metadesc` text,   `filter` text,   `language` varchar(50) NOT NULL DEFAULT '',   `abtesting` varchar(250) DEFAULT NULL,   `thumb` varchar(250) DEFAULT NULL,   `summary` text NOT NULL,   PRIMARY KEY (`mailid`),   KEY `senddate` (`senddate`),   KEY `typemailidindex` (`type`,`mailid`),   KEY `useridindex` (`userid`) ) ENGINE=MyISAM AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:22:"gr0us_acymailing_queue";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:496:"CREATE TABLE `#__acymailing_queue` (   `senddate` int(10) unsigned NOT NULL,   `subid` int(10) unsigned NOT NULL,   `mailid` mediumint(8) unsigned NOT NULL,   `priority` tinyint(3) unsigned DEFAULT '3',   `try` tinyint(3) unsigned NOT NULL DEFAULT '0',   `paramqueue` varchar(250) DEFAULT NULL,   PRIMARY KEY (`subid`,`mailid`),   KEY `listingindex` (`senddate`,`subid`),   KEY `mailidindex` (`mailid`),   KEY `orderingindex` (`priority`,`senddate`,`subid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:22:"gr0us_acymailing_rules";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:436:"CREATE TABLE `#__acymailing_rules` (   `ruleid` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(250) NOT NULL,   `ordering` smallint(6) DEFAULT NULL,   `regex` text NOT NULL,   `executed_on` text NOT NULL,   `action_message` text NOT NULL,   `action_user` text NOT NULL,   `published` tinyint(3) unsigned NOT NULL,   PRIMARY KEY (`ruleid`),   KEY `ordering` (`published`,`ordering`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:22:"gr0us_acymailing_stats";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:797:"CREATE TABLE `#__acymailing_stats` (   `mailid` mediumint(8) unsigned NOT NULL,   `senthtml` int(10) unsigned NOT NULL DEFAULT '0',   `senttext` int(10) unsigned NOT NULL DEFAULT '0',   `senddate` int(10) unsigned NOT NULL,   `openunique` mediumint(8) unsigned NOT NULL DEFAULT '0',   `opentotal` int(10) unsigned NOT NULL DEFAULT '0',   `bounceunique` mediumint(8) unsigned NOT NULL DEFAULT '0',   `fail` mediumint(8) unsigned NOT NULL DEFAULT '0',   `clicktotal` int(10) unsigned NOT NULL DEFAULT '0',   `clickunique` mediumint(8) unsigned NOT NULL DEFAULT '0',   `unsub` mediumint(8) unsigned NOT NULL DEFAULT '0',   `forward` mediumint(8) unsigned NOT NULL DEFAULT '0',   `bouncedetails` text,   PRIMARY KEY (`mailid`),   KEY `senddateindex` (`senddate`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:27:"gr0us_acymailing_subscriber";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1112:"CREATE TABLE `#__acymailing_subscriber` (   `subid` int(10) unsigned NOT NULL AUTO_INCREMENT,   `email` varchar(200) NOT NULL,   `userid` int(10) unsigned NOT NULL DEFAULT '0',   `name` varchar(250) NOT NULL DEFAULT '',   `created` int(10) unsigned DEFAULT NULL,   `confirmed` tinyint(4) NOT NULL DEFAULT '0',   `enabled` tinyint(4) NOT NULL DEFAULT '1',   `accept` tinyint(4) NOT NULL DEFAULT '1',   `ip` varchar(100) DEFAULT NULL,   `html` tinyint(4) NOT NULL DEFAULT '1',   `key` varchar(250) DEFAULT NULL,   `confirmed_date` int(10) unsigned NOT NULL DEFAULT '0',   `confirmed_ip` varchar(100) DEFAULT NULL,   `lastopen_date` int(10) unsigned NOT NULL DEFAULT '0',   `lastopen_ip` varchar(100) DEFAULT NULL,   `lastclick_date` int(10) unsigned NOT NULL DEFAULT '0',   `lastsent_date` int(10) unsigned NOT NULL DEFAULT '0',   `source` varchar(250) NOT NULL DEFAULT '',   `filterflags` varchar(50) NOT NULL DEFAULT '',   PRIMARY KEY (`subid`),   UNIQUE KEY `email` (`email`),   KEY `userid` (`userid`),   KEY `queueindex` (`enabled`,`accept`,`confirmed`) ) ENGINE=MyISAM AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:20:"gr0us_acymailing_tag";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:259:"CREATE TABLE `#__acymailing_tag` (   `tagid` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(250) NOT NULL,   `userid` int(10) unsigned DEFAULT NULL,   PRIMARY KEY (`tagid`),   KEY `useridindex` (`userid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:24:"gr0us_acymailing_tagmail";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:194:"CREATE TABLE `#__acymailing_tagmail` (   `tagid` smallint(5) unsigned NOT NULL,   `mailid` mediumint(8) unsigned NOT NULL,   PRIMARY KEY (`tagid`,`mailid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_acymailing_template";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:998:"CREATE TABLE `#__acymailing_template` (   `tempid` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(250) DEFAULT NULL,   `description` text,   `body` longtext,   `altbody` longtext,   `header` longtext,   `created` int(10) unsigned DEFAULT NULL,   `published` tinyint(4) NOT NULL DEFAULT '1',   `premium` tinyint(4) NOT NULL DEFAULT '0',   `ordering` smallint(5) unsigned DEFAULT '0',   `namekey` varchar(50) NOT NULL,   `styles` text,   `subject` varchar(250) DEFAULT NULL,   `stylesheet` text,   `fromname` varchar(250) DEFAULT NULL,   `fromemail` varchar(250) DEFAULT NULL,   `replyname` varchar(250) DEFAULT NULL,   `replyemail` varchar(250) DEFAULT NULL,   `thumb` varchar(250) DEFAULT NULL,   `readmore` varchar(250) DEFAULT NULL,   `access` varchar(250) NOT NULL DEFAULT 'all',   `category` varchar(250) NOT NULL DEFAULT '',   PRIMARY KEY (`tempid`),   UNIQUE KEY `namekey` (`namekey`),   KEY `orderingindex` (`ordering`) ) ENGINE=MyISAM AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:20:"gr0us_acymailing_url";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:230:"CREATE TABLE `#__acymailing_url` (   `urlid` int(10) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(250) NOT NULL,   `url` text NOT NULL,   PRIMARY KEY (`urlid`),   KEY `url` (`url`(250)) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_acymailing_urlclick";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:449:"CREATE TABLE `#__acymailing_urlclick` (   `urlid` int(10) unsigned NOT NULL,   `mailid` mediumint(8) unsigned NOT NULL,   `click` smallint(5) unsigned NOT NULL DEFAULT '0',   `subid` int(10) unsigned NOT NULL,   `date` int(10) unsigned NOT NULL,   `ip` varchar(100) DEFAULT NULL,   PRIMARY KEY (`urlid`,`mailid`,`subid`),   KEY `dateindex` (`date`),   KEY `mailidindex` (`mailid`),   KEY `subidindex` (`subid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:26:"gr0us_acymailing_userstats";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:868:"CREATE TABLE `#__acymailing_userstats` (   `mailid` mediumint(8) unsigned NOT NULL,   `subid` int(10) unsigned NOT NULL,   `html` tinyint(3) unsigned NOT NULL DEFAULT '1',   `sent` tinyint(3) unsigned NOT NULL DEFAULT '1',   `senddate` int(10) unsigned NOT NULL,   `open` tinyint(3) unsigned NOT NULL DEFAULT '0',   `opendate` int(11) NOT NULL,   `bounce` tinyint(4) NOT NULL DEFAULT '0',   `fail` tinyint(4) NOT NULL DEFAULT '0',   `ip` varchar(100) DEFAULT NULL,   `browser` varchar(255) DEFAULT NULL,   `browser_version` tinyint(3) unsigned DEFAULT NULL,   `is_mobile` tinyint(3) unsigned DEFAULT NULL,   `mobile_os` varchar(255) DEFAULT NULL,   `user_agent` varchar(255) DEFAULT NULL,   `bouncerule` varchar(255) DEFAULT NULL,   PRIMARY KEY (`mailid`,`subid`),   KEY `senddateindex` (`senddate`),   KEY `subidindex` (`subid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:17:"gr0us_ak_profiles";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:404:"CREATE TABLE `#__ak_profiles` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `description` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `configuration` longtext COLLATE utf8mb4_unicode_ci,   `filters` longtext COLLATE utf8mb4_unicode_ci,   `quickicon` tinyint(3) NOT NULL DEFAULT '1',   PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:14:"gr0us_ak_stats";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1262:"CREATE TABLE `#__ak_stats` (   `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,   `description` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `comment` longtext COLLATE utf8mb4_unicode_ci,   `backupstart` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   `backupend` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   `status` enum('run','fail','complete') COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'run',   `origin` varchar(30) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'backend',   `type` varchar(30) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'full',   `profile_id` bigint(20) NOT NULL DEFAULT '1',   `archivename` longtext COLLATE utf8mb4_unicode_ci,   `absolute_path` longtext COLLATE utf8mb4_unicode_ci,   `multipart` int(11) NOT NULL DEFAULT '0',   `tag` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `backupid` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `filesexist` tinyint(3) NOT NULL DEFAULT '1',   `remote_filename` varchar(1000) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `total_size` bigint(20) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   KEY `idx_fullstatus` (`filesexist`,`status`),   KEY `idx_stale` (`status`,`origin`) ) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:16:"gr0us_ak_storage";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:319:"CREATE TABLE `#__ak_storage` (   `tag` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `lastupdate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,   `data` longtext COLLATE utf8mb4_unicode_ci,   PRIMARY KEY (`tag`(100)) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:19:"gr0us_akeeba_common";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:238:"CREATE TABLE `#__akeeba_common` (   `key` varchar(192) COLLATE utf8mb4_unicode_ci NOT NULL,   `value` longtext COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`key`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:12:"gr0us_assets";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:911:"CREATE TABLE `#__assets` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Primary Key',   `parent_id` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set parent.',   `lft` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set lft.',   `rgt` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set rgt.',   `level` int(10) unsigned NOT NULL COMMENT 'The cached level in the nested tree.',   `name` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The unique name for the asset.\n',   `title` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The descriptive title for the asset.',   `rules` varchar(5120) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'JSON encoded access control.',   PRIMARY KEY (`id`),   UNIQUE KEY `idx_asset_name` (`name`),   KEY `idx_lft_rgt` (`lft`,`rgt`),   KEY `idx_parent_id` (`parent_id`) ) ENGINE=InnoDB AUTO_INCREMENT=169 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:18:"gr0us_associations";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:467:"CREATE TABLE `#__associations` (   `id` int(11) NOT NULL COMMENT 'A reference to the associated item.',   `context` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The context of the associated item.',   `key` char(32) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The key for the association computed from an md5 on associated ids.',   PRIMARY KEY (`context`,`id`),   KEY `idx_key` (`key`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:20:"gr0us_banner_clients";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1034:"CREATE TABLE `#__banner_clients` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `contact` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `email` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `extrainfo` text COLLATE utf8mb4_unicode_ci NOT NULL,   `state` tinyint(3) NOT NULL DEFAULT '0',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `metakey` text COLLATE utf8mb4_unicode_ci NOT NULL,   `own_prefix` tinyint(4) NOT NULL DEFAULT '0',   `metakey_prefix` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `purchase_type` tinyint(4) NOT NULL DEFAULT '-1',   `track_clicks` tinyint(4) NOT NULL DEFAULT '-1',   `track_impressions` tinyint(4) NOT NULL DEFAULT '-1',   PRIMARY KEY (`id`),   KEY `idx_own_prefix` (`own_prefix`),   KEY `idx_metakey_prefix` (`metakey_prefix`(100)) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:19:"gr0us_banner_tracks";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:437:"CREATE TABLE `#__banner_tracks` (   `track_date` datetime NOT NULL,   `track_type` int(10) unsigned NOT NULL,   `banner_id` int(10) unsigned NOT NULL,   `count` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`track_date`,`track_type`,`banner_id`),   KEY `idx_track_date` (`track_date`),   KEY `idx_track_type` (`track_type`),   KEY `idx_banner_id` (`banner_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:13:"gr0us_banners";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2241:"CREATE TABLE `#__banners` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `cid` int(11) NOT NULL DEFAULT '0',   `type` int(11) NOT NULL DEFAULT '0',   `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `imptotal` int(11) NOT NULL DEFAULT '0',   `impmade` int(11) NOT NULL DEFAULT '0',   `clicks` int(11) NOT NULL DEFAULT '0',   `clickurl` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `state` tinyint(3) NOT NULL DEFAULT '0',   `catid` int(10) unsigned NOT NULL DEFAULT '0',   `description` text COLLATE utf8mb4_unicode_ci NOT NULL,   `custombannercode` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL,   `sticky` tinyint(1) unsigned NOT NULL DEFAULT '0',   `ordering` int(11) NOT NULL DEFAULT '0',   `metakey` text COLLATE utf8mb4_unicode_ci NOT NULL,   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `own_prefix` tinyint(1) NOT NULL DEFAULT '0',   `metakey_prefix` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `purchase_type` tinyint(4) NOT NULL DEFAULT '-1',   `track_clicks` tinyint(4) NOT NULL DEFAULT '-1',   `track_impressions` tinyint(4) NOT NULL DEFAULT '-1',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `reset` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `created_by` int(10) unsigned NOT NULL DEFAULT '0',   `created_by_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `version` int(10) unsigned NOT NULL DEFAULT '1',   PRIMARY KEY (`id`),   KEY `idx_state` (`state`),   KEY `idx_own_prefix` (`own_prefix`),   KEY `idx_metakey_prefix` (`metakey_prefix`(100)),   KEY `idx_banner_catid` (`catid`),   KEY `idx_language` (`language`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:16:"gr0us_categories";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2190:"CREATE TABLE `#__categories` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `asset_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'FK to the #__assets table.',   `parent_id` int(10) unsigned NOT NULL DEFAULT '0',   `lft` int(11) NOT NULL DEFAULT '0',   `rgt` int(11) NOT NULL DEFAULT '0',   `level` int(10) unsigned NOT NULL DEFAULT '0',   `path` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `extension` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `description` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `published` tinyint(1) NOT NULL DEFAULT '0',   `checked_out` int(11) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `access` int(10) unsigned NOT NULL DEFAULT '0',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `metadesc` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'The meta description for the page.',   `metakey` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'The meta keywords for the page.',   `metadata` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'JSON encoded metadata properties.',   `created_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `created_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `modified_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `hits` int(10) unsigned NOT NULL DEFAULT '0',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `version` int(10) unsigned NOT NULL DEFAULT '1',   PRIMARY KEY (`id`),   KEY `cat_idx` (`extension`,`published`,`access`),   KEY `idx_access` (`access`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_path` (`path`(100)),   KEY `idx_left_right` (`lft`,`rgt`),   KEY `idx_alias` (`alias`(100)),   KEY `idx_language` (`language`) ) ENGINE=InnoDB AUTO_INCREMENT=28 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:21:"gr0us_contact_details";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:3106:"CREATE TABLE `#__contact_details` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,   `con_position` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `address` text COLLATE utf8mb4_unicode_ci,   `suburb` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `state` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `country` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `postcode` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `telephone` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `fax` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `misc` mediumtext COLLATE utf8mb4_unicode_ci,   `image` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `email_to` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `default_con` tinyint(1) unsigned NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '0',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `ordering` int(11) NOT NULL DEFAULT '0',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `user_id` int(11) NOT NULL DEFAULT '0',   `catid` int(11) NOT NULL DEFAULT '0',   `access` int(10) unsigned NOT NULL DEFAULT '0',   `mobile` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `webpage` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `sortname1` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `sortname2` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `sortname3` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `language` varchar(7) COLLATE utf8mb4_unicode_ci NOT NULL,   `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(10) unsigned NOT NULL DEFAULT '0',   `created_by_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `metakey` text COLLATE utf8mb4_unicode_ci NOT NULL,   `metadesc` text COLLATE utf8mb4_unicode_ci NOT NULL,   `metadata` text COLLATE utf8mb4_unicode_ci NOT NULL,   `featured` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT 'Set if contact is featured.',   `xreference` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'A reference to enable linkages to external data sets.',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `version` int(10) unsigned NOT NULL DEFAULT '1',   `hits` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   KEY `idx_access` (`access`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_state` (`published`),   KEY `idx_catid` (`catid`),   KEY `idx_createdby` (`created_by`),   KEY `idx_featured_catid` (`featured`,`catid`),   KEY `idx_language` (`language`),   KEY `idx_xreference` (`xreference`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:13:"gr0us_content";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2393:"CREATE TABLE `#__content` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `asset_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'FK to the #__assets table.',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `introtext` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `fulltext` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `state` tinyint(3) NOT NULL DEFAULT '0',   `catid` int(10) unsigned NOT NULL DEFAULT '0',   `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(10) unsigned NOT NULL DEFAULT '0',   `created_by_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `images` text COLLATE utf8mb4_unicode_ci NOT NULL,   `urls` text COLLATE utf8mb4_unicode_ci NOT NULL,   `attribs` varchar(5120) COLLATE utf8mb4_unicode_ci NOT NULL,   `version` int(10) unsigned NOT NULL DEFAULT '1',   `ordering` int(11) NOT NULL DEFAULT '0',   `metakey` text COLLATE utf8mb4_unicode_ci NOT NULL,   `metadesc` text COLLATE utf8mb4_unicode_ci NOT NULL,   `access` int(10) unsigned NOT NULL DEFAULT '0',   `hits` int(10) unsigned NOT NULL DEFAULT '0',   `metadata` text COLLATE utf8mb4_unicode_ci NOT NULL,   `featured` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT 'Set if article is featured.',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The language code for the article.',   `xreference` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'A reference to enable linkages to external data sets.',   PRIMARY KEY (`id`),   KEY `idx_access` (`access`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_state` (`state`),   KEY `idx_catid` (`catid`),   KEY `idx_createdby` (`created_by`),   KEY `idx_featured_catid` (`featured`,`catid`),   KEY `idx_language` (`language`),   KEY `idx_xreference` (`xreference`),   KEY `idx_alias` (`alias`(191)) ) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:23:"gr0us_content_frontpage";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:223:"CREATE TABLE `#__content_frontpage` (   `content_id` int(11) NOT NULL DEFAULT '0',   `ordering` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`content_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:20:"gr0us_content_rating";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:358:"CREATE TABLE `#__content_rating` (   `content_id` int(11) NOT NULL DEFAULT '0',   `rating_sum` int(10) unsigned NOT NULL DEFAULT '0',   `rating_count` int(10) unsigned NOT NULL DEFAULT '0',   `lastip` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   PRIMARY KEY (`content_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:19:"gr0us_content_types";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:783:"CREATE TABLE `#__content_types` (   `type_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `type_title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `type_alias` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `table` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `rules` text COLLATE utf8mb4_unicode_ci NOT NULL,   `field_mappings` text COLLATE utf8mb4_unicode_ci NOT NULL,   `router` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `content_history_options` varchar(5120) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT 'JSON string for com_contenthistory options',   PRIMARY KEY (`type_id`),   KEY `idx_alias` (`type_alias`(100)) ) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_contentitem_tag_map";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:892:"CREATE TABLE `#__contentitem_tag_map` (   `type_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `core_content_id` int(10) unsigned NOT NULL COMMENT 'PK from the core content table',   `content_item_id` int(11) NOT NULL COMMENT 'PK from the content type table',   `tag_id` int(10) unsigned NOT NULL COMMENT 'PK from the tag table',   `tag_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Date of most recent save for this tag-item',   `type_id` mediumint(8) NOT NULL COMMENT 'PK from the content_type table',   UNIQUE KEY `uc_ItemnameTagid` (`type_id`,`content_item_id`,`tag_id`),   KEY `idx_tag_type` (`tag_id`,`type_id`),   KEY `idx_date_id` (`tag_date`,`tag_id`),   KEY `idx_core_content_id` (`core_content_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Maps items from content tables to tags';
";s:12:"dependencies";a:0:{}}s:23:"gr0us_core_log_searches";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:230:"CREATE TABLE `#__core_log_searches` (   `search_term` varchar(128) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `hits` int(10) unsigned NOT NULL DEFAULT '0' ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:16:"gr0us_extensions";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1325:"CREATE TABLE `#__extensions` (   `extension_id` int(11) NOT NULL AUTO_INCREMENT,   `package_id` int(11) NOT NULL DEFAULT '0' COMMENT 'Parent package ID for extensions installed as a package.',   `name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,   `type` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL,   `element` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,   `folder` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,   `client_id` tinyint(3) NOT NULL,   `enabled` tinyint(3) NOT NULL DEFAULT '0',   `access` int(10) unsigned NOT NULL DEFAULT '1',   `protected` tinyint(3) NOT NULL DEFAULT '0',   `manifest_cache` text COLLATE utf8mb4_unicode_ci NOT NULL,   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `custom_data` text COLLATE utf8mb4_unicode_ci NOT NULL,   `system_data` text COLLATE utf8mb4_unicode_ci NOT NULL,   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `ordering` int(11) DEFAULT '0',   `state` int(11) DEFAULT '0',   PRIMARY KEY (`extension_id`),   KEY `element_clientid` (`element`,`client_id`),   KEY `element_folder_clientid` (`element`,`folder`,`client_id`),   KEY `extension` (`type`,`element`,`folder`,`client_id`) ) ENGINE=InnoDB AUTO_INCREMENT=10163 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:12:"gr0us_fields";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1752:"CREATE TABLE `#__fields` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `asset_id` int(10) unsigned NOT NULL DEFAULT '0',   `context` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `group_id` int(10) unsigned NOT NULL DEFAULT '0',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `label` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `default_value` text COLLATE utf8mb4_unicode_ci NOT NULL,   `type` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'text',   `note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `description` text COLLATE utf8mb4_unicode_ci NOT NULL,   `state` tinyint(1) NOT NULL DEFAULT '0',   `required` tinyint(1) NOT NULL DEFAULT '0',   `checked_out` int(11) NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `ordering` int(11) NOT NULL DEFAULT '0',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `fieldparams` text COLLATE utf8mb4_unicode_ci NOT NULL,   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `created_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `modified_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `access` int(11) NOT NULL DEFAULT '1',   PRIMARY KEY (`id`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_state` (`state`),   KEY `idx_created_user_id` (`created_user_id`),   KEY `idx_access` (`access`),   KEY `idx_context` (`context`(191)),   KEY `idx_language` (`language`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:23:"gr0us_fields_categories";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:236:"CREATE TABLE `#__fields_categories` (   `field_id` int(11) NOT NULL DEFAULT '0',   `category_id` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`field_id`,`category_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:19:"gr0us_fields_groups";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1303:"CREATE TABLE `#__fields_groups` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `asset_id` int(10) unsigned NOT NULL DEFAULT '0',   `context` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `description` text COLLATE utf8mb4_unicode_ci NOT NULL,   `state` tinyint(1) NOT NULL DEFAULT '0',   `checked_out` int(11) NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `ordering` int(11) NOT NULL DEFAULT '0',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(10) unsigned NOT NULL DEFAULT '0',   `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `access` int(11) NOT NULL DEFAULT '1',   PRIMARY KEY (`id`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_state` (`state`),   KEY `idx_created_by` (`created_by`),   KEY `idx_access` (`access`),   KEY `idx_context` (`context`(191)),   KEY `idx_language` (`language`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:19:"gr0us_fields_values";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:412:"CREATE TABLE `#__fields_values` (   `field_id` int(10) unsigned NOT NULL,   `item_id` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'Allow references to items which have strings as ids, eg. none db systems.',   `value` text COLLATE utf8mb4_unicode_ci NOT NULL,   KEY `idx_field_id` (`field_id`),   KEY `idx_item_id` (`item_id`(191)) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:20:"gr0us_finder_filters";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:758:"CREATE TABLE `#__finder_filters` (   `filter_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `title` varchar(255) NOT NULL,   `alias` varchar(255) NOT NULL,   `state` tinyint(1) NOT NULL DEFAULT '1',   `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(10) unsigned NOT NULL,   `created_by_alias` varchar(255) NOT NULL,   `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `map_count` int(10) unsigned NOT NULL DEFAULT '0',   `data` text NOT NULL,   `params` mediumtext,   PRIMARY KEY (`filter_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:18:"gr0us_finder_links";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:1300:"CREATE TABLE `#__finder_links` (   `link_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `url` varchar(255) NOT NULL,   `route` varchar(255) NOT NULL,   `title` varchar(400) DEFAULT NULL,   `description` text,   `indexdate` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `md5sum` varchar(32) DEFAULT NULL,   `published` tinyint(1) NOT NULL DEFAULT '1',   `state` int(5) DEFAULT '1',   `access` int(5) DEFAULT '0',   `language` varchar(8) NOT NULL,   `publish_start_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_end_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `start_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `end_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `list_price` double unsigned NOT NULL DEFAULT '0',   `sale_price` double unsigned NOT NULL DEFAULT '0',   `type_id` int(11) NOT NULL,   `object` mediumblob NOT NULL,   PRIMARY KEY (`link_id`),   KEY `idx_type` (`type_id`),   KEY `idx_title` (`title`(100)),   KEY `idx_md5` (`md5sum`),   KEY `idx_url` (`url`(75)),   KEY `idx_published_list` (`published`,`state`,`access`,`publish_start_date`,`publish_end_date`,`list_price`),   KEY `idx_published_sale` (`published`,`state`,`access`,`publish_start_date`,`publish_end_date`,`sale_price`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_finder_links_terms0";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms0` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_finder_links_terms1";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms1` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_finder_links_terms2";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms2` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_finder_links_terms3";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms3` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_finder_links_terms4";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms4` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_finder_links_terms5";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms5` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_finder_links_terms6";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms6` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_finder_links_terms7";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms7` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_finder_links_terms8";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms8` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_finder_links_terms9";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms9` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_finder_links_termsa";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_termsa` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_finder_links_termsb";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_termsb` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_finder_links_termsc";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_termsc` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_finder_links_termsd";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_termsd` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_finder_links_termse";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_termse` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_finder_links_termsf";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_termsf` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:21:"gr0us_finder_taxonomy";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:587:"CREATE TABLE `#__finder_taxonomy` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `parent_id` int(10) unsigned NOT NULL DEFAULT '0',   `title` varchar(255) NOT NULL,   `state` tinyint(1) unsigned NOT NULL DEFAULT '1',   `access` tinyint(1) unsigned NOT NULL DEFAULT '0',   `ordering` tinyint(1) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   KEY `parent_id` (`parent_id`),   KEY `state` (`state`),   KEY `ordering` (`ordering`),   KEY `access` (`access`),   KEY `idx_parent_published` (`parent_id`,`state`,`access`) ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_finder_taxonomy_map";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:253:"CREATE TABLE `#__finder_taxonomy_map` (   `link_id` int(10) unsigned NOT NULL,   `node_id` int(10) unsigned NOT NULL,   PRIMARY KEY (`link_id`,`node_id`),   KEY `link_id` (`link_id`),   KEY `node_id` (`node_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:18:"gr0us_finder_terms";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:655:"CREATE TABLE `#__finder_terms` (   `term_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `term` varchar(75) NOT NULL,   `stem` varchar(75) NOT NULL,   `common` tinyint(1) unsigned NOT NULL DEFAULT '0',   `phrase` tinyint(1) unsigned NOT NULL DEFAULT '0',   `weight` float unsigned NOT NULL DEFAULT '0',   `soundex` varchar(75) NOT NULL,   `links` int(10) NOT NULL DEFAULT '0',   `language` char(3) NOT NULL DEFAULT '',   PRIMARY KEY (`term_id`),   UNIQUE KEY `idx_term` (`term`),   KEY `idx_term_phrase` (`term`,`phrase`),   KEY `idx_stem_phrase` (`stem`,`phrase`),   KEY `idx_soundex_phrase` (`soundex`,`phrase`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_finder_terms_common";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:219:"CREATE TABLE `#__finder_terms_common` (   `term` varchar(75) NOT NULL,   `language` varchar(3) NOT NULL,   KEY `idx_word_lang` (`term`,`language`),   KEY `idx_lang` (`language`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:19:"gr0us_finder_tokens";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:446:"CREATE TABLE `#__finder_tokens` (   `term` varchar(75) NOT NULL,   `stem` varchar(75) NOT NULL,   `common` tinyint(1) unsigned NOT NULL DEFAULT '0',   `phrase` tinyint(1) unsigned NOT NULL DEFAULT '0',   `weight` float unsigned NOT NULL DEFAULT '1',   `context` tinyint(1) unsigned NOT NULL DEFAULT '2',   `language` char(3) NOT NULL DEFAULT '',   KEY `idx_word` (`term`),   KEY `idx_context` (`context`) ) ENGINE=MEMORY DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:29:"gr0us_finder_tokens_aggregate";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:603:"CREATE TABLE `#__finder_tokens_aggregate` (   `term_id` int(10) unsigned NOT NULL,   `map_suffix` char(1) NOT NULL,   `term` varchar(75) NOT NULL,   `stem` varchar(75) NOT NULL,   `common` tinyint(1) unsigned NOT NULL DEFAULT '0',   `phrase` tinyint(1) unsigned NOT NULL DEFAULT '0',   `term_weight` float unsigned NOT NULL,   `context` tinyint(1) unsigned NOT NULL DEFAULT '2',   `context_weight` float unsigned NOT NULL,   `total_weight` float unsigned NOT NULL,   `language` char(3) NOT NULL DEFAULT '',   KEY `token` (`term`),   KEY `keyword_id` (`term_id`) ) ENGINE=MEMORY DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:18:"gr0us_finder_types";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:241:"CREATE TABLE `#__finder_types` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `title` varchar(100) NOT NULL,   `mime` varchar(100) NOT NULL,   PRIMARY KEY (`id`),   UNIQUE KEY `title` (`title`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:22:"gr0us_hikashop_address";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1133:"CREATE TABLE `#__hikashop_address` (   `address_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `address_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `address_type` varchar(50) NOT NULL DEFAULT '',   `address_title` varchar(255) DEFAULT NULL,   `address_firstname` varchar(255) DEFAULT NULL,   `address_middle_name` varchar(255) DEFAULT NULL,   `address_lastname` varchar(255) DEFAULT NULL,   `address_company` varchar(255) DEFAULT NULL,   `address_street` varchar(255) DEFAULT NULL,   `address_street2` varchar(255) NOT NULL DEFAULT '',   `address_post_code` varchar(255) DEFAULT NULL,   `address_city` varchar(255) DEFAULT NULL,   `address_telephone` varchar(255) DEFAULT NULL,   `address_telephone2` varchar(255) DEFAULT NULL,   `address_fax` varchar(255) DEFAULT NULL,   `address_state` varchar(255) DEFAULT NULL,   `address_country` varchar(255) DEFAULT NULL,   `address_published` tinyint(4) NOT NULL DEFAULT '1',   `address_vat` varchar(255) DEFAULT NULL,   `address_default` tinyint(4) NOT NULL DEFAULT '0',   PRIMARY KEY (`address_id`),   KEY `address_user_id` (`address_user_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:20:"gr0us_hikashop_badge";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1198:"CREATE TABLE `#__hikashop_badge` (   `badge_id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `badge_name` varchar(255) NOT NULL DEFAULT '',   `badge_image` varchar(255) NOT NULL DEFAULT '',   `badge_start` int(10) unsigned NOT NULL DEFAULT '0',   `badge_end` int(10) unsigned NOT NULL DEFAULT '0',   `badge_product_id` varchar(255) NOT NULL DEFAULT '',   `badge_category_id` varchar(255) NOT NULL DEFAULT '',   `badge_category_childs` tinyint(4) NOT NULL DEFAULT '0',   `badge_discount_id` varchar(255) NOT NULL DEFAULT '',   `badge_ordering` int(10) unsigned NOT NULL DEFAULT '0',   `badge_size` float(12,2) unsigned NOT NULL,   `badge_position` varchar(255) NOT NULL DEFAULT 'bottomleft',   `badge_vertical_distance` int(10) NOT NULL DEFAULT '0',   `badge_horizontal_distance` int(10) NOT NULL DEFAULT '0',   `badge_margin` int(10) NOT NULL DEFAULT '0',   `badge_published` tinyint(4) NOT NULL DEFAULT '0',   `badge_keep_size` tinyint(4) NOT NULL DEFAULT '0',   `badge_quantity` varchar(255) NOT NULL DEFAULT '',   `badge_url` varchar(255) NOT NULL DEFAULT '',   `badge_access` varchar(255) NOT NULL DEFAULT 'all',   PRIMARY KEY (`badge_id`) ) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:21:"gr0us_hikashop_banner";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:451:"CREATE TABLE `#__hikashop_banner` (   `banner_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `banner_title` varchar(255) NOT NULL DEFAULT '',   `banner_url` varchar(255) NOT NULL DEFAULT '',   `banner_image_url` varchar(255) NOT NULL DEFAULT '',   `banner_published` tinyint(4) NOT NULL DEFAULT '0',   `banner_ordering` int(11) NOT NULL DEFAULT '0',   `banner_comment` text NOT NULL,   PRIMARY KEY (`banner_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:19:"gr0us_hikashop_cart";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1030:"CREATE TABLE `#__hikashop_cart` (   `cart_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `user_id` int(10) unsigned NOT NULL DEFAULT '0',   `session_id` varchar(255) NOT NULL,   `cart_modified` int(10) unsigned NOT NULL DEFAULT '0',   `cart_type` varchar(25) NOT NULL DEFAULT 'cart',   `cart_coupon` varchar(255) NOT NULL DEFAULT '',   `cart_currency_id` int(10) unsigned NOT NULL DEFAULT '0',   `cart_payment_id` int(10) unsigned NOT NULL DEFAULT '0',   `cart_shipping_ids` varchar(255) NOT NULL DEFAULT '',   `cart_billing_address_id` int(10) unsigned NOT NULL DEFAULT '0',   `cart_shipping_address_ids` varchar(255) NOT NULL DEFAULT '',   `cart_name` varchar(255) NOT NULL DEFAULT '',   `cart_current` int(11) NOT NULL DEFAULT '0',   `cart_share` varchar(255) NOT NULL DEFAULT 'nobody',   `cart_params` text,   `cart_fields` longtext,   `cart_ip` varchar(255) NOT NULL DEFAULT '',   PRIMARY KEY (`cart_id`),   KEY `user_id` (`user_id`),   KEY `session_id` (`session_id`) ) ENGINE=MyISAM AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:27:"gr0us_hikashop_cart_product";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:713:"CREATE TABLE `#__hikashop_cart_product` (   `cart_product_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `cart_id` int(10) unsigned NOT NULL DEFAULT '0',   `product_id` int(10) unsigned NOT NULL DEFAULT '0',   `cart_product_quantity` int(10) unsigned NOT NULL DEFAULT '1',   `cart_product_parent_id` int(10) unsigned NOT NULL DEFAULT '0',   `cart_product_modified` int(10) unsigned NOT NULL DEFAULT '0',   `cart_product_option_parent_id` int(10) unsigned DEFAULT '0',   `cart_product_wishlist_id` int(11) NOT NULL DEFAULT '0',   `cart_product_wishlist_product_id` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`cart_product_id`),   KEY `cart_id` (`cart_id`) ) ENGINE=MyISAM AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:23:"gr0us_hikashop_category";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1393:"CREATE TABLE `#__hikashop_category` (   `category_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `category_parent_id` int(10) unsigned NOT NULL DEFAULT '0',   `category_type` varchar(255) NOT NULL,   `category_name` varchar(255) NOT NULL,   `category_description` text NOT NULL,   `category_published` tinyint(4) NOT NULL DEFAULT '0',   `category_ordering` int(10) unsigned NOT NULL DEFAULT '0',   `category_left` int(10) unsigned NOT NULL DEFAULT '0',   `category_right` int(10) unsigned NOT NULL DEFAULT '0',   `category_depth` int(10) unsigned NOT NULL DEFAULT '0',   `category_namekey` varchar(255) NOT NULL,   `category_created` int(10) unsigned NOT NULL DEFAULT '0',   `category_modified` int(10) unsigned NOT NULL DEFAULT '0',   `category_access` varchar(255) NOT NULL DEFAULT 'all',   `category_menu` int(10) unsigned DEFAULT '0',   `category_keywords` text NOT NULL,   `category_meta_description` text NOT NULL,   `category_layout` varchar(255) NOT NULL DEFAULT '',   `category_page_title` varchar(255) NOT NULL DEFAULT '',   `category_alias` varchar(255) NOT NULL DEFAULT '',   `category_site_id` varchar(255) DEFAULT '',   `category_canonical` varchar(255) NOT NULL DEFAULT '',   `category_quantity_layout` varchar(255) NOT NULL DEFAULT '',   PRIMARY KEY (`category_id`),   UNIQUE KEY `category_namekey` (`category_namekey`) ) ENGINE=MyISAM AUTO_INCREMENT=28 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:29:"gr0us_hikashop_characteristic";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:611:"CREATE TABLE `#__hikashop_characteristic` (   `characteristic_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `characteristic_parent_id` int(10) NOT NULL DEFAULT '0',   `characteristic_value` varchar(255) NOT NULL DEFAULT '0',   `characteristic_alias` varchar(255) NOT NULL DEFAULT '',   `characteristic_display_type` varchar(255) NOT NULL DEFAULT '',   `characteristic_params` text,   `characteristic_ordering` int(12) unsigned NOT NULL DEFAULT '0',   `characteristic_display_method` varchar(255) NOT NULL DEFAULT '',   PRIMARY KEY (`characteristic_id`) ) ENGINE=MyISAM AUTO_INCREMENT=36 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:20:"gr0us_hikashop_click";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:609:"CREATE TABLE `#__hikashop_click` (   `click_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `click_ip` varchar(255) NOT NULL DEFAULT '',   `click_created` int(10) unsigned NOT NULL DEFAULT '0',   `click_partner_id` int(10) unsigned NOT NULL DEFAULT '0',   `click_partner_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `click_referer` varchar(255) NOT NULL DEFAULT '',   `click_partner_paid` tinyint(4) NOT NULL DEFAULT '0',   `click_partner_currency_id` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`click_id`),   KEY `click_partner_id` (`click_partner_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:21:"gr0us_hikashop_config";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:206:"CREATE TABLE `#__hikashop_config` (   `config_namekey` varchar(200) NOT NULL,   `config_value` text NOT NULL,   `config_default` text,   PRIMARY KEY (`config_namekey`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:23:"gr0us_hikashop_currency";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:739:"CREATE TABLE `#__hikashop_currency` (   `currency_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `currency_symbol` varchar(255) NOT NULL,   `currency_code` varchar(255) NOT NULL,   `currency_format` char(10) NOT NULL DEFAULT '%i',   `currency_name` varchar(255) NOT NULL,   `currency_published` tinyint(4) NOT NULL DEFAULT '0',   `currency_rate` decimal(16,5) NOT NULL DEFAULT '1.00000',   `currency_locale` text NOT NULL,   `currency_displayed` tinyint(4) NOT NULL DEFAULT '0',   `currency_percent_fee` decimal(4,2) NOT NULL DEFAULT '0.00',   `currency_modified` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`currency_id`),   UNIQUE KEY `currency_code` (`currency_code`) ) ENGINE=MyISAM AUTO_INCREMENT=183 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:23:"gr0us_hikashop_discount";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1733:"CREATE TABLE `#__hikashop_discount` (   `discount_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `discount_type` varchar(255) NOT NULL DEFAULT 'discount',   `discount_start` int(10) unsigned NOT NULL DEFAULT '0',   `discount_end` int(10) unsigned NOT NULL DEFAULT '0',   `discount_flat_amount` decimal(17,5) NOT NULL DEFAULT '0.00000',   `discount_percent_amount` decimal(12,3) NOT NULL DEFAULT '0.000',   `discount_minimum_order` decimal(17,5) NOT NULL DEFAULT '0.00000',   `discount_quota` int(10) unsigned NOT NULL DEFAULT '0',   `discount_used_times` int(10) unsigned NOT NULL DEFAULT '0',   `discount_code` varchar(255) NOT NULL DEFAULT '',   `discount_published` tinyint(4) NOT NULL DEFAULT '0',   `discount_product_id` varchar(255) NOT NULL DEFAULT '',   `discount_category_id` varchar(255) NOT NULL DEFAULT '',   `discount_zone_id` varchar(255) NOT NULL DEFAULT '',   `discount_currency_id` int(10) unsigned NOT NULL DEFAULT '0',   `discount_category_childs` tinyint(4) NOT NULL DEFAULT '0',   `discount_auto_load` tinyint(3) unsigned DEFAULT '0',   `discount_access` varchar(255) NOT NULL DEFAULT 'all',   `discount_tax_id` int(10) unsigned DEFAULT '0',   `discount_minimum_products` int(10) unsigned DEFAULT '0',   `discount_quota_per_user` int(10) unsigned DEFAULT '0',   `discount_coupon_nodoubling` tinyint(4) DEFAULT NULL,   `discount_coupon_product_only` tinyint(4) DEFAULT NULL,   `discount_affiliate` int(10) NOT NULL DEFAULT '0',   `discount_site_id` varchar(255) DEFAULT '',   `discount_user_id` varchar(255) NOT NULL DEFAULT '',   `discount_tax` tinyint(3) unsigned DEFAULT '0',   PRIMARY KEY (`discount_id`),   UNIQUE KEY `discount_code` (`discount_code`) ) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:23:"gr0us_hikashop_download";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:296:"CREATE TABLE `#__hikashop_download` (   `file_id` int(10) unsigned NOT NULL,   `order_id` int(10) unsigned NOT NULL,   `file_pos` int(10) NOT NULL DEFAULT '1',   `download_number` int(11) NOT NULL DEFAULT '1',   PRIMARY KEY (`file_id`,`order_id`,`file_pos`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:20:"gr0us_hikashop_entry";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:226:"CREATE TABLE `#__hikashop_entry` (   `entry_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `order_id` int(10) unsigned NOT NULL,   PRIMARY KEY (`entry_id`),   KEY `order_id` (`order_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:20:"gr0us_hikashop_field";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1111:"CREATE TABLE `#__hikashop_field` (   `field_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `field_table` varchar(50) DEFAULT NULL,   `field_realname` varchar(250) NOT NULL,   `field_namekey` varchar(50) NOT NULL,   `field_type` varchar(50) DEFAULT NULL,   `field_value` longtext NOT NULL,   `field_published` tinyint(3) unsigned NOT NULL DEFAULT '1',   `field_ordering` smallint(5) unsigned DEFAULT '99',   `field_options` text,   `field_core` tinyint(3) unsigned NOT NULL DEFAULT '0',   `field_required` tinyint(3) unsigned NOT NULL DEFAULT '0',   `field_default` varchar(250) DEFAULT NULL,   `field_access` varchar(255) NOT NULL DEFAULT 'all',   `field_categories` text,   `field_with_sub_categories` tinyint(1) NOT NULL DEFAULT '0',   `field_products` text,   `field_frontcomp` tinyint(3) unsigned NOT NULL DEFAULT '0',   `field_backend` tinyint(3) unsigned NOT NULL DEFAULT '1',   `field_backend_listing` tinyint(3) unsigned NOT NULL DEFAULT '0',   `field_display` text,   PRIMARY KEY (`field_id`),   UNIQUE KEY `field_namekey` (`field_namekey`) ) ENGINE=MyISAM AUTO_INCREMENT=18 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:19:"gr0us_hikashop_file";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:591:"CREATE TABLE `#__hikashop_file` (   `file_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `file_name` varchar(255) NOT NULL,   `file_description` text NOT NULL,   `file_path` varchar(255) NOT NULL,   `file_type` varchar(255) NOT NULL DEFAULT 'category',   `file_ref_id` int(10) unsigned NOT NULL DEFAULT '0',   `file_free_download` tinyint(3) unsigned NOT NULL DEFAULT '0',   `file_ordering` int(10) unsigned NOT NULL DEFAULT '0',   `file_limit` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`file_id`),   KEY `file_type` (`file_type`) ) ENGINE=MyISAM AUTO_INCREMENT=44 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:21:"gr0us_hikashop_filter";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:906:"CREATE TABLE `#__hikashop_filter` (   `filter_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `filter_name` varchar(250) NOT NULL,   `filter_namekey` varchar(50) NOT NULL,   `filter_published` tinyint(3) unsigned NOT NULL DEFAULT '1',   `filter_type` varchar(50) DEFAULT NULL,   `filter_category_id` varchar(255) NOT NULL,   `filter_ordering` smallint(5) unsigned DEFAULT '99',   `filter_options` text,   `filter_data` text NOT NULL,   `filter_access` varchar(250) NOT NULL DEFAULT 'all',   `filter_direct_application` tinyint(3) NOT NULL DEFAULT '0',   `filter_value` text NOT NULL,   `filter_category_childs` tinyint(3) unsigned NOT NULL,   `filter_height` int(50) unsigned NOT NULL,   `filter_deletable` tinyint(3) unsigned NOT NULL,   `filter_dynamic` tinyint(3) unsigned NOT NULL,   PRIMARY KEY (`filter_id`),   UNIQUE KEY `filter_namekey` (`filter_namekey`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:26:"gr0us_hikashop_geolocation";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:969:"CREATE TABLE `#__hikashop_geolocation` (   `geolocation_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `geolocation_ip` varchar(255) NOT NULL DEFAULT '',   `geolocation_type` varchar(255) NOT NULL DEFAULT 'order',   `geolocation_ref_id` int(10) unsigned NOT NULL DEFAULT '0',   `geolocation_created` int(10) unsigned NOT NULL DEFAULT '0',   `geolocation_latitude` decimal(9,6) NOT NULL DEFAULT '0.000000',   `geolocation_longitude` decimal(9,6) NOT NULL DEFAULT '0.000000',   `geolocation_postal_code` varchar(255) NOT NULL DEFAULT '',   `geolocation_country` varchar(255) NOT NULL DEFAULT '',   `geolocation_country_code` varchar(255) NOT NULL DEFAULT '',   `geolocation_state` varchar(255) NOT NULL DEFAULT '',   `geolocation_state_code` varchar(255) NOT NULL DEFAULT '',   `geolocation_city` varchar(255) NOT NULL DEFAULT '',   PRIMARY KEY (`geolocation_id`),   KEY `geolocation_type` (`geolocation_type`,`geolocation_ref_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:22:"gr0us_hikashop_history";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:891:"CREATE TABLE `#__hikashop_history` (   `history_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `history_order_id` int(10) unsigned NOT NULL DEFAULT '0',   `history_created` int(10) unsigned NOT NULL DEFAULT '0',   `history_ip` varchar(255) NOT NULL DEFAULT '',   `history_new_status` varchar(255) NOT NULL DEFAULT '',   `history_reason` text NOT NULL,   `history_notified` tinyint(4) NOT NULL DEFAULT '0',   `history_amount` varchar(255) NOT NULL DEFAULT '',   `history_package_id` int(10) unsigned NOT NULL DEFAULT '0',   `history_payment_id` varchar(255) NOT NULL DEFAULT '',   `history_payment_method` varchar(255) NOT NULL DEFAULT '',   `history_data` longtext NOT NULL,   `history_type` varchar(255) NOT NULL DEFAULT '',   `history_user_id` int(10) unsigned DEFAULT '0',   PRIMARY KEY (`history_id`),   KEY `history_order_id` (`history_order_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:20:"gr0us_hikashop_limit";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:868:"CREATE TABLE `#__hikashop_limit` (   `limit_id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `limit_product_id` int(11) NOT NULL DEFAULT '0',   `limit_category_id` int(11) NOT NULL DEFAULT '0',   `limit_per_product` tinyint(4) NOT NULL DEFAULT '0',   `limit_periodicity` varchar(255) NOT NULL DEFAULT '',   `limit_type` varchar(255) NOT NULL DEFAULT '',   `limit_value` int(10) NOT NULL DEFAULT '0',   `limit_unit` varchar(255) DEFAULT NULL,   `limit_currency_id` int(11) NOT NULL DEFAULT '0',   `limit_access` varchar(255) NOT NULL DEFAULT '',   `limit_status` varchar(255) NOT NULL DEFAULT '',   `limit_published` tinyint(4) NOT NULL DEFAULT '0',   `limit_created` int(10) DEFAULT NULL,   `limit_modified` int(10) DEFAULT NULL,   `limit_start` int(10) DEFAULT NULL,   `limit_end` int(10) DEFAULT NULL,   PRIMARY KEY (`limit_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:25:"gr0us_hikashop_massaction";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:648:"CREATE TABLE `#__hikashop_massaction` (   `massaction_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `massaction_name` varchar(255) NOT NULL DEFAULT '',   `massaction_description` text NOT NULL,   `massaction_table` varchar(255) NOT NULL DEFAULT 'product',   `massaction_published` tinyint(4) NOT NULL DEFAULT '1',   `massaction_lasttime` int(10) unsigned NOT NULL DEFAULT '0',   `massaction_triggers` text NOT NULL,   `massaction_filters` text NOT NULL,   `massaction_actions` text NOT NULL,   `massaction_report` text NOT NULL,   PRIMARY KEY (`massaction_id`),   KEY `massaction_table` (`massaction_table`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:20:"gr0us_hikashop_order";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2187:"CREATE TABLE `#__hikashop_order` (   `order_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `order_billing_address_id` int(10) unsigned NOT NULL DEFAULT '0',   `order_shipping_address_id` int(10) unsigned NOT NULL DEFAULT '0',   `order_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `order_status` varchar(255) NOT NULL DEFAULT '',   `order_type` varchar(255) NOT NULL DEFAULT 'sale',   `order_number` varchar(255) NOT NULL DEFAULT '',   `order_created` int(10) unsigned NOT NULL DEFAULT '0',   `order_modified` int(10) unsigned NOT NULL DEFAULT '0',   `order_invoice_id` int(10) unsigned NOT NULL DEFAULT '0',   `order_invoice_number` varchar(255) NOT NULL DEFAULT '',   `order_invoice_created` int(10) unsigned NOT NULL DEFAULT '0',   `order_currency_id` int(10) unsigned NOT NULL DEFAULT '0',   `order_currency_info` text,   `order_full_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_tax_info` text,   `order_discount_code` varchar(255) NOT NULL DEFAULT '',   `order_discount_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_discount_tax` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_payment_id` varchar(255) NOT NULL DEFAULT '',   `order_payment_method` varchar(255) NOT NULL DEFAULT '',   `order_payment_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_payment_tax` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_payment_params` text,   `order_shipping_id` varchar(255) NOT NULL DEFAULT '',   `order_shipping_method` varchar(255) NOT NULL DEFAULT '',   `order_shipping_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_shipping_tax` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_shipping_params` text,   `order_partner_id` int(10) unsigned NOT NULL DEFAULT '0',   `order_partner_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_partner_paid` int(11) NOT NULL DEFAULT '0',   `order_partner_currency_id` int(10) unsigned NOT NULL DEFAULT '0',   `order_ip` varchar(255) NOT NULL DEFAULT '',   `order_site_id` varchar(255) DEFAULT '',   `order_lang` varchar(255) DEFAULT '',   `order_token` varchar(255) DEFAULT '',   PRIMARY KEY (`order_id`),   KEY `order_user_id` (`order_user_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:28:"gr0us_hikashop_order_product";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1281:"CREATE TABLE `#__hikashop_order_product` (   `order_product_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `order_id` int(10) unsigned NOT NULL DEFAULT '0',   `product_id` int(10) unsigned NOT NULL DEFAULT '0',   `order_product_quantity` int(10) unsigned NOT NULL DEFAULT '1',   `order_product_name` varchar(255) NOT NULL DEFAULT '',   `order_product_code` varchar(255) NOT NULL DEFAULT '',   `order_product_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_product_tax` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_product_tax_info` text NOT NULL,   `order_product_options` text NOT NULL,   `order_product_option_parent_id` int(10) unsigned DEFAULT '0',   `order_product_status` varchar(255) NOT NULL DEFAULT '',   `order_product_wishlist_id` int(11) NOT NULL DEFAULT '0',   `order_product_wishlist_product_id` int(11) NOT NULL DEFAULT '0',   `order_product_shipping_id` varchar(255) NOT NULL DEFAULT '',   `order_product_shipping_method` varchar(255) NOT NULL DEFAULT '',   `order_product_shipping_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_product_shipping_tax` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_product_shipping_params` text,   PRIMARY KEY (`order_product_id`),   KEY `order_id` (`order_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:26:"gr0us_hikashop_orderstatus";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:596:"CREATE TABLE `#__hikashop_orderstatus` (   `orderstatus_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `orderstatus_namekey` varchar(255) NOT NULL,   `orderstatus_name` varchar(255) NOT NULL DEFAULT '',   `orderstatus_description` text NOT NULL,   `orderstatus_published` tinyint(4) NOT NULL DEFAULT '0',   `orderstatus_ordering` int(10) unsigned NOT NULL DEFAULT '0',   `orderstatus_email_params` longtext,   `orderstatus_links_params` longtext,   PRIMARY KEY (`orderstatus_id`),   UNIQUE KEY `orderstatus_namekey` (`orderstatus_namekey`) ) ENGINE=MyISAM AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:22:"gr0us_hikashop_payment";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:765:"CREATE TABLE `#__hikashop_payment` (   `payment_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `payment_name` varchar(255) NOT NULL DEFAULT '',   `payment_description` text NOT NULL,   `payment_images` text NOT NULL,   `payment_params` text NOT NULL,   `payment_type` varchar(255) NOT NULL DEFAULT '',   `payment_zone_namekey` varchar(255) NOT NULL DEFAULT '',   `payment_ordering` int(10) unsigned NOT NULL DEFAULT '0',   `payment_published` tinyint(4) NOT NULL DEFAULT '1',   `payment_access` varchar(255) NOT NULL DEFAULT 'all',   `payment_shipping_methods` text NOT NULL,   `payment_currency` varchar(255) NOT NULL,   `payment_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   PRIMARY KEY (`payment_id`) ) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:21:"gr0us_hikashop_plugin";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:435:"CREATE TABLE `#__hikashop_plugin` (   `plugin_id` int(10) NOT NULL AUTO_INCREMENT,   `plugin_type` varchar(255) NOT NULL,   `plugin_published` int(4) NOT NULL DEFAULT '0',   `plugin_name` varchar(255) NOT NULL,   `plugin_ordering` int(10) NOT NULL DEFAULT '0',   `plugin_description` text,   `plugin_params` text,   `plugin_access` varchar(255) NOT NULL DEFAULT 'all',   PRIMARY KEY (`plugin_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:20:"gr0us_hikashop_price";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:726:"CREATE TABLE `#__hikashop_price` (   `price_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `price_currency_id` int(10) unsigned NOT NULL DEFAULT '0',   `price_product_id` int(10) unsigned NOT NULL DEFAULT '0',   `price_value` decimal(17,5) NOT NULL DEFAULT '0.00000',   `price_min_quantity` int(10) unsigned NOT NULL DEFAULT '0',   `price_access` varchar(255) NOT NULL DEFAULT 'all',   `price_users` varchar(255) NOT NULL DEFAULT '',   `price_site_id` varchar(255) DEFAULT '',   `price_start_date` int(11) unsigned NOT NULL DEFAULT '0',   `price_end_date` int(11) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`price_id`),   KEY `price_product_id` (`price_product_id`) ) ENGINE=MyISAM AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:22:"gr0us_hikashop_product";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:3134:"CREATE TABLE `#__hikashop_product` (   `product_id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `product_parent_id` int(11) unsigned NOT NULL DEFAULT '0',   `product_name` varchar(255) NOT NULL,   `product_description` text NOT NULL,   `product_quantity` int(11) NOT NULL DEFAULT '-1',   `product_code` varchar(255) NOT NULL,   `product_published` tinyint(4) NOT NULL DEFAULT '0',   `product_hit` int(11) unsigned NOT NULL DEFAULT '0',   `product_created` int(11) unsigned NOT NULL DEFAULT '0',   `product_sale_start` int(10) unsigned NOT NULL DEFAULT '0',   `product_sale_end` int(10) unsigned NOT NULL DEFAULT '0',   `product_delay_id` int(10) unsigned NOT NULL DEFAULT '0',   `product_tax_id` int(10) unsigned NOT NULL DEFAULT '0',   `product_type` varchar(255) NOT NULL DEFAULT '',   `product_vendor_id` int(10) unsigned NOT NULL DEFAULT '0',   `product_manufacturer_id` int(10) unsigned NOT NULL DEFAULT '0',   `product_url` varchar(255) NOT NULL,   `product_weight` decimal(12,3) unsigned NOT NULL DEFAULT '0.000',   `product_keywords` text NOT NULL,   `product_weight_unit` varchar(255) NOT NULL DEFAULT 'kg',   `product_modified` int(10) unsigned NOT NULL DEFAULT '0',   `product_meta_description` text NOT NULL,   `product_dimension_unit` varchar(255) NOT NULL DEFAULT 'm',   `product_width` decimal(12,3) NOT NULL DEFAULT '0.000',   `product_length` decimal(12,3) NOT NULL DEFAULT '0.000',   `product_height` decimal(12,3) NOT NULL DEFAULT '0.000',   `product_max_per_order` int(10) unsigned DEFAULT '0',   `product_access` varchar(255) NOT NULL DEFAULT 'all',   `product_group_after_purchase` varchar(255) NOT NULL DEFAULT '',   `product_min_per_order` int(10) unsigned DEFAULT '0',   `product_contact` smallint(5) unsigned NOT NULL DEFAULT '0',   `product_display_quantity_field` smallint(5) NOT NULL DEFAULT '0',   `product_last_seen_date` int(10) unsigned DEFAULT '0',   `product_sales` int(10) unsigned DEFAULT '0',   `product_waitlist` smallint(5) unsigned NOT NULL DEFAULT '0',   `product_layout` varchar(255) NOT NULL DEFAULT '',   `product_average_score` float NOT NULL,   `product_total_vote` int(11) NOT NULL DEFAULT '0',   `product_page_title` varchar(255) NOT NULL DEFAULT '',   `product_alias` varchar(255) NOT NULL DEFAULT '',   `product_price_percentage` decimal(15,7) NOT NULL DEFAULT '0.0000000',   `product_msrp` decimal(15,7) DEFAULT '0.0000000',   `product_canonical` varchar(255) NOT NULL DEFAULT '',   `product_warehouse_id` int(10) unsigned NOT NULL DEFAULT '0',   `product_quantity_layout` varchar(255) NOT NULL DEFAULT '',   `product_sort_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `product_description_raw` text,   `product_description_type` varchar(255) DEFAULT NULL,   `product_option_method` smallint(5) unsigned NOT NULL DEFAULT '0',   `product_condition` varchar(255) DEFAULT NULL,   `color` text,   `tags_color` text,   PRIMARY KEY (`product_id`),   UNIQUE KEY `product_code` (`product_code`),   KEY `product_parent_id` (`product_parent_id`),   KEY `product_main_index` (`product_type`,`product_quantity`,`product_published`) ) ENGINE=MyISAM AUTO_INCREMENT=357 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:31:"gr0us_hikashop_product_category";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:436:"CREATE TABLE `#__hikashop_product_category` (   `product_category_id` int(255) unsigned NOT NULL AUTO_INCREMENT,   `category_id` int(10) unsigned NOT NULL,   `product_id` int(10) unsigned NOT NULL,   `ordering` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`product_category_id`),   UNIQUE KEY `category_id` (`category_id`,`product_id`),   KEY `product_id` (`product_id`) ) ENGINE=MyISAM AUTO_INCREMENT=38 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:30:"gr0us_hikashop_product_related";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:432:"CREATE TABLE `#__hikashop_product_related` (   `product_id` int(10) unsigned NOT NULL,   `product_related_id` int(10) unsigned NOT NULL,   `product_related_type` varchar(255) NOT NULL DEFAULT 'related',   `product_related_ordering` int(10) unsigned DEFAULT '0',   `product_related_quantity` int(10) unsigned DEFAULT '0',   PRIMARY KEY (`product_id`,`product_related_id`,`product_related_type`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:23:"gr0us_hikashop_shipping";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:835:"CREATE TABLE `#__hikashop_shipping` (   `shipping_id` int(11) NOT NULL AUTO_INCREMENT,   `shipping_type` varchar(255) NOT NULL DEFAULT 'manual',   `shipping_zone_namekey` varchar(255) NOT NULL,   `shipping_tax_id` int(10) unsigned NOT NULL DEFAULT '0',   `shipping_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `shipping_currency_id` int(10) unsigned NOT NULL DEFAULT '0',   `shipping_name` varchar(255) NOT NULL,   `shipping_description` text NOT NULL,   `shipping_published` tinyint(4) NOT NULL DEFAULT '1',   `shipping_ordering` int(10) unsigned NOT NULL DEFAULT '0',   `shipping_currency` varchar(255) NOT NULL,   `shipping_params` text NOT NULL,   `shipping_images` varchar(255) NOT NULL DEFAULT '',   `shipping_access` varchar(255) NOT NULL DEFAULT 'all',   PRIMARY KEY (`shipping_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:29:"gr0us_hikashop_shipping_price";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:518:"CREATE TABLE `#__hikashop_shipping_price` (   `shipping_price_id` int(11) NOT NULL AUTO_INCREMENT,   `shipping_id` int(11) NOT NULL,   `shipping_price_ref_id` int(11) NOT NULL,   `shipping_price_ref_type` varchar(255) NOT NULL DEFAULT 'product',   `shipping_price_min_quantity` int(11) NOT NULL DEFAULT '0',   `shipping_price_value` decimal(15,7) NOT NULL DEFAULT '0.0000000',   `shipping_fee_value` decimal(15,7) NOT NULL DEFAULT '0.0000000',   PRIMARY KEY (`shipping_price_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:18:"gr0us_hikashop_tax";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:195:"CREATE TABLE `#__hikashop_tax` (   `tax_namekey` varchar(255) NOT NULL,   `tax_rate` decimal(17,5) NOT NULL DEFAULT '0.00000',   PRIMARY KEY (`tax_namekey`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:23:"gr0us_hikashop_taxation";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1095:"CREATE TABLE `#__hikashop_taxation` (   `taxation_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `zone_namekey` varchar(255) NOT NULL,   `category_namekey` varchar(255) NOT NULL,   `tax_namekey` varchar(255) NOT NULL,   `taxation_published` tinyint(4) NOT NULL DEFAULT '0',   `taxation_type` varchar(255) NOT NULL DEFAULT 'individual',   `taxation_access` varchar(255) NOT NULL DEFAULT 'all',   `taxation_cumulative` tinyint(4) DEFAULT NULL,   `taxation_post_code` varchar(255) NOT NULL DEFAULT '',   `taxation_date_start` int(10) unsigned NOT NULL DEFAULT '0',   `taxation_date_end` int(10) unsigned NOT NULL DEFAULT '0',   `taxation_internal_code` varchar(15) NOT NULL DEFAULT '' COMMENT 'Accounting internal code',   `taxation_note` text NOT NULL COMMENT 'Note to add in the invoice when this tax is used - It uses the language file for the translation',   `taxation_site_id` varchar(255) NOT NULL DEFAULT '' COMMENT 'Reference to JMS site ID',   `taxation_ordering` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`taxation_id`) ) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:19:"gr0us_hikashop_user";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:959:"CREATE TABLE `#__hikashop_user` (   `user_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `user_cms_id` int(10) unsigned NOT NULL,   `user_email` varchar(255) NOT NULL DEFAULT '',   `user_partner_email` varchar(255) NOT NULL,   `user_params` text NOT NULL,   `user_partner_id` int(10) unsigned NOT NULL DEFAULT '0',   `user_partner_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `user_partner_paid` tinyint(4) NOT NULL DEFAULT '0',   `user_created_ip` varchar(255) NOT NULL DEFAULT '',   `user_unpaid_amount` decimal(17,5) NOT NULL DEFAULT '0.00000',   `user_partner_currency_id` int(10) unsigned NOT NULL DEFAULT '0',   `user_created` int(10) unsigned NOT NULL DEFAULT '0',   `user_currency_id` int(10) unsigned NOT NULL DEFAULT '0',   `user_partner_activated` tinyint(4) NOT NULL DEFAULT '0',   PRIMARY KEY (`user_id`),   UNIQUE KEY `user_email` (`user_email`),   KEY `user_cms_id` (`user_cms_id`) ) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:22:"gr0us_hikashop_variant";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:350:"CREATE TABLE `#__hikashop_variant` (   `variant_characteristic_id` int(10) unsigned NOT NULL,   `variant_product_id` int(10) unsigned NOT NULL,   `ordering` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`variant_characteristic_id`,`variant_product_id`),   KEY `variant_product_id` (`variant_product_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:19:"gr0us_hikashop_vote";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:582:"CREATE TABLE `#__hikashop_vote` (   `vote_id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `vote_ref_id` int(11) NOT NULL,   `vote_type` varchar(15) NOT NULL,   `vote_user_id` varchar(255) NOT NULL,   `vote_rating` float NOT NULL,   `vote_comment` text NOT NULL,   `vote_useful` int(11) NOT NULL,   `vote_pseudo` varchar(255) NOT NULL,   `vote_ip` varchar(255) NOT NULL,   `vote_email` varchar(255) NOT NULL,   `vote_date` int(10) unsigned NOT NULL,   `vote_published` tinyint(4) NOT NULL DEFAULT '1',   PRIMARY KEY (`vote_id`) ) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:24:"gr0us_hikashop_vote_user";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:250:"CREATE TABLE `#__hikashop_vote_user` (   `vote_user_id` int(11) NOT NULL,   `vote_user_user_id` varchar(255) NOT NULL,   `vote_user_useful` tinyint(4) NOT NULL,   PRIMARY KEY (`vote_user_id`,`vote_user_user_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:23:"gr0us_hikashop_waitlist";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:369:"CREATE TABLE `#__hikashop_waitlist` (   `waitlist_id` int(11) NOT NULL AUTO_INCREMENT,   `product_id` int(11) NOT NULL,   `date` int(11) NOT NULL,   `email` varchar(255) NOT NULL,   `name` varchar(255) DEFAULT NULL,   `product_item_id` int(11) NOT NULL,   `language` varchar(255) NOT NULL DEFAULT '',   PRIMARY KEY (`waitlist_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:24:"gr0us_hikashop_warehouse";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:451:"CREATE TABLE `#__hikashop_warehouse` (   `warehouse_id` int(10) NOT NULL AUTO_INCREMENT,   `warehouse_name` varchar(255) NOT NULL DEFAULT '',   `warehouse_published` tinyint(4) NOT NULL DEFAULT '1',   `warehouse_description` text NOT NULL,   `warehouse_ordering` int(10) NOT NULL DEFAULT '0',   `warehouse_created` int(10) DEFAULT NULL,   `warehouse_modified` int(10) DEFAULT NULL,   PRIMARY KEY (`warehouse_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:21:"gr0us_hikashop_widget";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:407:"CREATE TABLE `#__hikashop_widget` (   `widget_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `widget_name` varchar(255) NOT NULL,   `widget_params` text NOT NULL,   `widget_published` tinyint(4) NOT NULL DEFAULT '0',   `widget_ordering` int(11) NOT NULL DEFAULT '0',   `widget_access` varchar(250) NOT NULL DEFAULT 'all',   PRIMARY KEY (`widget_id`) ) ENGINE=MyISAM AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:19:"gr0us_hikashop_zone";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:613:"CREATE TABLE `#__hikashop_zone` (   `zone_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `zone_namekey` varchar(255) NOT NULL,   `zone_name` varchar(255) NOT NULL,   `zone_name_english` varchar(255) NOT NULL,   `zone_code_2` varchar(255) NOT NULL,   `zone_code_3` varchar(255) NOT NULL,   `zone_type` varchar(255) NOT NULL DEFAULT 'country',   `zone_published` tinyint(4) NOT NULL DEFAULT '0',   `zone_currency_id` int(10) unsigned DEFAULT '0',   PRIMARY KEY (`zone_id`),   UNIQUE KEY `zone_namekey` (`zone_namekey`),   KEY `zone_code_3` (`zone_code_3`) ) ENGINE=MyISAM AUTO_INCREMENT=4571 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:24:"gr0us_hikashop_zone_link";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:239:"CREATE TABLE `#__hikashop_zone_link` (   `zone_parent_namekey` varchar(255) NOT NULL,   `zone_child_namekey` varchar(255) NOT NULL,   PRIMARY KEY (`zone_parent_namekey`(150),`zone_child_namekey`(150)) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:15:"gr0us_languages";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1090:"CREATE TABLE `#__languages` (   `lang_id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `asset_id` int(10) unsigned NOT NULL DEFAULT '0',   `lang_code` char(7) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,   `title` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,   `title_native` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,   `sef` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,   `image` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,   `description` varchar(512) COLLATE utf8mb4_unicode_ci NOT NULL,   `metakey` text COLLATE utf8mb4_unicode_ci NOT NULL,   `metadesc` text COLLATE utf8mb4_unicode_ci NOT NULL,   `sitename` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `published` int(11) NOT NULL DEFAULT '0',   `access` int(10) unsigned NOT NULL DEFAULT '0',   `ordering` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`lang_id`),   UNIQUE KEY `idx_sef` (`sef`),   UNIQUE KEY `idx_langcode` (`lang_code`),   KEY `idx_access` (`access`),   KEY `idx_ordering` (`ordering`) ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:10:"gr0us_menu";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2721:"CREATE TABLE `#__menu` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `menutype` varchar(24) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The type of menu this item belongs to. FK to #__menu_types.menutype',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The display title of the menu item.',   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT 'The SEF alias of the menu item.',   `note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `path` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The computed path of the menu item based on the alias field.',   `link` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The actually link the menu item refers to.',   `type` varchar(16) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The type of link: Component, URL, Alias, Separator',   `published` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'The published state of the menu link.',   `parent_id` int(10) unsigned NOT NULL DEFAULT '1' COMMENT 'The parent menu item in the menu tree.',   `level` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'The relative level in the tree.',   `component_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'FK to #__extensions.id',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'FK to #__users.id',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'The time the menu item was checked out.',   `browserNav` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'The click behaviour of the link.',   `access` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'The access level required to view the menu item.',   `img` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The image of the menu item.',   `template_style_id` int(10) unsigned NOT NULL DEFAULT '0',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'JSON encoded data for the menu item.',   `lft` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set lft.',   `rgt` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set rgt.',   `home` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT 'Indicates if this menu item is the home or default page.',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `client_id` tinyint(4) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `idx_client_id_parent_id_alias_language` (`client_id`,`parent_id`,`alias`(100),`language`),   KEY `idx_componentid` (`component_id`,`menutype`,`published`,`access`),   KEY `idx_menutype` (`menutype`),   KEY `idx_left_right` (`lft`,`rgt`),   KEY `idx_alias` (`alias`(100)),   KEY `idx_path` (`path`(100)),   KEY `idx_language` (`language`) ) ENGINE=InnoDB AUTO_INCREMENT=187 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:16:"gr0us_menu_types";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:522:"CREATE TABLE `#__menu_types` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `asset_id` int(10) unsigned NOT NULL DEFAULT '0',   `menutype` varchar(24) COLLATE utf8mb4_unicode_ci NOT NULL,   `title` varchar(48) COLLATE utf8mb4_unicode_ci NOT NULL,   `description` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `client_id` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `idx_menutype` (`menutype`) ) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:14:"gr0us_messages";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:684:"CREATE TABLE `#__messages` (   `message_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `user_id_from` int(10) unsigned NOT NULL DEFAULT '0',   `user_id_to` int(10) unsigned NOT NULL DEFAULT '0',   `folder_id` tinyint(3) unsigned NOT NULL DEFAULT '0',   `date_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `state` tinyint(1) NOT NULL DEFAULT '0',   `priority` tinyint(1) unsigned NOT NULL DEFAULT '0',   `subject` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `message` text COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`message_id`),   KEY `useridto_state` (`user_id_to`,`state`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:18:"gr0us_messages_cfg";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:357:"CREATE TABLE `#__messages_cfg` (   `user_id` int(10) unsigned NOT NULL DEFAULT '0',   `cfg_name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `cfg_value` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   UNIQUE KEY `idx_user_var_name` (`user_id`,`cfg_name`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:13:"gr0us_modules";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1325:"CREATE TABLE `#__modules` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `asset_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'FK to the #__assets table.',   `title` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `content` text COLLATE utf8mb4_unicode_ci NOT NULL,   `ordering` int(11) NOT NULL DEFAULT '0',   `position` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `published` tinyint(1) NOT NULL DEFAULT '0',   `module` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `access` int(10) unsigned NOT NULL DEFAULT '0',   `showtitle` tinyint(3) unsigned NOT NULL DEFAULT '1',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `client_id` tinyint(4) NOT NULL DEFAULT '0',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`id`),   KEY `published` (`published`,`access`),   KEY `newsfeeds` (`module`,`published`),   KEY `idx_language` (`language`) ) ENGINE=InnoDB AUTO_INCREMENT=173 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:18:"gr0us_modules_menu";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:221:"CREATE TABLE `#__modules_menu` (   `moduleid` int(11) NOT NULL DEFAULT '0',   `menuid` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`moduleid`,`menuid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:15:"gr0us_newsfeeds";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2175:"CREATE TABLE `#__newsfeeds` (   `catid` int(11) NOT NULL DEFAULT '0',   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `link` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `published` tinyint(1) NOT NULL DEFAULT '0',   `numarticles` int(10) unsigned NOT NULL DEFAULT '1',   `cache_time` int(10) unsigned NOT NULL DEFAULT '3600',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `ordering` int(11) NOT NULL DEFAULT '0',   `rtl` tinyint(4) NOT NULL DEFAULT '0',   `access` int(10) unsigned NOT NULL DEFAULT '0',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(10) unsigned NOT NULL DEFAULT '0',   `created_by_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `metakey` text COLLATE utf8mb4_unicode_ci NOT NULL,   `metadesc` text COLLATE utf8mb4_unicode_ci NOT NULL,   `metadata` text COLLATE utf8mb4_unicode_ci NOT NULL,   `xreference` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'A reference to enable linkages to external data sets.',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `description` text COLLATE utf8mb4_unicode_ci NOT NULL,   `version` int(10) unsigned NOT NULL DEFAULT '1',   `hits` int(10) unsigned NOT NULL DEFAULT '0',   `images` text COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`id`),   KEY `idx_access` (`access`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_state` (`published`),   KEY `idx_catid` (`catid`),   KEY `idx_createdby` (`created_by`),   KEY `idx_language` (`language`),   KEY `idx_xreference` (`xreference`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:15:"gr0us_overrider";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:356:"CREATE TABLE `#__overrider` (   `id` int(10) NOT NULL AUTO_INCREMENT COMMENT 'Primary Key',   `constant` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `string` text COLLATE utf8mb4_unicode_ci NOT NULL,   `file` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:26:"gr0us_postinstall_messages";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1607:"CREATE TABLE `#__postinstall_messages` (   `postinstall_message_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,   `extension_id` bigint(20) NOT NULL DEFAULT '700' COMMENT 'FK to #__extensions',   `title_key` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'Lang key for the title',   `description_key` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'Lang key for description',   `action_key` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `language_extension` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'com_postinstall' COMMENT 'Extension holding lang keys',   `language_client_id` tinyint(3) NOT NULL DEFAULT '1',   `type` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'link' COMMENT 'Message type - message, link, action',   `action_file` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT '' COMMENT 'RAD URI to the PHP file containing action method',   `action` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT '' COMMENT 'Action method name or URL',   `condition_file` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT 'RAD URI to file holding display condition method',   `condition_method` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT 'Display condition method, must return boolean',   `version_introduced` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '3.2.0' COMMENT 'Version when this message was introduced',   `enabled` tinyint(3) NOT NULL DEFAULT '1',   PRIMARY KEY (`postinstall_message_id`) ) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:20:"gr0us_redirect_links";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:784:"CREATE TABLE `#__redirect_links` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `old_url` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL,   `new_url` varchar(2048) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `referer` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL,   `comment` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `hits` int(10) unsigned NOT NULL DEFAULT '0',   `published` tinyint(4) NOT NULL,   `created_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `header` smallint(3) NOT NULL DEFAULT '301',   PRIMARY KEY (`id`),   KEY `idx_old_url` (`old_url`(100)),   KEY `idx_link_modifed` (`modified_date`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:13:"gr0us_schemas";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:239:"CREATE TABLE `#__schemas` (   `extension_id` int(11) NOT NULL,   `version_id` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`extension_id`,`version_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:13:"gr0us_session";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:547:"CREATE TABLE `#__session` (   `session_id` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `client_id` tinyint(3) unsigned DEFAULT NULL,   `guest` tinyint(4) unsigned DEFAULT '1',   `time` varchar(14) COLLATE utf8mb4_unicode_ci DEFAULT '',   `data` mediumtext COLLATE utf8mb4_unicode_ci,   `userid` int(11) DEFAULT '0',   `username` varchar(150) COLLATE utf8mb4_unicode_ci DEFAULT '',   PRIMARY KEY (`session_id`),   KEY `userid` (`userid`),   KEY `time` (`time`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:10:"gr0us_tags";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2278:"CREATE TABLE `#__tags` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `parent_id` int(10) unsigned NOT NULL DEFAULT '0',   `lft` int(11) NOT NULL DEFAULT '0',   `rgt` int(11) NOT NULL DEFAULT '0',   `level` int(10) unsigned NOT NULL DEFAULT '0',   `path` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `description` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `published` tinyint(1) NOT NULL DEFAULT '0',   `checked_out` int(11) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `access` int(10) unsigned NOT NULL DEFAULT '0',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `metadesc` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The meta description for the page.',   `metakey` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The meta keywords for the page.',   `metadata` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'JSON encoded metadata properties.',   `created_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `created_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `modified_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `modified_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `images` text COLLATE utf8mb4_unicode_ci NOT NULL,   `urls` text COLLATE utf8mb4_unicode_ci NOT NULL,   `hits` int(10) unsigned NOT NULL DEFAULT '0',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL,   `version` int(10) unsigned NOT NULL DEFAULT '1',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   PRIMARY KEY (`id`),   KEY `tag_idx` (`published`,`access`),   KEY `idx_access` (`access`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_path` (`path`(100)),   KEY `idx_left_right` (`lft`,`rgt`),   KEY `idx_alias` (`alias`(100)),   KEY `idx_language` (`language`) ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:21:"gr0us_template_styles";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:573:"CREATE TABLE `#__template_styles` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `template` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `client_id` tinyint(1) unsigned NOT NULL DEFAULT '0',   `home` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '0',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`id`),   KEY `idx_template` (`template`),   KEY `idx_home` (`home`) ) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:14:"gr0us_ucm_base";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:397:"CREATE TABLE `#__ucm_base` (   `ucm_id` int(10) unsigned NOT NULL,   `ucm_item_id` int(10) NOT NULL,   `ucm_type_id` int(11) NOT NULL,   `ucm_language_id` int(11) NOT NULL,   PRIMARY KEY (`ucm_id`),   KEY `idx_ucm_item_id` (`ucm_item_id`),   KEY `idx_ucm_type_id` (`ucm_type_id`),   KEY `idx_ucm_language_id` (`ucm_language_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:17:"gr0us_ucm_content";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:3158:"CREATE TABLE `#__ucm_content` (   `core_content_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `core_type_alias` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'FK to the content types table',   `core_title` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `core_alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `core_body` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `core_state` tinyint(1) NOT NULL DEFAULT '0',   `core_checked_out_time` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '0000-00-00 00:00:00',   `core_checked_out_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `core_access` int(10) unsigned NOT NULL DEFAULT '0',   `core_params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `core_featured` tinyint(4) unsigned NOT NULL DEFAULT '0',   `core_metadata` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'JSON encoded metadata properties.',   `core_created_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `core_created_by_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `core_created_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `core_modified_user_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Most recent user that modified',   `core_modified_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `core_language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `core_publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `core_publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `core_content_item_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'ID from the individual type table',   `asset_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'FK to the #__assets table.',   `core_images` text COLLATE utf8mb4_unicode_ci NOT NULL,   `core_urls` text COLLATE utf8mb4_unicode_ci NOT NULL,   `core_hits` int(10) unsigned NOT NULL DEFAULT '0',   `core_version` int(10) unsigned NOT NULL DEFAULT '1',   `core_ordering` int(11) NOT NULL DEFAULT '0',   `core_metakey` text COLLATE utf8mb4_unicode_ci NOT NULL,   `core_metadesc` text COLLATE utf8mb4_unicode_ci NOT NULL,   `core_catid` int(10) unsigned NOT NULL DEFAULT '0',   `core_xreference` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'A reference to enable linkages to external data sets.',   `core_type_id` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`core_content_id`),   KEY `tag_idx` (`core_state`,`core_access`),   KEY `idx_access` (`core_access`),   KEY `idx_alias` (`core_alias`(100)),   KEY `idx_language` (`core_language`),   KEY `idx_title` (`core_title`(100)),   KEY `idx_modified_time` (`core_modified_time`),   KEY `idx_created_time` (`core_created_time`),   KEY `idx_content_type` (`core_type_alias`(100)),   KEY `idx_core_modified_user_id` (`core_modified_user_id`),   KEY `idx_core_checked_out_user_id` (`core_checked_out_user_id`),   KEY `idx_core_created_user_id` (`core_created_user_id`),   KEY `idx_core_type_id` (`core_type_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Contains core content data in name spaced fields';
";s:12:"dependencies";a:0:{}}s:17:"gr0us_ucm_history";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1035:"CREATE TABLE `#__ucm_history` (   `version_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `ucm_item_id` int(10) unsigned NOT NULL,   `ucm_type_id` int(10) unsigned NOT NULL,   `version_note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'Optional version name',   `save_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `editor_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `character_count` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Number of characters in this version.',   `sha1_hash` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'SHA1 hash of the version_data column.',   `version_data` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'json-encoded string of version data',   `keep_forever` tinyint(4) NOT NULL DEFAULT '0' COMMENT '0=auto delete; 1=keep',   PRIMARY KEY (`version_id`),   KEY `idx_ucm_item_id` (`ucm_type_id`,`ucm_item_id`),   KEY `idx_save_date` (`save_date`) ) ENGINE=InnoDB AUTO_INCREMENT=38 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:18:"gr0us_update_sites";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:554:"CREATE TABLE `#__update_sites` (   `update_site_id` int(11) NOT NULL AUTO_INCREMENT,   `name` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT '',   `type` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT '',   `location` text COLLATE utf8mb4_unicode_ci NOT NULL,   `enabled` int(11) DEFAULT '0',   `last_check_timestamp` bigint(20) DEFAULT '0',   `extra_query` varchar(1000) COLLATE utf8mb4_unicode_ci DEFAULT '',   PRIMARY KEY (`update_site_id`) ) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Update Sites';
";s:12:"dependencies";a:0:{}}s:29:"gr0us_update_sites_extensions";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:299:"CREATE TABLE `#__update_sites_extensions` (   `update_site_id` int(11) NOT NULL DEFAULT '0',   `extension_id` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`update_site_id`,`extension_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Links extensions to update sites';
";s:12:"dependencies";a:0:{}}s:13:"gr0us_updates";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:932:"CREATE TABLE `#__updates` (   `update_id` int(11) NOT NULL AUTO_INCREMENT,   `update_site_id` int(11) DEFAULT '0',   `extension_id` int(11) DEFAULT '0',   `name` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT '',   `description` text COLLATE utf8mb4_unicode_ci NOT NULL,   `element` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT '',   `type` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT '',   `folder` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT '',   `client_id` tinyint(3) DEFAULT '0',   `version` varchar(32) COLLATE utf8mb4_unicode_ci DEFAULT '',   `data` text COLLATE utf8mb4_unicode_ci NOT NULL,   `detailsurl` text COLLATE utf8mb4_unicode_ci NOT NULL,   `infourl` text COLLATE utf8mb4_unicode_ci NOT NULL,   `extra_query` varchar(1000) COLLATE utf8mb4_unicode_ci DEFAULT '',   PRIMARY KEY (`update_id`) ) ENGINE=InnoDB AUTO_INCREMENT=78 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Available Updates';
";s:12:"dependencies";a:0:{}}s:15:"gr0us_user_keys";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:569:"CREATE TABLE `#__user_keys` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `user_id` varchar(150) COLLATE utf8mb4_unicode_ci NOT NULL,   `token` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `series` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,   `invalid` tinyint(4) NOT NULL,   `time` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL,   `uastring` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`id`),   UNIQUE KEY `series` (`series`),   KEY `user_id` (`user_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:16:"gr0us_user_notes";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1064:"CREATE TABLE `#__user_notes` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `user_id` int(10) unsigned NOT NULL DEFAULT '0',   `catid` int(10) unsigned NOT NULL DEFAULT '0',   `subject` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `body` text COLLATE utf8mb4_unicode_ci NOT NULL,   `state` tinyint(3) NOT NULL DEFAULT '0',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `created_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_user_id` int(10) unsigned NOT NULL,   `modified_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `review_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   PRIMARY KEY (`id`),   KEY `idx_user_id` (`user_id`),   KEY `idx_category_id` (`catid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:19:"gr0us_user_profiles";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:410:"CREATE TABLE `#__user_profiles` (   `user_id` int(11) NOT NULL,   `profile_key` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,   `profile_value` text COLLATE utf8mb4_unicode_ci NOT NULL,   `ordering` int(11) NOT NULL DEFAULT '0',   UNIQUE KEY `idx_user_id_profile_key` (`user_id`,`profile_key`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Simple user profile storage table';
";s:12:"dependencies";a:0:{}}s:24:"gr0us_user_usergroup_map";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:326:"CREATE TABLE `#__user_usergroup_map` (   `user_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Foreign Key to #__users.id',   `group_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Foreign Key to #__usergroups.id',   PRIMARY KEY (`user_id`,`group_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:16:"gr0us_usergroups";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:727:"CREATE TABLE `#__usergroups` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Primary Key',   `parent_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Adjacency List Reference Id',   `lft` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set lft.',   `rgt` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set rgt.',   `title` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   PRIMARY KEY (`id`),   UNIQUE KEY `idx_usergroup_parent_title_lookup` (`parent_id`,`title`),   KEY `idx_usergroup_title_lookup` (`title`),   KEY `idx_usergroup_adjacency_lookup` (`parent_id`),   KEY `idx_usergroup_nested_set_lookup` (`lft`,`rgt`)  ) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:11:"gr0us_users";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1467:"CREATE TABLE `#__users` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `name` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `username` varchar(150) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `email` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `password` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `block` tinyint(4) NOT NULL DEFAULT '0',   `sendEmail` tinyint(4) DEFAULT '0',   `registerDate` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `lastvisitDate` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `activation` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `lastResetTime` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Date of last password reset',   `resetCount` int(11) NOT NULL DEFAULT '0' COMMENT 'Count of password resets since lastResetTime',   `otpKey` varchar(1000) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'Two factor authentication encrypted keys',   `otep` varchar(1000) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'One time emergency passwords',   `requireReset` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'Require user to reset password on next login',   PRIMARY KEY (`id`),   KEY `idx_name` (`name`(100)),   KEY `idx_block` (`block`),   KEY `username` (`username`),   KEY `email` (`email`) ) ENGINE=InnoDB AUTO_INCREMENT=218 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:21:"gr0us_utf8_conversion";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:150:"CREATE TABLE `#__utf8_conversion` (   `converted` tinyint(4) NOT NULL DEFAULT '0' ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:16:"gr0us_viewlevels";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:476:"CREATE TABLE `#__viewlevels` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Primary Key',   `title` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `ordering` int(11) NOT NULL DEFAULT '0',   `rules` varchar(5120) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'JSON encoded access control.',   PRIMARY KEY (`id`),   UNIQUE KEY `idx_assetgroup_title_lookup` (`title`) ) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:17:"gr0us_wf_profiles";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:575:"CREATE TABLE `#__wf_profiles` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `name` varchar(255) NOT NULL,   `description` text NOT NULL,   `users` text NOT NULL,   `types` text NOT NULL,   `components` text NOT NULL,   `area` tinyint(3) NOT NULL,   `device` varchar(255) NOT NULL,   `rows` text NOT NULL,   `plugins` text NOT NULL,   `published` tinyint(3) NOT NULL,   `ordering` int(11) NOT NULL,   `checked_out` tinyint(3) NOT NULL,   `checked_out_time` datetime NOT NULL,   `params` text NOT NULL,   PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:23:"vionc_acymailing_action";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:938:"CREATE TABLE `vionc_acymailing_action` (   `action_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(255) DEFAULT NULL,   `frequency` int(10) unsigned NOT NULL,   `nextdate` int(10) unsigned NOT NULL,   `description` text,   `server` varchar(255) NOT NULL,   `port` varchar(50) NOT NULL,   `connection_method` varchar(10) NOT NULL DEFAULT '0',   `secure_method` varchar(10) NOT NULL DEFAULT '0',   `self_signed` tinyint(4) NOT NULL DEFAULT '0',   `username` varchar(255) NOT NULL,   `password` varchar(50) NOT NULL,   `userid` int(10) unsigned DEFAULT NULL,   `conditions` text,   `actions` text,   `report` text,   `delete_wrong_emails` tinyint(4) NOT NULL DEFAULT '0',   `senderfrom` tinyint(4) NOT NULL DEFAULT '0',   `senderto` tinyint(4) NOT NULL DEFAULT '0',   `published` tinyint(4) NOT NULL DEFAULT '0',   `ordering` smallint(5) unsigned DEFAULT '0',   PRIMARY KEY (`action_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:23:"vionc_acymailing_action";}}s:23:"vionc_acymailing_config";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:156:"CREATE TABLE `vionc_acymailing_config` (   `namekey` varchar(200) NOT NULL,   `value` text,   PRIMARY KEY (`namekey`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:23:"vionc_acymailing_config";}}s:23:"vionc_acymailing_fields";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1327:"CREATE TABLE `vionc_acymailing_fields` (   `fieldid` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `fieldname` varchar(250) NOT NULL,   `namekey` varchar(50) NOT NULL,   `type` varchar(50) DEFAULT NULL,   `value` text NOT NULL,   `published` tinyint(3) unsigned NOT NULL DEFAULT '1',   `ordering` smallint(5) unsigned DEFAULT '99',   `options` text,   `core` tinyint(3) unsigned NOT NULL DEFAULT '0',   `required` tinyint(3) unsigned NOT NULL DEFAULT '0',   `backend` tinyint(3) unsigned NOT NULL DEFAULT '1',   `frontcomp` tinyint(3) unsigned NOT NULL DEFAULT '0',   `frontform` tinyint(3) unsigned NOT NULL DEFAULT '1',   `default` longtext,   `listing` tinyint(3) unsigned DEFAULT NULL,   `frontlisting` tinyint(3) unsigned NOT NULL DEFAULT '0',   `frontjoomlaprofile` tinyint(3) unsigned NOT NULL DEFAULT '0',   `frontjoomlaregistration` tinyint(3) unsigned NOT NULL DEFAULT '0',   `joomlaprofile` tinyint(3) unsigned NOT NULL DEFAULT '0',   `access` varchar(250) NOT NULL DEFAULT 'all',   `fieldcat` int(11) NOT NULL DEFAULT '0',   `listingfilter` tinyint(3) unsigned NOT NULL DEFAULT '0',   `frontlistingfilter` tinyint(3) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`fieldid`),   UNIQUE KEY `namekey` (`namekey`),   KEY `orderingindex` (`published`,`ordering`) ) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:23:"vionc_acymailing_fields";}}s:23:"vionc_acymailing_filter";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:422:"CREATE TABLE `vionc_acymailing_filter` (   `filid` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(250) DEFAULT NULL,   `description` text,   `published` tinyint(3) unsigned DEFAULT NULL,   `lasttime` int(10) unsigned DEFAULT NULL,   `trigger` text,   `report` text,   `action` text,   `filter` text,   `daycron` int(10) unsigned DEFAULT NULL,   PRIMARY KEY (`filid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:23:"vionc_acymailing_filter";}}s:24:"vionc_acymailing_forward";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:305:"CREATE TABLE `vionc_acymailing_forward` (   `subid` int(10) unsigned NOT NULL,   `mailid` mediumint(8) unsigned NOT NULL,   `date` int(10) unsigned NOT NULL,   `ip` varchar(50) DEFAULT NULL,   `nbforwarded` int(10) unsigned NOT NULL,   PRIMARY KEY (`subid`,`mailid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:24:"vionc_acymailing_forward";}}s:28:"vionc_acymailing_geolocation";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1171:"CREATE TABLE `vionc_acymailing_geolocation` (   `geolocation_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `geolocation_subid` int(10) unsigned NOT NULL DEFAULT '0',   `geolocation_type` varchar(255) NOT NULL DEFAULT 'subscription',   `geolocation_ip` varchar(255) NOT NULL DEFAULT '',   `geolocation_created` int(10) unsigned NOT NULL DEFAULT '0',   `geolocation_latitude` decimal(9,6) NOT NULL DEFAULT '0.000000',   `geolocation_longitude` decimal(9,6) NOT NULL DEFAULT '0.000000',   `geolocation_postal_code` varchar(255) NOT NULL DEFAULT '',   `geolocation_country` varchar(255) NOT NULL DEFAULT '',   `geolocation_country_code` varchar(255) NOT NULL DEFAULT '',   `geolocation_state` varchar(255) NOT NULL DEFAULT '',   `geolocation_state_code` varchar(255) NOT NULL DEFAULT '',   `geolocation_city` varchar(255) NOT NULL DEFAULT '',   `geolocation_continent` varchar(255) NOT NULL DEFAULT '',   `geolocation_timezone` varchar(255) NOT NULL DEFAULT '',   PRIMARY KEY (`geolocation_id`),   KEY `geolocation_type` (`geolocation_subid`,`geolocation_type`),   KEY `geolocation_ip_created` (`geolocation_ip`,`geolocation_created`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:28:"vionc_acymailing_geolocation";}}s:24:"vionc_acymailing_history";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:454:"CREATE TABLE `vionc_acymailing_history` (   `subid` int(10) unsigned NOT NULL,   `date` int(10) unsigned NOT NULL,   `ip` varchar(50) DEFAULT NULL,   `action` varchar(50) NOT NULL COMMENT 'different actions: created,modified,confirmed',   `data` text,   `source` text,   `mailid` mediumint(8) unsigned DEFAULT NULL,   PRIMARY KEY (`subid`,`date`),   KEY `dateindex` (`date`),   KEY `actionindex` (`action`,`mailid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:24:"vionc_acymailing_history";}}s:21:"vionc_acymailing_list";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:994:"CREATE TABLE `vionc_acymailing_list` (   `name` varchar(250) NOT NULL,   `description` text,   `ordering` smallint(5) unsigned DEFAULT '0',   `listid` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `published` tinyint(4) DEFAULT NULL,   `userid` int(10) unsigned DEFAULT NULL,   `alias` varchar(250) DEFAULT NULL,   `color` varchar(30) DEFAULT NULL,   `visible` tinyint(4) NOT NULL DEFAULT '1',   `welmailid` mediumint(9) DEFAULT NULL,   `unsubmailid` mediumint(9) DEFAULT NULL,   `type` enum('list','campaign') NOT NULL DEFAULT 'list',   `access_sub` varchar(250) NOT NULL DEFAULT 'all',   `access_manage` varchar(250) NOT NULL DEFAULT 'none',   `languages` varchar(250) NOT NULL DEFAULT 'all',   `startrule` varchar(50) NOT NULL DEFAULT '0',   `category` varchar(250) NOT NULL DEFAULT '',   PRIMARY KEY (`listid`),   KEY `typeorderingindex` (`type`,`ordering`),   KEY `useridindex` (`userid`),   KEY `typeuseridindex` (`type`,`userid`) ) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:21:"vionc_acymailing_list";}}s:29:"vionc_acymailing_listcampaign";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:211:"CREATE TABLE `vionc_acymailing_listcampaign` (   `campaignid` smallint(5) unsigned NOT NULL,   `listid` smallint(5) unsigned NOT NULL,   PRIMARY KEY (`campaignid`,`listid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:29:"vionc_acymailing_listcampaign";}}s:25:"vionc_acymailing_listmail";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:200:"CREATE TABLE `vionc_acymailing_listmail` (   `listid` smallint(5) unsigned NOT NULL,   `mailid` mediumint(8) unsigned NOT NULL,   PRIMARY KEY (`listid`,`mailid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_acymailing_listmail";}}s:24:"vionc_acymailing_listsub";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:389:"CREATE TABLE `vionc_acymailing_listsub` (   `listid` smallint(5) unsigned NOT NULL,   `subid` int(10) unsigned NOT NULL,   `subdate` int(10) unsigned DEFAULT NULL,   `unsubdate` int(10) unsigned DEFAULT NULL,   `status` tinyint(4) NOT NULL,   PRIMARY KEY (`listid`,`subid`),   KEY `subidindex` (`subid`),   KEY `listidstatusindex` (`listid`,`status`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:24:"vionc_acymailing_listsub";}}s:21:"vionc_acymailing_mail";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1534:"CREATE TABLE `vionc_acymailing_mail` (   `mailid` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,   `subject` varchar(250) NOT NULL,   `body` longtext NOT NULL,   `altbody` longtext NOT NULL,   `published` tinyint(4) DEFAULT '1',   `senddate` int(10) unsigned DEFAULT NULL,   `created` int(10) unsigned DEFAULT NULL,   `lastupdate` int(10) unsigned DEFAULT NULL,   `userlastupdate` int(10) unsigned DEFAULT NULL,   `fromname` varchar(250) DEFAULT NULL,   `fromemail` varchar(250) DEFAULT NULL,   `replyname` varchar(250) DEFAULT NULL,   `replyemail` varchar(250) DEFAULT NULL,   `bccaddresses` varchar(250) DEFAULT NULL,   `type` enum('news','autonews','followup','unsub','welcome','notification','joomlanotification','action','article') NOT NULL DEFAULT 'news',   `visible` tinyint(4) NOT NULL DEFAULT '1',   `userid` int(10) unsigned DEFAULT NULL,   `alias` varchar(250) DEFAULT NULL,   `attach` text,   `favicon` text,   `html` tinyint(4) NOT NULL DEFAULT '1',   `tempid` smallint(6) NOT NULL DEFAULT '0',   `key` varchar(200) DEFAULT NULL,   `frequency` varchar(50) DEFAULT NULL,   `params` text,   `sentby` int(10) unsigned DEFAULT NULL,   `metakey` text,   `metadesc` text,   `filter` text,   `language` varchar(50) NOT NULL DEFAULT '',   `abtesting` varchar(250) DEFAULT NULL,   `thumb` varchar(250) DEFAULT NULL,   `summary` text NOT NULL,   PRIMARY KEY (`mailid`),   KEY `senddate` (`senddate`),   KEY `typemailidindex` (`type`,`mailid`),   KEY `useridindex` (`userid`) ) ENGINE=MyISAM AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:21:"vionc_acymailing_mail";}}s:22:"vionc_acymailing_queue";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:499:"CREATE TABLE `vionc_acymailing_queue` (   `senddate` int(10) unsigned NOT NULL,   `subid` int(10) unsigned NOT NULL,   `mailid` mediumint(8) unsigned NOT NULL,   `priority` tinyint(3) unsigned DEFAULT '3',   `try` tinyint(3) unsigned NOT NULL DEFAULT '0',   `paramqueue` varchar(250) DEFAULT NULL,   PRIMARY KEY (`subid`,`mailid`),   KEY `listingindex` (`senddate`,`subid`),   KEY `mailidindex` (`mailid`),   KEY `orderingindex` (`priority`,`senddate`,`subid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:22:"vionc_acymailing_queue";}}s:22:"vionc_acymailing_rules";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:439:"CREATE TABLE `vionc_acymailing_rules` (   `ruleid` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(250) NOT NULL,   `ordering` smallint(6) DEFAULT NULL,   `regex` text NOT NULL,   `executed_on` text NOT NULL,   `action_message` text NOT NULL,   `action_user` text NOT NULL,   `published` tinyint(3) unsigned NOT NULL,   PRIMARY KEY (`ruleid`),   KEY `ordering` (`published`,`ordering`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:22:"vionc_acymailing_rules";}}s:22:"vionc_acymailing_stats";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:800:"CREATE TABLE `vionc_acymailing_stats` (   `mailid` mediumint(8) unsigned NOT NULL,   `senthtml` int(10) unsigned NOT NULL DEFAULT '0',   `senttext` int(10) unsigned NOT NULL DEFAULT '0',   `senddate` int(10) unsigned NOT NULL,   `openunique` mediumint(8) unsigned NOT NULL DEFAULT '0',   `opentotal` int(10) unsigned NOT NULL DEFAULT '0',   `bounceunique` mediumint(8) unsigned NOT NULL DEFAULT '0',   `fail` mediumint(8) unsigned NOT NULL DEFAULT '0',   `clicktotal` int(10) unsigned NOT NULL DEFAULT '0',   `clickunique` mediumint(8) unsigned NOT NULL DEFAULT '0',   `unsub` mediumint(8) unsigned NOT NULL DEFAULT '0',   `forward` mediumint(8) unsigned NOT NULL DEFAULT '0',   `bouncedetails` text,   PRIMARY KEY (`mailid`),   KEY `senddateindex` (`senddate`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:22:"vionc_acymailing_stats";}}s:27:"vionc_acymailing_subscriber";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1115:"CREATE TABLE `vionc_acymailing_subscriber` (   `subid` int(10) unsigned NOT NULL AUTO_INCREMENT,   `email` varchar(200) NOT NULL,   `userid` int(10) unsigned NOT NULL DEFAULT '0',   `name` varchar(250) NOT NULL DEFAULT '',   `created` int(10) unsigned DEFAULT NULL,   `confirmed` tinyint(4) NOT NULL DEFAULT '0',   `enabled` tinyint(4) NOT NULL DEFAULT '1',   `accept` tinyint(4) NOT NULL DEFAULT '1',   `ip` varchar(100) DEFAULT NULL,   `html` tinyint(4) NOT NULL DEFAULT '1',   `key` varchar(250) DEFAULT NULL,   `confirmed_date` int(10) unsigned NOT NULL DEFAULT '0',   `confirmed_ip` varchar(100) DEFAULT NULL,   `lastopen_date` int(10) unsigned NOT NULL DEFAULT '0',   `lastopen_ip` varchar(100) DEFAULT NULL,   `lastclick_date` int(10) unsigned NOT NULL DEFAULT '0',   `lastsent_date` int(10) unsigned NOT NULL DEFAULT '0',   `source` varchar(250) NOT NULL DEFAULT '',   `filterflags` varchar(50) NOT NULL DEFAULT '',   PRIMARY KEY (`subid`),   UNIQUE KEY `email` (`email`),   KEY `userid` (`userid`),   KEY `queueindex` (`enabled`,`accept`,`confirmed`) ) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:27:"vionc_acymailing_subscriber";}}s:20:"vionc_acymailing_tag";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:262:"CREATE TABLE `vionc_acymailing_tag` (   `tagid` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(250) NOT NULL,   `userid` int(10) unsigned DEFAULT NULL,   PRIMARY KEY (`tagid`),   KEY `useridindex` (`userid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:20:"vionc_acymailing_tag";}}s:24:"vionc_acymailing_tagmail";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:197:"CREATE TABLE `vionc_acymailing_tagmail` (   `tagid` smallint(5) unsigned NOT NULL,   `mailid` mediumint(8) unsigned NOT NULL,   PRIMARY KEY (`tagid`,`mailid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:24:"vionc_acymailing_tagmail";}}s:25:"vionc_acymailing_template";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1001:"CREATE TABLE `vionc_acymailing_template` (   `tempid` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(250) DEFAULT NULL,   `description` text,   `body` longtext,   `altbody` longtext,   `header` longtext,   `created` int(10) unsigned DEFAULT NULL,   `published` tinyint(4) NOT NULL DEFAULT '1',   `premium` tinyint(4) NOT NULL DEFAULT '0',   `ordering` smallint(5) unsigned DEFAULT '0',   `namekey` varchar(50) NOT NULL,   `styles` text,   `subject` varchar(250) DEFAULT NULL,   `stylesheet` text,   `fromname` varchar(250) DEFAULT NULL,   `fromemail` varchar(250) DEFAULT NULL,   `replyname` varchar(250) DEFAULT NULL,   `replyemail` varchar(250) DEFAULT NULL,   `thumb` varchar(250) DEFAULT NULL,   `readmore` varchar(250) DEFAULT NULL,   `access` varchar(250) NOT NULL DEFAULT 'all',   `category` varchar(250) NOT NULL DEFAULT '',   PRIMARY KEY (`tempid`),   UNIQUE KEY `namekey` (`namekey`),   KEY `orderingindex` (`ordering`) ) ENGINE=MyISAM AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_acymailing_template";}}s:20:"vionc_acymailing_url";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:233:"CREATE TABLE `vionc_acymailing_url` (   `urlid` int(10) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(250) NOT NULL,   `url` text NOT NULL,   PRIMARY KEY (`urlid`),   KEY `url` (`url`(250)) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:20:"vionc_acymailing_url";}}s:25:"vionc_acymailing_urlclick";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:452:"CREATE TABLE `vionc_acymailing_urlclick` (   `urlid` int(10) unsigned NOT NULL,   `mailid` mediumint(8) unsigned NOT NULL,   `click` smallint(5) unsigned NOT NULL DEFAULT '0',   `subid` int(10) unsigned NOT NULL,   `date` int(10) unsigned NOT NULL,   `ip` varchar(100) DEFAULT NULL,   PRIMARY KEY (`urlid`,`mailid`,`subid`),   KEY `dateindex` (`date`),   KEY `mailidindex` (`mailid`),   KEY `subidindex` (`subid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_acymailing_urlclick";}}s:26:"vionc_acymailing_userstats";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:871:"CREATE TABLE `vionc_acymailing_userstats` (   `mailid` mediumint(8) unsigned NOT NULL,   `subid` int(10) unsigned NOT NULL,   `html` tinyint(3) unsigned NOT NULL DEFAULT '1',   `sent` tinyint(3) unsigned NOT NULL DEFAULT '1',   `senddate` int(10) unsigned NOT NULL,   `open` tinyint(3) unsigned NOT NULL DEFAULT '0',   `opendate` int(11) NOT NULL,   `bounce` tinyint(4) NOT NULL DEFAULT '0',   `fail` tinyint(4) NOT NULL DEFAULT '0',   `ip` varchar(100) DEFAULT NULL,   `browser` varchar(255) DEFAULT NULL,   `browser_version` tinyint(3) unsigned DEFAULT NULL,   `is_mobile` tinyint(3) unsigned DEFAULT NULL,   `mobile_os` varchar(255) DEFAULT NULL,   `user_agent` varchar(255) DEFAULT NULL,   `bouncerule` varchar(255) DEFAULT NULL,   PRIMARY KEY (`mailid`,`subid`),   KEY `senddateindex` (`senddate`),   KEY `subidindex` (`subid`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:26:"vionc_acymailing_userstats";}}s:20:"vionc_admintools_acl";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:227:"CREATE TABLE `vionc_admintools_acl` (   `user_id` bigint(20) unsigned NOT NULL,   `permissions` longtext COLLATE utf8mb4_unicode_ci,   PRIMARY KEY (`user_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:20:"vionc_admintools_acl";}}s:28:"vionc_admintools_adminiplist";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:322:"CREATE TABLE `vionc_admintools_adminiplist` (   `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,   `ip` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `description` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   UNIQUE KEY `id` (`id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:28:"vionc_admintools_adminiplist";}}s:25:"vionc_admintools_badwords";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:251:"CREATE TABLE `vionc_admintools_badwords` (   `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,   `word` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   UNIQUE KEY `id` (`id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_admintools_badwords";}}s:24:"vionc_admintools_cookies";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:329:"CREATE TABLE `vionc_admintools_cookies` (   `series` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `client_hash` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `valid_to` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   PRIMARY KEY (`series`(100)) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:24:"vionc_admintools_cookies";}}s:28:"vionc_admintools_customperms";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:371:"CREATE TABLE `vionc_admintools_customperms` (   `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,   `path` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `perms` varchar(4) COLLATE utf8mb4_unicode_ci DEFAULT '0644',   UNIQUE KEY `id` (`id`),   KEY `vionc_admintools_customperms_path` (`path`(100)) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:28:"vionc_admintools_customperms";}}s:27:"vionc_admintools_filescache";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:455:"CREATE TABLE `vionc_admintools_filescache` (   `admintools_filescache_id` bigint(20) NOT NULL AUTO_INCREMENT,   `path` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL,   `filedate` int(11) NOT NULL DEFAULT '0',   `filesize` int(11) NOT NULL DEFAULT '0',   `data` blob,   `checksum` varchar(32) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   PRIMARY KEY (`admintools_filescache_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:27:"vionc_admintools_filescache";}}s:26:"vionc_admintools_ipautoban";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:327:"CREATE TABLE `vionc_admintools_ipautoban` (   `ip` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `reason` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT 'other',   `until` datetime DEFAULT NULL,   UNIQUE KEY `vionc_admintools_ipautoban_ip` (`ip`(100)) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:26:"vionc_admintools_ipautoban";}}s:33:"vionc_admintools_ipautobanhistory";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:350:"CREATE TABLE `vionc_admintools_ipautobanhistory` (   `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,   `ip` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `reason` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT 'other',   `until` datetime DEFAULT NULL,   PRIMARY KEY (`id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:33:"vionc_admintools_ipautobanhistory";}}s:24:"vionc_admintools_ipblock";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:318:"CREATE TABLE `vionc_admintools_ipblock` (   `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,   `ip` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `description` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   UNIQUE KEY `id` (`id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:24:"vionc_admintools_ipblock";}}s:20:"vionc_admintools_log";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:883:"CREATE TABLE `vionc_admintools_log` (   `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,   `logdate` datetime NOT NULL,   `ip` varchar(40) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `url` varchar(10240) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `reason` enum('other','adminpw','ipwl','ipbl','sqlishield','antispam','wafblacklist','tpone','tmpl','template','muashield','csrfshield','badbehaviour','geoblocking','rfishield','dfishield','uploadshield','xssshield','httpbl','loginfailure','securitycode','external','awayschedule','admindir','sessionshield','nonewadmins','nonewfrontendadmins','configmonitor','phpshield','404shield') COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `extradata` longtext COLLATE utf8mb4_unicode_ci,   UNIQUE KEY `id` (`id`),   KEY `vionc_admintools_log_logdate_reason` (`logdate`,`reason`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:20:"vionc_admintools_log";}}s:25:"vionc_admintools_profiles";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:368:"CREATE TABLE `vionc_admintools_profiles` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `description` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `configuration` longtext COLLATE utf8mb4_unicode_ci,   `filters` longtext COLLATE utf8mb4_unicode_ci,   PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_admintools_profiles";}}s:26:"vionc_admintools_redirects";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:461:"CREATE TABLE `vionc_admintools_redirects` (   `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,   `source` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `dest` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `ordering` bigint(20) NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '1',   `keepurlparams` tinyint(1) NOT NULL DEFAULT '1',   UNIQUE KEY `id` (`id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:26:"vionc_admintools_redirects";}}s:27:"vionc_admintools_scanalerts";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:467:"CREATE TABLE `vionc_admintools_scanalerts` (   `admintools_scanalert_id` bigint(20) NOT NULL AUTO_INCREMENT,   `path` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL,   `scan_id` bigint(20) NOT NULL DEFAULT '0',   `diff` longtext COLLATE utf8mb4_unicode_ci,   `threat_score` int(11) NOT NULL DEFAULT '0',   `acknowledged` tinyint(4) NOT NULL DEFAULT '0',   PRIMARY KEY (`admintools_scanalert_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:27:"vionc_admintools_scanalerts";}}s:22:"vionc_admintools_scans";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1256:"CREATE TABLE `vionc_admintools_scans` (   `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,   `description` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `comment` longtext COLLATE utf8mb4_unicode_ci,   `backupstart` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   `backupend` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   `status` enum('run','fail','complete') COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'run',   `origin` varchar(30) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'backend',   `type` varchar(30) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'full',   `profile_id` bigint(20) NOT NULL DEFAULT '1',   `archivename` longtext COLLATE utf8mb4_unicode_ci,   `absolute_path` longtext COLLATE utf8mb4_unicode_ci,   `multipart` int(11) NOT NULL DEFAULT '0',   `tag` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `backupid` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `filesexist` tinyint(3) NOT NULL DEFAULT '1',   `remote_filename` varchar(1000) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `total_size` bigint(20) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   KEY `idx_fullstatus` (`filesexist`,`status`),   KEY `idx_stale` (`status`,`origin`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:22:"vionc_admintools_scans";}}s:24:"vionc_admintools_storage";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:251:"CREATE TABLE `vionc_admintools_storage` (   `key` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `value` longtext COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`key`(100)) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:24:"vionc_admintools_storage";}}s:30:"vionc_admintools_wafblacklists";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:774:"CREATE TABLE `vionc_admintools_wafblacklists` (   `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,   `option` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `view` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `task` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `query` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `query_type` varchar(1) COLLATE utf8mb4_unicode_ci NOT NULL,   `query_content` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `verb` varchar(6) COLLATE utf8mb4_unicode_ci NOT NULL,   `application` enum('site','admin','both') COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'site',   `enabled` tinyint(3) NOT NULL DEFAULT '1',   PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:30:"vionc_admintools_wafblacklists";}}s:30:"vionc_admintools_wafexceptions";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:381:"CREATE TABLE `vionc_admintools_wafexceptions` (   `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,   `option` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `view` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `query` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   PRIMARY KEY (`id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:30:"vionc_admintools_wafexceptions";}}s:29:"vionc_admintools_waftemplates";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1055:"CREATE TABLE `vionc_admintools_waftemplates` (   `admintools_waftemplate_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,   `reason` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `language` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '*',   `subject` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `template` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `enabled` tinyint(3) NOT NULL DEFAULT '1',   `email_num` tinyint(3) unsigned NOT NULL,   `email_numfreq` tinyint(3) unsigned NOT NULL,   `email_freq` enum('','second','minute','hour','day') COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` bigint(20) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` bigint(20) NOT NULL DEFAULT '0',   PRIMARY KEY (`admintools_waftemplate_id`),   UNIQUE KEY `vionc_admintools_waftemplate_keylang` (`reason`(100),`language`) ) ENGINE=MyISAM AUTO_INCREMENT=9 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:29:"vionc_admintools_waftemplates";}}s:17:"vionc_ak_profiles";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:407:"CREATE TABLE `vionc_ak_profiles` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `description` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `configuration` longtext COLLATE utf8mb4_unicode_ci,   `filters` longtext COLLATE utf8mb4_unicode_ci,   `quickicon` tinyint(3) NOT NULL DEFAULT '1',   PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:17:"vionc_ak_profiles";}}s:14:"vionc_ak_stats";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1248:"CREATE TABLE `vionc_ak_stats` (   `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,   `description` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `comment` longtext COLLATE utf8mb4_unicode_ci,   `backupstart` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   `backupend` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   `status` enum('run','fail','complete') COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'run',   `origin` varchar(30) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'backend',   `type` varchar(30) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'full',   `profile_id` bigint(20) NOT NULL DEFAULT '1',   `archivename` longtext COLLATE utf8mb4_unicode_ci,   `absolute_path` longtext COLLATE utf8mb4_unicode_ci,   `multipart` int(11) NOT NULL DEFAULT '0',   `tag` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `backupid` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `filesexist` tinyint(3) NOT NULL DEFAULT '1',   `remote_filename` varchar(1000) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `total_size` bigint(20) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   KEY `idx_fullstatus` (`filesexist`,`status`),   KEY `idx_stale` (`status`,`origin`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:14:"vionc_ak_stats";}}s:16:"vionc_ak_storage";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:322:"CREATE TABLE `vionc_ak_storage` (   `tag` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `lastupdate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,   `data` longtext COLLATE utf8mb4_unicode_ci,   PRIMARY KEY (`tag`(100)) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:16:"vionc_ak_storage";}}s:19:"vionc_akeeba_common";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:241:"CREATE TABLE `vionc_akeeba_common` (   `key` varchar(192) COLLATE utf8mb4_unicode_ci NOT NULL,   `value` longtext COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`key`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:19:"vionc_akeeba_common";}}s:29:"vionc_ark_editor_inline_views";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:344:"CREATE TABLE `vionc_ark_editor_inline_views` (   `element` varchar(50) NOT NULL,   `views` varchar(500) NOT NULL DEFAULT '[]',   `context` varchar(50) NOT NULL,   `types` varchar(500) NOT NULL DEFAULT '[]',   `params` text NOT NULL,   `parent` varchar(50) DEFAULT NULL,   PRIMARY KEY (`element`,`context`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:29:"vionc_ark_editor_inline_views";}}s:26:"vionc_ark_editor_languages";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:216:"CREATE TABLE `vionc_ark_editor_languages` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `tag` varchar(5) DEFAULT NULL,   `filename` varchar(100) DEFAULT NULL,   PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:26:"vionc_ark_editor_languages";}}s:24:"vionc_ark_editor_plugins";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:730:"CREATE TABLE `vionc_ark_editor_plugins` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `title` varchar(100) NOT NULL DEFAULT '',   `name` varchar(100) NOT NULL,   `type` varchar(100) NOT NULL DEFAULT 'command',   `row` tinyint(4) NOT NULL DEFAULT '0',   `icon` varchar(255) NOT NULL DEFAULT '',   `published` tinyint(3) NOT NULL DEFAULT '0',   `editable` tinyint(3) NOT NULL DEFAULT '0',   `checked_out` int(11) NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `iscore` tinyint(3) NOT NULL DEFAULT '0',   `acl` text,   `params` text NOT NULL,   `parentid` int(11) DEFAULT NULL,   PRIMARY KEY (`id`),   UNIQUE KEY `plugin` (`name`) ) ENGINE=InnoDB AUTO_INCREMENT=142 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:24:"vionc_ark_editor_plugins";}}s:25:"vionc_ark_editor_toolbars";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:501:"CREATE TABLE `vionc_ark_editor_toolbars` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `title` varchar(100) NOT NULL DEFAULT '',   `name` varchar(100) NOT NULL,   `published` tinyint(3) NOT NULL DEFAULT '0',   `checked_out` int(11) NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `iscore` tinyint(3) NOT NULL DEFAULT '0',   `params` text NOT NULL,   PRIMARY KEY (`id`),   UNIQUE KEY `toolbar` (`name`) ) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_ark_editor_toolbars";}}s:12:"vionc_assets";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:913:"CREATE TABLE `vionc_assets` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Primary Key',   `parent_id` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set parent.',   `lft` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set lft.',   `rgt` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set rgt.',   `level` int(10) unsigned NOT NULL COMMENT 'The cached level in the nested tree.',   `name` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The unique name for the asset.\n',   `title` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The descriptive title for the asset.',   `rules` varchar(5120) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'JSON encoded access control.',   PRIMARY KEY (`id`),   UNIQUE KEY `idx_asset_name` (`name`),   KEY `idx_lft_rgt` (`lft`,`rgt`),   KEY `idx_parent_id` (`parent_id`) ) ENGINE=InnoDB AUTO_INCREMENT=73 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:12:"vionc_assets";}}s:18:"vionc_associations";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:470:"CREATE TABLE `vionc_associations` (   `id` int(11) NOT NULL COMMENT 'A reference to the associated item.',   `context` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The context of the associated item.',   `key` char(32) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The key for the association computed from an md5 on associated ids.',   PRIMARY KEY (`context`,`id`),   KEY `idx_key` (`key`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:18:"vionc_associations";}}s:20:"vionc_banner_clients";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1037:"CREATE TABLE `vionc_banner_clients` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `contact` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `email` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `extrainfo` text COLLATE utf8mb4_unicode_ci NOT NULL,   `state` tinyint(3) NOT NULL DEFAULT '0',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `metakey` text COLLATE utf8mb4_unicode_ci NOT NULL,   `own_prefix` tinyint(4) NOT NULL DEFAULT '0',   `metakey_prefix` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `purchase_type` tinyint(4) NOT NULL DEFAULT '-1',   `track_clicks` tinyint(4) NOT NULL DEFAULT '-1',   `track_impressions` tinyint(4) NOT NULL DEFAULT '-1',   PRIMARY KEY (`id`),   KEY `idx_own_prefix` (`own_prefix`),   KEY `idx_metakey_prefix` (`metakey_prefix`(100)) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:20:"vionc_banner_clients";}}s:19:"vionc_banner_tracks";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:440:"CREATE TABLE `vionc_banner_tracks` (   `track_date` datetime NOT NULL,   `track_type` int(10) unsigned NOT NULL,   `banner_id` int(10) unsigned NOT NULL,   `count` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`track_date`,`track_type`,`banner_id`),   KEY `idx_track_date` (`track_date`),   KEY `idx_track_type` (`track_type`),   KEY `idx_banner_id` (`banner_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:19:"vionc_banner_tracks";}}s:13:"vionc_banners";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2244:"CREATE TABLE `vionc_banners` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `cid` int(11) NOT NULL DEFAULT '0',   `type` int(11) NOT NULL DEFAULT '0',   `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `imptotal` int(11) NOT NULL DEFAULT '0',   `impmade` int(11) NOT NULL DEFAULT '0',   `clicks` int(11) NOT NULL DEFAULT '0',   `clickurl` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `state` tinyint(3) NOT NULL DEFAULT '0',   `catid` int(10) unsigned NOT NULL DEFAULT '0',   `description` text COLLATE utf8mb4_unicode_ci NOT NULL,   `custombannercode` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL,   `sticky` tinyint(1) unsigned NOT NULL DEFAULT '0',   `ordering` int(11) NOT NULL DEFAULT '0',   `metakey` text COLLATE utf8mb4_unicode_ci NOT NULL,   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `own_prefix` tinyint(1) NOT NULL DEFAULT '0',   `metakey_prefix` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `purchase_type` tinyint(4) NOT NULL DEFAULT '-1',   `track_clicks` tinyint(4) NOT NULL DEFAULT '-1',   `track_impressions` tinyint(4) NOT NULL DEFAULT '-1',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `reset` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `created_by` int(10) unsigned NOT NULL DEFAULT '0',   `created_by_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `version` int(10) unsigned NOT NULL DEFAULT '1',   PRIMARY KEY (`id`),   KEY `idx_state` (`state`),   KEY `idx_own_prefix` (`own_prefix`),   KEY `idx_metakey_prefix` (`metakey_prefix`(100)),   KEY `idx_banner_catid` (`catid`),   KEY `idx_language` (`language`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:13:"vionc_banners";}}s:16:"vionc_categories";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2192:"CREATE TABLE `vionc_categories` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `asset_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'FK to the #__assets table.',   `parent_id` int(10) unsigned NOT NULL DEFAULT '0',   `lft` int(11) NOT NULL DEFAULT '0',   `rgt` int(11) NOT NULL DEFAULT '0',   `level` int(10) unsigned NOT NULL DEFAULT '0',   `path` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `extension` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `description` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `published` tinyint(1) NOT NULL DEFAULT '0',   `checked_out` int(11) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `access` int(10) unsigned NOT NULL DEFAULT '0',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `metadesc` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'The meta description for the page.',   `metakey` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'The meta keywords for the page.',   `metadata` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'JSON encoded metadata properties.',   `created_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `created_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `modified_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `hits` int(10) unsigned NOT NULL DEFAULT '0',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `version` int(10) unsigned NOT NULL DEFAULT '1',   PRIMARY KEY (`id`),   KEY `cat_idx` (`extension`,`published`,`access`),   KEY `idx_access` (`access`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_path` (`path`(100)),   KEY `idx_left_right` (`lft`,`rgt`),   KEY `idx_alias` (`alias`(100)),   KEY `idx_language` (`language`) ) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:16:"vionc_categories";}}s:23:"vionc_chronoengine_acls";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:308:"CREATE TABLE `vionc_chronoengine_acls` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `aco` varchar(255) NOT NULL DEFAULT '',   `title` varchar(255) NOT NULL DEFAULT '',   `enabled` tinyint(1) NOT NULL DEFAULT '0',   `rules` text,   PRIMARY KEY (`id`),   KEY `aco` (`aco`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:23:"vionc_chronoengine_acls";}}s:29:"vionc_chronoengine_extensions";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:318:"CREATE TABLE `vionc_chronoengine_extensions` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `name` varchar(255) NOT NULL DEFAULT '',   `enabled` tinyint(1) NOT NULL DEFAULT '0',   `ordering` int(4) NOT NULL DEFAULT '0',   `settings` text,   PRIMARY KEY (`id`),   KEY `name` (`name`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:29:"vionc_chronoengine_extensions";}}s:25:"vionc_chronoengine_forms6";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:545:"CREATE TABLE `vionc_chronoengine_forms6` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `title` varchar(200) NOT NULL,   `alias` varchar(200) NOT NULL,   `published` tinyint(1) NOT NULL DEFAULT '1',   `public` tinyint(1) NOT NULL DEFAULT '1',   `description` text NOT NULL,   `params` text NOT NULL,   `events` text NOT NULL,   `sections` text NOT NULL,   `views` longtext NOT NULL,   `functions` text NOT NULL,   `locales` text NOT NULL,   `rules` text NOT NULL,   PRIMARY KEY (`id`),   KEY `alias` (`alias`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_chronoengine_forms6";}}s:21:"vionc_contact_details";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:3109:"CREATE TABLE `vionc_contact_details` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,   `con_position` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `address` text COLLATE utf8mb4_unicode_ci,   `suburb` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `state` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `country` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `postcode` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `telephone` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `fax` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `misc` mediumtext COLLATE utf8mb4_unicode_ci,   `image` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `email_to` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `default_con` tinyint(1) unsigned NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '0',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `ordering` int(11) NOT NULL DEFAULT '0',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `user_id` int(11) NOT NULL DEFAULT '0',   `catid` int(11) NOT NULL DEFAULT '0',   `access` int(10) unsigned NOT NULL DEFAULT '0',   `mobile` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `webpage` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `sortname1` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `sortname2` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `sortname3` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `language` varchar(7) COLLATE utf8mb4_unicode_ci NOT NULL,   `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(10) unsigned NOT NULL DEFAULT '0',   `created_by_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `metakey` text COLLATE utf8mb4_unicode_ci NOT NULL,   `metadesc` text COLLATE utf8mb4_unicode_ci NOT NULL,   `metadata` text COLLATE utf8mb4_unicode_ci NOT NULL,   `featured` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT 'Set if contact is featured.',   `xreference` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'A reference to enable linkages to external data sets.',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `version` int(10) unsigned NOT NULL DEFAULT '1',   `hits` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   KEY `idx_access` (`access`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_state` (`published`),   KEY `idx_catid` (`catid`),   KEY `idx_createdby` (`created_by`),   KEY `idx_featured_catid` (`featured`,`catid`),   KEY `idx_language` (`language`),   KEY `idx_xreference` (`xreference`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:21:"vionc_contact_details";}}s:13:"vionc_content";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2379:"CREATE TABLE `vionc_content` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `asset_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'FK to the #__assets table.',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `introtext` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `fulltext` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `state` tinyint(3) NOT NULL DEFAULT '0',   `catid` int(10) unsigned NOT NULL DEFAULT '0',   `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(10) unsigned NOT NULL DEFAULT '0',   `created_by_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `images` text COLLATE utf8mb4_unicode_ci NOT NULL,   `urls` text COLLATE utf8mb4_unicode_ci NOT NULL,   `attribs` varchar(5120) COLLATE utf8mb4_unicode_ci NOT NULL,   `version` int(10) unsigned NOT NULL DEFAULT '1',   `ordering` int(11) NOT NULL DEFAULT '0',   `metakey` text COLLATE utf8mb4_unicode_ci NOT NULL,   `metadesc` text COLLATE utf8mb4_unicode_ci NOT NULL,   `access` int(10) unsigned NOT NULL DEFAULT '0',   `hits` int(10) unsigned NOT NULL DEFAULT '0',   `metadata` text COLLATE utf8mb4_unicode_ci NOT NULL,   `featured` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT 'Set if article is featured.',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The language code for the article.',   `xreference` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'A reference to enable linkages to external data sets.',   PRIMARY KEY (`id`),   KEY `idx_access` (`access`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_state` (`state`),   KEY `idx_catid` (`catid`),   KEY `idx_createdby` (`created_by`),   KEY `idx_featured_catid` (`featured`,`catid`),   KEY `idx_language` (`language`),   KEY `idx_xreference` (`xreference`),   KEY `idx_alias` (`alias`(191)) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:13:"vionc_content";}}s:23:"vionc_content_frontpage";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:226:"CREATE TABLE `vionc_content_frontpage` (   `content_id` int(11) NOT NULL DEFAULT '0',   `ordering` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`content_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:23:"vionc_content_frontpage";}}s:20:"vionc_content_rating";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:361:"CREATE TABLE `vionc_content_rating` (   `content_id` int(11) NOT NULL DEFAULT '0',   `rating_sum` int(10) unsigned NOT NULL DEFAULT '0',   `rating_count` int(10) unsigned NOT NULL DEFAULT '0',   `lastip` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   PRIMARY KEY (`content_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:20:"vionc_content_rating";}}s:19:"vionc_content_types";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:789:"CREATE TABLE `vionc_content_types` (   `type_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `type_title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `type_alias` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `table` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `rules` text COLLATE utf8mb4_unicode_ci NOT NULL,   `field_mappings` text COLLATE utf8mb4_unicode_ci NOT NULL,   `router` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `content_history_options` varchar(5120) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT 'JSON string for com_contenthistory options',   PRIMARY KEY (`type_id`),   KEY `idx_alias` (`type_alias`(100)) ) ENGINE=InnoDB AUTO_INCREMENT=10004 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:19:"vionc_content_types";}}s:25:"vionc_contentitem_tag_map";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:895:"CREATE TABLE `vionc_contentitem_tag_map` (   `type_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `core_content_id` int(10) unsigned NOT NULL COMMENT 'PK from the core content table',   `content_item_id` int(11) NOT NULL COMMENT 'PK from the content type table',   `tag_id` int(10) unsigned NOT NULL COMMENT 'PK from the tag table',   `tag_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Date of most recent save for this tag-item',   `type_id` mediumint(8) NOT NULL COMMENT 'PK from the content_type table',   UNIQUE KEY `uc_ItemnameTagid` (`type_id`,`content_item_id`,`tag_id`),   KEY `idx_tag_type` (`tag_id`,`type_id`),   KEY `idx_date_id` (`tag_date`,`tag_id`),   KEY `idx_core_content_id` (`core_content_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Maps items from content tables to tags';
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_contentitem_tag_map";}}s:23:"vionc_core_log_searches";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:233:"CREATE TABLE `vionc_core_log_searches` (   `search_term` varchar(128) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `hits` int(10) unsigned NOT NULL DEFAULT '0' ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:23:"vionc_core_log_searches";}}s:16:"vionc_extensions";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1328:"CREATE TABLE `vionc_extensions` (   `extension_id` int(11) NOT NULL AUTO_INCREMENT,   `package_id` int(11) NOT NULL DEFAULT '0' COMMENT 'Parent package ID for extensions installed as a package.',   `name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,   `type` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL,   `element` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,   `folder` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,   `client_id` tinyint(3) NOT NULL,   `enabled` tinyint(3) NOT NULL DEFAULT '0',   `access` int(10) unsigned NOT NULL DEFAULT '1',   `protected` tinyint(3) NOT NULL DEFAULT '0',   `manifest_cache` text COLLATE utf8mb4_unicode_ci NOT NULL,   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `custom_data` text COLLATE utf8mb4_unicode_ci NOT NULL,   `system_data` text COLLATE utf8mb4_unicode_ci NOT NULL,   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `ordering` int(11) DEFAULT '0',   `state` int(11) DEFAULT '0',   PRIMARY KEY (`extension_id`),   KEY `element_clientid` (`element`,`client_id`),   KEY `element_folder_clientid` (`element`,`folder`,`client_id`),   KEY `extension` (`type`,`element`,`folder`,`client_id`) ) ENGINE=InnoDB AUTO_INCREMENT=10276 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:16:"vionc_extensions";}}s:12:"vionc_fields";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1755:"CREATE TABLE `vionc_fields` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `asset_id` int(10) unsigned NOT NULL DEFAULT '0',   `context` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `group_id` int(10) unsigned NOT NULL DEFAULT '0',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `label` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `default_value` text COLLATE utf8mb4_unicode_ci NOT NULL,   `type` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'text',   `note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `description` text COLLATE utf8mb4_unicode_ci NOT NULL,   `state` tinyint(1) NOT NULL DEFAULT '0',   `required` tinyint(1) NOT NULL DEFAULT '0',   `checked_out` int(11) NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `ordering` int(11) NOT NULL DEFAULT '0',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `fieldparams` text COLLATE utf8mb4_unicode_ci NOT NULL,   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `created_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `modified_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `access` int(11) NOT NULL DEFAULT '1',   PRIMARY KEY (`id`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_state` (`state`),   KEY `idx_created_user_id` (`created_user_id`),   KEY `idx_access` (`access`),   KEY `idx_context` (`context`(191)),   KEY `idx_language` (`language`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:12:"vionc_fields";}}s:23:"vionc_fields_categories";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:239:"CREATE TABLE `vionc_fields_categories` (   `field_id` int(11) NOT NULL DEFAULT '0',   `category_id` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`field_id`,`category_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:23:"vionc_fields_categories";}}s:19:"vionc_fields_groups";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1306:"CREATE TABLE `vionc_fields_groups` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `asset_id` int(10) unsigned NOT NULL DEFAULT '0',   `context` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `description` text COLLATE utf8mb4_unicode_ci NOT NULL,   `state` tinyint(1) NOT NULL DEFAULT '0',   `checked_out` int(11) NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `ordering` int(11) NOT NULL DEFAULT '0',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(10) unsigned NOT NULL DEFAULT '0',   `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `access` int(11) NOT NULL DEFAULT '1',   PRIMARY KEY (`id`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_state` (`state`),   KEY `idx_created_by` (`created_by`),   KEY `idx_access` (`access`),   KEY `idx_context` (`context`(191)),   KEY `idx_language` (`language`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:19:"vionc_fields_groups";}}s:19:"vionc_fields_values";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:415:"CREATE TABLE `vionc_fields_values` (   `field_id` int(10) unsigned NOT NULL,   `item_id` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'Allow references to items which have strings as ids, eg. none db systems.',   `value` text COLLATE utf8mb4_unicode_ci NOT NULL,   KEY `idx_field_id` (`field_id`),   KEY `idx_item_id` (`item_id`(191)) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:19:"vionc_fields_values";}}s:20:"vionc_finder_filters";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:761:"CREATE TABLE `vionc_finder_filters` (   `filter_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `title` varchar(255) NOT NULL,   `alias` varchar(255) NOT NULL,   `state` tinyint(1) NOT NULL DEFAULT '1',   `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(10) unsigned NOT NULL,   `created_by_alias` varchar(255) NOT NULL,   `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `map_count` int(10) unsigned NOT NULL DEFAULT '0',   `data` text NOT NULL,   `params` mediumtext,   PRIMARY KEY (`filter_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:20:"vionc_finder_filters";}}s:18:"vionc_finder_links";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1303:"CREATE TABLE `vionc_finder_links` (   `link_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `url` varchar(255) NOT NULL,   `route` varchar(255) NOT NULL,   `title` varchar(400) DEFAULT NULL,   `description` text,   `indexdate` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `md5sum` varchar(32) DEFAULT NULL,   `published` tinyint(1) NOT NULL DEFAULT '1',   `state` int(5) DEFAULT '1',   `access` int(5) DEFAULT '0',   `language` varchar(8) NOT NULL,   `publish_start_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_end_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `start_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `end_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `list_price` double unsigned NOT NULL DEFAULT '0',   `sale_price` double unsigned NOT NULL DEFAULT '0',   `type_id` int(11) NOT NULL,   `object` mediumblob NOT NULL,   PRIMARY KEY (`link_id`),   KEY `idx_type` (`type_id`),   KEY `idx_title` (`title`(100)),   KEY `idx_md5` (`md5sum`),   KEY `idx_url` (`url`(75)),   KEY `idx_published_list` (`published`,`state`,`access`,`publish_start_date`,`publish_end_date`,`list_price`),   KEY `idx_published_sale` (`published`,`state`,`access`,`publish_start_date`,`publish_end_date`,`sale_price`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:18:"vionc_finder_links";}}s:25:"vionc_finder_links_terms0";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:341:"CREATE TABLE `vionc_finder_links_terms0` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_finder_links_terms0";}}s:25:"vionc_finder_links_terms1";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:341:"CREATE TABLE `vionc_finder_links_terms1` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_finder_links_terms1";}}s:25:"vionc_finder_links_terms2";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:341:"CREATE TABLE `vionc_finder_links_terms2` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_finder_links_terms2";}}s:25:"vionc_finder_links_terms3";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:341:"CREATE TABLE `vionc_finder_links_terms3` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_finder_links_terms3";}}s:25:"vionc_finder_links_terms4";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:341:"CREATE TABLE `vionc_finder_links_terms4` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_finder_links_terms4";}}s:25:"vionc_finder_links_terms5";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:341:"CREATE TABLE `vionc_finder_links_terms5` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_finder_links_terms5";}}s:25:"vionc_finder_links_terms6";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:341:"CREATE TABLE `vionc_finder_links_terms6` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_finder_links_terms6";}}s:25:"vionc_finder_links_terms7";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:341:"CREATE TABLE `vionc_finder_links_terms7` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_finder_links_terms7";}}s:25:"vionc_finder_links_terms8";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:341:"CREATE TABLE `vionc_finder_links_terms8` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_finder_links_terms8";}}s:25:"vionc_finder_links_terms9";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:341:"CREATE TABLE `vionc_finder_links_terms9` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_finder_links_terms9";}}s:25:"vionc_finder_links_termsa";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:341:"CREATE TABLE `vionc_finder_links_termsa` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_finder_links_termsa";}}s:25:"vionc_finder_links_termsb";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:341:"CREATE TABLE `vionc_finder_links_termsb` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_finder_links_termsb";}}s:25:"vionc_finder_links_termsc";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:341:"CREATE TABLE `vionc_finder_links_termsc` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_finder_links_termsc";}}s:25:"vionc_finder_links_termsd";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:341:"CREATE TABLE `vionc_finder_links_termsd` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_finder_links_termsd";}}s:25:"vionc_finder_links_termse";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:341:"CREATE TABLE `vionc_finder_links_termse` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_finder_links_termse";}}s:25:"vionc_finder_links_termsf";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:341:"CREATE TABLE `vionc_finder_links_termsf` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_finder_links_termsf";}}s:21:"vionc_finder_taxonomy";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:590:"CREATE TABLE `vionc_finder_taxonomy` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `parent_id` int(10) unsigned NOT NULL DEFAULT '0',   `title` varchar(255) NOT NULL,   `state` tinyint(1) unsigned NOT NULL DEFAULT '1',   `access` tinyint(1) unsigned NOT NULL DEFAULT '0',   `ordering` tinyint(1) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   KEY `parent_id` (`parent_id`),   KEY `state` (`state`),   KEY `ordering` (`ordering`),   KEY `access` (`access`),   KEY `idx_parent_published` (`parent_id`,`state`,`access`) ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:21:"vionc_finder_taxonomy";}}s:25:"vionc_finder_taxonomy_map";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:256:"CREATE TABLE `vionc_finder_taxonomy_map` (   `link_id` int(10) unsigned NOT NULL,   `node_id` int(10) unsigned NOT NULL,   PRIMARY KEY (`link_id`,`node_id`),   KEY `link_id` (`link_id`),   KEY `node_id` (`node_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_finder_taxonomy_map";}}s:18:"vionc_finder_terms";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:658:"CREATE TABLE `vionc_finder_terms` (   `term_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `term` varchar(75) NOT NULL,   `stem` varchar(75) NOT NULL,   `common` tinyint(1) unsigned NOT NULL DEFAULT '0',   `phrase` tinyint(1) unsigned NOT NULL DEFAULT '0',   `weight` float unsigned NOT NULL DEFAULT '0',   `soundex` varchar(75) NOT NULL,   `links` int(10) NOT NULL DEFAULT '0',   `language` char(3) NOT NULL DEFAULT '',   PRIMARY KEY (`term_id`),   UNIQUE KEY `idx_term` (`term`),   KEY `idx_term_phrase` (`term`,`phrase`),   KEY `idx_stem_phrase` (`stem`,`phrase`),   KEY `idx_soundex_phrase` (`soundex`,`phrase`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:18:"vionc_finder_terms";}}s:25:"vionc_finder_terms_common";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:222:"CREATE TABLE `vionc_finder_terms_common` (   `term` varchar(75) NOT NULL,   `language` varchar(3) NOT NULL,   KEY `idx_word_lang` (`term`,`language`),   KEY `idx_lang` (`language`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_finder_terms_common";}}s:19:"vionc_finder_tokens";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:449:"CREATE TABLE `vionc_finder_tokens` (   `term` varchar(75) NOT NULL,   `stem` varchar(75) NOT NULL,   `common` tinyint(1) unsigned NOT NULL DEFAULT '0',   `phrase` tinyint(1) unsigned NOT NULL DEFAULT '0',   `weight` float unsigned NOT NULL DEFAULT '1',   `context` tinyint(1) unsigned NOT NULL DEFAULT '2',   `language` char(3) NOT NULL DEFAULT '',   KEY `idx_word` (`term`),   KEY `idx_context` (`context`) ) ENGINE=MEMORY DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:19:"vionc_finder_tokens";}}s:29:"vionc_finder_tokens_aggregate";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:606:"CREATE TABLE `vionc_finder_tokens_aggregate` (   `term_id` int(10) unsigned NOT NULL,   `map_suffix` char(1) NOT NULL,   `term` varchar(75) NOT NULL,   `stem` varchar(75) NOT NULL,   `common` tinyint(1) unsigned NOT NULL DEFAULT '0',   `phrase` tinyint(1) unsigned NOT NULL DEFAULT '0',   `term_weight` float unsigned NOT NULL,   `context` tinyint(1) unsigned NOT NULL DEFAULT '2',   `context_weight` float unsigned NOT NULL,   `total_weight` float unsigned NOT NULL,   `language` char(3) NOT NULL DEFAULT '',   KEY `token` (`term`),   KEY `keyword_id` (`term_id`) ) ENGINE=MEMORY DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:29:"vionc_finder_tokens_aggregate";}}s:18:"vionc_finder_types";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:244:"CREATE TABLE `vionc_finder_types` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `title` varchar(100) NOT NULL,   `mime` varchar(100) NOT NULL,   PRIMARY KEY (`id`),   UNIQUE KEY `title` (`title`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:1:{i:0;s:18:"vionc_finder_types";}}s:22:"vionc_hikashop_address";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1136:"CREATE TABLE `vionc_hikashop_address` (   `address_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `address_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `address_type` varchar(50) NOT NULL DEFAULT '',   `address_title` varchar(255) DEFAULT NULL,   `address_firstname` varchar(255) DEFAULT NULL,   `address_middle_name` varchar(255) DEFAULT NULL,   `address_lastname` varchar(255) DEFAULT NULL,   `address_company` varchar(255) DEFAULT NULL,   `address_street` varchar(255) DEFAULT NULL,   `address_street2` varchar(255) NOT NULL DEFAULT '',   `address_post_code` varchar(255) DEFAULT NULL,   `address_city` varchar(255) DEFAULT NULL,   `address_telephone` varchar(255) DEFAULT NULL,   `address_telephone2` varchar(255) DEFAULT NULL,   `address_fax` varchar(255) DEFAULT NULL,   `address_state` varchar(255) DEFAULT NULL,   `address_country` varchar(255) DEFAULT NULL,   `address_published` tinyint(4) NOT NULL DEFAULT '1',   `address_vat` varchar(255) DEFAULT NULL,   `address_default` tinyint(4) NOT NULL DEFAULT '0',   PRIMARY KEY (`address_id`),   KEY `address_user_id` (`address_user_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:22:"vionc_hikashop_address";}}s:20:"vionc_hikashop_badge";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1184:"CREATE TABLE `vionc_hikashop_badge` (   `badge_id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `badge_name` varchar(255) NOT NULL DEFAULT '',   `badge_image` varchar(255) NOT NULL DEFAULT '',   `badge_start` int(10) unsigned NOT NULL DEFAULT '0',   `badge_end` int(10) unsigned NOT NULL DEFAULT '0',   `badge_product_id` varchar(255) NOT NULL DEFAULT '',   `badge_category_id` varchar(255) NOT NULL DEFAULT '',   `badge_category_childs` tinyint(4) NOT NULL DEFAULT '0',   `badge_discount_id` varchar(255) NOT NULL DEFAULT '',   `badge_ordering` int(10) unsigned NOT NULL DEFAULT '0',   `badge_size` float(12,2) unsigned NOT NULL,   `badge_position` varchar(255) NOT NULL DEFAULT 'bottomleft',   `badge_vertical_distance` int(10) NOT NULL DEFAULT '0',   `badge_horizontal_distance` int(10) NOT NULL DEFAULT '0',   `badge_margin` int(10) NOT NULL DEFAULT '0',   `badge_published` tinyint(4) NOT NULL DEFAULT '0',   `badge_keep_size` tinyint(4) NOT NULL DEFAULT '0',   `badge_quantity` varchar(255) NOT NULL DEFAULT '',   `badge_url` varchar(255) NOT NULL DEFAULT '',   `badge_access` varchar(255) NOT NULL DEFAULT 'all',   PRIMARY KEY (`badge_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:20:"vionc_hikashop_badge";}}s:21:"vionc_hikashop_banner";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:454:"CREATE TABLE `vionc_hikashop_banner` (   `banner_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `banner_title` varchar(255) NOT NULL DEFAULT '',   `banner_url` varchar(255) NOT NULL DEFAULT '',   `banner_image_url` varchar(255) NOT NULL DEFAULT '',   `banner_published` tinyint(4) NOT NULL DEFAULT '0',   `banner_ordering` int(11) NOT NULL DEFAULT '0',   `banner_comment` text NOT NULL,   PRIMARY KEY (`banner_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:21:"vionc_hikashop_banner";}}s:19:"vionc_hikashop_cart";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1016:"CREATE TABLE `vionc_hikashop_cart` (   `cart_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `user_id` int(10) unsigned NOT NULL DEFAULT '0',   `session_id` varchar(255) NOT NULL,   `cart_modified` int(10) unsigned NOT NULL DEFAULT '0',   `cart_type` varchar(25) NOT NULL DEFAULT 'cart',   `cart_coupon` varchar(255) NOT NULL DEFAULT '',   `cart_currency_id` int(10) unsigned NOT NULL DEFAULT '0',   `cart_payment_id` int(10) unsigned NOT NULL DEFAULT '0',   `cart_shipping_ids` varchar(255) NOT NULL DEFAULT '',   `cart_billing_address_id` int(10) unsigned NOT NULL DEFAULT '0',   `cart_shipping_address_ids` varchar(255) NOT NULL DEFAULT '',   `cart_name` varchar(255) NOT NULL DEFAULT '',   `cart_current` int(11) NOT NULL DEFAULT '0',   `cart_share` varchar(255) NOT NULL DEFAULT 'nobody',   `cart_params` text,   `cart_fields` longtext,   `cart_ip` varchar(255) NOT NULL DEFAULT '',   PRIMARY KEY (`cart_id`),   KEY `user_id` (`user_id`),   KEY `session_id` (`session_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:19:"vionc_hikashop_cart";}}s:27:"vionc_hikashop_cart_product";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:699:"CREATE TABLE `vionc_hikashop_cart_product` (   `cart_product_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `cart_id` int(10) unsigned NOT NULL DEFAULT '0',   `product_id` int(10) unsigned NOT NULL DEFAULT '0',   `cart_product_quantity` int(10) unsigned NOT NULL DEFAULT '1',   `cart_product_parent_id` int(10) unsigned NOT NULL DEFAULT '0',   `cart_product_modified` int(10) unsigned NOT NULL DEFAULT '0',   `cart_product_option_parent_id` int(10) unsigned DEFAULT '0',   `cart_product_wishlist_id` int(11) NOT NULL DEFAULT '0',   `cart_product_wishlist_product_id` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`cart_product_id`),   KEY `cart_id` (`cart_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:27:"vionc_hikashop_cart_product";}}s:23:"vionc_hikashop_category";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1415:"CREATE TABLE `vionc_hikashop_category` (   `category_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `category_parent_id` int(10) unsigned NOT NULL DEFAULT '0',   `category_type` varchar(255) NOT NULL,   `category_name` varchar(255) NOT NULL,   `category_description` text NOT NULL,   `category_published` tinyint(4) NOT NULL DEFAULT '0',   `category_ordering` int(10) unsigned NOT NULL DEFAULT '0',   `category_left` int(10) unsigned NOT NULL DEFAULT '0',   `category_right` int(10) unsigned NOT NULL DEFAULT '0',   `category_depth` int(10) unsigned NOT NULL DEFAULT '0',   `category_namekey` varchar(255) NOT NULL,   `category_created` int(10) unsigned NOT NULL DEFAULT '0',   `category_modified` int(10) unsigned NOT NULL DEFAULT '0',   `category_access` varchar(255) NOT NULL DEFAULT 'all',   `category_menu` int(10) unsigned DEFAULT '0',   `category_keywords` text NOT NULL,   `category_meta_description` varchar(255) NOT NULL DEFAULT '',   `category_layout` varchar(255) NOT NULL DEFAULT '',   `category_page_title` varchar(255) NOT NULL DEFAULT '',   `category_alias` varchar(255) NOT NULL DEFAULT '',   `category_site_id` varchar(255) DEFAULT '',   `category_canonical` varchar(255) NOT NULL DEFAULT '',   `category_quantity_layout` varchar(255) NOT NULL DEFAULT '',   PRIMARY KEY (`category_id`),   UNIQUE KEY `category_namekey` (`category_namekey`) ) ENGINE=MyISAM AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:23:"vionc_hikashop_category";}}s:29:"vionc_hikashop_characteristic";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:596:"CREATE TABLE `vionc_hikashop_characteristic` (   `characteristic_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `characteristic_parent_id` int(10) NOT NULL DEFAULT '0',   `characteristic_value` varchar(255) NOT NULL DEFAULT '0',   `characteristic_alias` varchar(255) NOT NULL DEFAULT '',   `characteristic_display_type` varchar(255) NOT NULL DEFAULT '',   `characteristic_params` text,   `characteristic_ordering` int(12) unsigned NOT NULL DEFAULT '0',   `characteristic_display_method` varchar(255) NOT NULL DEFAULT '',   PRIMARY KEY (`characteristic_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:29:"vionc_hikashop_characteristic";}}s:20:"vionc_hikashop_click";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:612:"CREATE TABLE `vionc_hikashop_click` (   `click_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `click_ip` varchar(255) NOT NULL DEFAULT '',   `click_created` int(10) unsigned NOT NULL DEFAULT '0',   `click_partner_id` int(10) unsigned NOT NULL DEFAULT '0',   `click_partner_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `click_referer` varchar(255) NOT NULL DEFAULT '',   `click_partner_paid` tinyint(4) NOT NULL DEFAULT '0',   `click_partner_currency_id` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`click_id`),   KEY `click_partner_id` (`click_partner_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:20:"vionc_hikashop_click";}}s:21:"vionc_hikashop_config";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:209:"CREATE TABLE `vionc_hikashop_config` (   `config_namekey` varchar(200) NOT NULL,   `config_value` text NOT NULL,   `config_default` text,   PRIMARY KEY (`config_namekey`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:21:"vionc_hikashop_config";}}s:23:"vionc_hikashop_currency";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:742:"CREATE TABLE `vionc_hikashop_currency` (   `currency_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `currency_symbol` varchar(255) NOT NULL,   `currency_code` varchar(255) NOT NULL,   `currency_format` char(10) NOT NULL DEFAULT '%i',   `currency_name` varchar(255) NOT NULL,   `currency_published` tinyint(4) NOT NULL DEFAULT '0',   `currency_rate` decimal(16,5) NOT NULL DEFAULT '1.00000',   `currency_locale` text NOT NULL,   `currency_displayed` tinyint(4) NOT NULL DEFAULT '0',   `currency_percent_fee` decimal(4,2) NOT NULL DEFAULT '0.00',   `currency_modified` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`currency_id`),   UNIQUE KEY `currency_code` (`currency_code`) ) ENGINE=MyISAM AUTO_INCREMENT=183 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:23:"vionc_hikashop_currency";}}s:23:"vionc_hikashop_discount";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1614:"CREATE TABLE `vionc_hikashop_discount` (   `discount_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `discount_type` varchar(255) NOT NULL DEFAULT 'discount',   `discount_start` int(10) unsigned NOT NULL DEFAULT '0',   `discount_end` int(10) unsigned NOT NULL DEFAULT '0',   `discount_flat_amount` decimal(17,5) NOT NULL DEFAULT '0.00000',   `discount_percent_amount` decimal(12,3) NOT NULL DEFAULT '0.000',   `discount_minimum_order` decimal(17,5) NOT NULL DEFAULT '0.00000',   `discount_quota` int(10) unsigned NOT NULL DEFAULT '0',   `discount_used_times` int(10) unsigned NOT NULL DEFAULT '0',   `discount_code` varchar(255) NOT NULL DEFAULT '',   `discount_published` tinyint(4) NOT NULL DEFAULT '0',   `discount_product_id` varchar(255) NOT NULL DEFAULT '',   `discount_category_id` varchar(255) NOT NULL DEFAULT '',   `discount_zone_id` varchar(255) NOT NULL DEFAULT '',   `discount_currency_id` int(10) unsigned NOT NULL DEFAULT '0',   `discount_category_childs` tinyint(4) NOT NULL DEFAULT '0',   `discount_auto_load` tinyint(3) unsigned DEFAULT '0',   `discount_access` varchar(255) NOT NULL DEFAULT 'all',   `discount_tax_id` int(10) unsigned DEFAULT '0',   `discount_minimum_products` int(10) unsigned DEFAULT '0',   `discount_quota_per_user` int(10) unsigned DEFAULT '0',   `discount_coupon_nodoubling` tinyint(4) DEFAULT NULL,   `discount_coupon_product_only` tinyint(4) DEFAULT NULL,   `discount_affiliate` int(10) NOT NULL DEFAULT '0',   `discount_site_id` varchar(255) DEFAULT '',   PRIMARY KEY (`discount_id`),   UNIQUE KEY `discount_code` (`discount_code`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:23:"vionc_hikashop_discount";}}s:23:"vionc_hikashop_download";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:299:"CREATE TABLE `vionc_hikashop_download` (   `file_id` int(10) unsigned NOT NULL,   `order_id` int(10) unsigned NOT NULL,   `file_pos` int(10) NOT NULL DEFAULT '1',   `download_number` int(11) NOT NULL DEFAULT '1',   PRIMARY KEY (`file_id`,`order_id`,`file_pos`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:23:"vionc_hikashop_download";}}s:20:"vionc_hikashop_entry";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:229:"CREATE TABLE `vionc_hikashop_entry` (   `entry_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `order_id` int(10) unsigned NOT NULL,   PRIMARY KEY (`entry_id`),   KEY `order_id` (`order_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:20:"vionc_hikashop_entry";}}s:20:"vionc_hikashop_field";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1114:"CREATE TABLE `vionc_hikashop_field` (   `field_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `field_table` varchar(50) DEFAULT NULL,   `field_realname` varchar(250) NOT NULL,   `field_namekey` varchar(50) NOT NULL,   `field_type` varchar(50) DEFAULT NULL,   `field_value` longtext NOT NULL,   `field_published` tinyint(3) unsigned NOT NULL DEFAULT '1',   `field_ordering` smallint(5) unsigned DEFAULT '99',   `field_options` text,   `field_core` tinyint(3) unsigned NOT NULL DEFAULT '0',   `field_required` tinyint(3) unsigned NOT NULL DEFAULT '0',   `field_default` varchar(250) DEFAULT NULL,   `field_access` varchar(255) NOT NULL DEFAULT 'all',   `field_categories` text,   `field_with_sub_categories` tinyint(1) NOT NULL DEFAULT '0',   `field_products` text,   `field_frontcomp` tinyint(3) unsigned NOT NULL DEFAULT '0',   `field_backend` tinyint(3) unsigned NOT NULL DEFAULT '1',   `field_backend_listing` tinyint(3) unsigned NOT NULL DEFAULT '0',   `field_display` text,   PRIMARY KEY (`field_id`),   UNIQUE KEY `field_namekey` (`field_namekey`) ) ENGINE=MyISAM AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:20:"vionc_hikashop_field";}}s:19:"vionc_hikashop_file";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:576:"CREATE TABLE `vionc_hikashop_file` (   `file_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `file_name` varchar(255) NOT NULL,   `file_description` text NOT NULL,   `file_path` varchar(255) NOT NULL,   `file_type` varchar(255) NOT NULL DEFAULT 'category',   `file_ref_id` int(10) unsigned NOT NULL DEFAULT '0',   `file_free_download` tinyint(3) unsigned NOT NULL DEFAULT '0',   `file_ordering` int(10) unsigned NOT NULL DEFAULT '0',   `file_limit` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`file_id`),   KEY `file_type` (`file_type`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:19:"vionc_hikashop_file";}}s:21:"vionc_hikashop_filter";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:909:"CREATE TABLE `vionc_hikashop_filter` (   `filter_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `filter_name` varchar(250) NOT NULL,   `filter_namekey` varchar(50) NOT NULL,   `filter_published` tinyint(3) unsigned NOT NULL DEFAULT '1',   `filter_type` varchar(50) DEFAULT NULL,   `filter_category_id` varchar(255) NOT NULL,   `filter_ordering` smallint(5) unsigned DEFAULT '99',   `filter_options` text,   `filter_data` text NOT NULL,   `filter_access` varchar(250) NOT NULL DEFAULT 'all',   `filter_direct_application` tinyint(3) NOT NULL DEFAULT '0',   `filter_value` text NOT NULL,   `filter_category_childs` tinyint(3) unsigned NOT NULL,   `filter_height` int(50) unsigned NOT NULL,   `filter_deletable` tinyint(3) unsigned NOT NULL,   `filter_dynamic` tinyint(3) unsigned NOT NULL,   PRIMARY KEY (`filter_id`),   UNIQUE KEY `filter_namekey` (`filter_namekey`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:21:"vionc_hikashop_filter";}}s:26:"vionc_hikashop_geolocation";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:972:"CREATE TABLE `vionc_hikashop_geolocation` (   `geolocation_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `geolocation_ip` varchar(255) NOT NULL DEFAULT '',   `geolocation_type` varchar(255) NOT NULL DEFAULT 'order',   `geolocation_ref_id` int(10) unsigned NOT NULL DEFAULT '0',   `geolocation_created` int(10) unsigned NOT NULL DEFAULT '0',   `geolocation_latitude` decimal(9,6) NOT NULL DEFAULT '0.000000',   `geolocation_longitude` decimal(9,6) NOT NULL DEFAULT '0.000000',   `geolocation_postal_code` varchar(255) NOT NULL DEFAULT '',   `geolocation_country` varchar(255) NOT NULL DEFAULT '',   `geolocation_country_code` varchar(255) NOT NULL DEFAULT '',   `geolocation_state` varchar(255) NOT NULL DEFAULT '',   `geolocation_state_code` varchar(255) NOT NULL DEFAULT '',   `geolocation_city` varchar(255) NOT NULL DEFAULT '',   PRIMARY KEY (`geolocation_id`),   KEY `geolocation_type` (`geolocation_type`,`geolocation_ref_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:26:"vionc_hikashop_geolocation";}}s:22:"vionc_hikashop_history";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:894:"CREATE TABLE `vionc_hikashop_history` (   `history_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `history_order_id` int(10) unsigned NOT NULL DEFAULT '0',   `history_created` int(10) unsigned NOT NULL DEFAULT '0',   `history_ip` varchar(255) NOT NULL DEFAULT '',   `history_new_status` varchar(255) NOT NULL DEFAULT '',   `history_reason` text NOT NULL,   `history_notified` tinyint(4) NOT NULL DEFAULT '0',   `history_amount` varchar(255) NOT NULL DEFAULT '',   `history_package_id` int(10) unsigned NOT NULL DEFAULT '0',   `history_payment_id` varchar(255) NOT NULL DEFAULT '',   `history_payment_method` varchar(255) NOT NULL DEFAULT '',   `history_data` longtext NOT NULL,   `history_type` varchar(255) NOT NULL DEFAULT '',   `history_user_id` int(10) unsigned DEFAULT '0',   PRIMARY KEY (`history_id`),   KEY `history_order_id` (`history_order_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:22:"vionc_hikashop_history";}}s:20:"vionc_hikashop_limit";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:871:"CREATE TABLE `vionc_hikashop_limit` (   `limit_id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `limit_product_id` int(11) NOT NULL DEFAULT '0',   `limit_category_id` int(11) NOT NULL DEFAULT '0',   `limit_per_product` tinyint(4) NOT NULL DEFAULT '0',   `limit_periodicity` varchar(255) NOT NULL DEFAULT '',   `limit_type` varchar(255) NOT NULL DEFAULT '',   `limit_value` int(10) NOT NULL DEFAULT '0',   `limit_unit` varchar(255) DEFAULT NULL,   `limit_currency_id` int(11) NOT NULL DEFAULT '0',   `limit_access` varchar(255) NOT NULL DEFAULT '',   `limit_status` varchar(255) NOT NULL DEFAULT '',   `limit_published` tinyint(4) NOT NULL DEFAULT '0',   `limit_created` int(10) DEFAULT NULL,   `limit_modified` int(10) DEFAULT NULL,   `limit_start` int(10) DEFAULT NULL,   `limit_end` int(10) DEFAULT NULL,   PRIMARY KEY (`limit_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:20:"vionc_hikashop_limit";}}s:25:"vionc_hikashop_massaction";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:651:"CREATE TABLE `vionc_hikashop_massaction` (   `massaction_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `massaction_name` varchar(255) NOT NULL DEFAULT '',   `massaction_description` text NOT NULL,   `massaction_table` varchar(255) NOT NULL DEFAULT 'product',   `massaction_published` tinyint(4) NOT NULL DEFAULT '1',   `massaction_lasttime` int(10) unsigned NOT NULL DEFAULT '0',   `massaction_triggers` text NOT NULL,   `massaction_filters` text NOT NULL,   `massaction_actions` text NOT NULL,   `massaction_report` text NOT NULL,   PRIMARY KEY (`massaction_id`),   KEY `massaction_table` (`massaction_table`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:25:"vionc_hikashop_massaction";}}s:20:"vionc_hikashop_order";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2190:"CREATE TABLE `vionc_hikashop_order` (   `order_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `order_billing_address_id` int(10) unsigned NOT NULL DEFAULT '0',   `order_shipping_address_id` int(10) unsigned NOT NULL DEFAULT '0',   `order_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `order_status` varchar(255) NOT NULL DEFAULT '',   `order_type` varchar(255) NOT NULL DEFAULT 'sale',   `order_number` varchar(255) NOT NULL DEFAULT '',   `order_created` int(10) unsigned NOT NULL DEFAULT '0',   `order_modified` int(10) unsigned NOT NULL DEFAULT '0',   `order_invoice_id` int(10) unsigned NOT NULL DEFAULT '0',   `order_invoice_number` varchar(255) NOT NULL DEFAULT '',   `order_invoice_created` int(10) unsigned NOT NULL DEFAULT '0',   `order_currency_id` int(10) unsigned NOT NULL DEFAULT '0',   `order_currency_info` text,   `order_full_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_tax_info` text,   `order_discount_code` varchar(255) NOT NULL DEFAULT '',   `order_discount_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_discount_tax` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_payment_id` varchar(255) NOT NULL DEFAULT '',   `order_payment_method` varchar(255) NOT NULL DEFAULT '',   `order_payment_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_payment_tax` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_payment_params` text,   `order_shipping_id` varchar(255) NOT NULL DEFAULT '',   `order_shipping_method` varchar(255) NOT NULL DEFAULT '',   `order_shipping_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_shipping_tax` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_shipping_params` text,   `order_partner_id` int(10) unsigned NOT NULL DEFAULT '0',   `order_partner_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_partner_paid` int(11) NOT NULL DEFAULT '0',   `order_partner_currency_id` int(10) unsigned NOT NULL DEFAULT '0',   `order_ip` varchar(255) NOT NULL DEFAULT '',   `order_site_id` varchar(255) DEFAULT '',   `order_lang` varchar(255) DEFAULT '',   `order_token` varchar(255) DEFAULT '',   PRIMARY KEY (`order_id`),   KEY `order_user_id` (`order_user_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:20:"vionc_hikashop_order";}}s:28:"vionc_hikashop_order_product";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1284:"CREATE TABLE `vionc_hikashop_order_product` (   `order_product_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `order_id` int(10) unsigned NOT NULL DEFAULT '0',   `product_id` int(10) unsigned NOT NULL DEFAULT '0',   `order_product_quantity` int(10) unsigned NOT NULL DEFAULT '1',   `order_product_name` varchar(255) NOT NULL DEFAULT '',   `order_product_code` varchar(255) NOT NULL DEFAULT '',   `order_product_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_product_tax` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_product_tax_info` text NOT NULL,   `order_product_options` text NOT NULL,   `order_product_option_parent_id` int(10) unsigned DEFAULT '0',   `order_product_status` varchar(255) NOT NULL DEFAULT '',   `order_product_wishlist_id` int(11) NOT NULL DEFAULT '0',   `order_product_wishlist_product_id` int(11) NOT NULL DEFAULT '0',   `order_product_shipping_id` varchar(255) NOT NULL DEFAULT '',   `order_product_shipping_method` varchar(255) NOT NULL DEFAULT '',   `order_product_shipping_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_product_shipping_tax` decimal(17,5) NOT NULL DEFAULT '0.00000',   `order_product_shipping_params` text,   PRIMARY KEY (`order_product_id`),   KEY `order_id` (`order_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:28:"vionc_hikashop_order_product";}}s:26:"vionc_hikashop_orderstatus";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:599:"CREATE TABLE `vionc_hikashop_orderstatus` (   `orderstatus_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `orderstatus_namekey` varchar(255) NOT NULL,   `orderstatus_name` varchar(255) NOT NULL DEFAULT '',   `orderstatus_description` text NOT NULL,   `orderstatus_published` tinyint(4) NOT NULL DEFAULT '0',   `orderstatus_ordering` int(10) unsigned NOT NULL DEFAULT '0',   `orderstatus_email_params` longtext,   `orderstatus_links_params` longtext,   PRIMARY KEY (`orderstatus_id`),   UNIQUE KEY `orderstatus_namekey` (`orderstatus_namekey`) ) ENGINE=MyISAM AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:26:"vionc_hikashop_orderstatus";}}s:22:"vionc_hikashop_payment";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:751:"CREATE TABLE `vionc_hikashop_payment` (   `payment_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `payment_name` varchar(255) NOT NULL DEFAULT '',   `payment_description` text NOT NULL,   `payment_images` text NOT NULL,   `payment_params` text NOT NULL,   `payment_type` varchar(255) NOT NULL DEFAULT '',   `payment_zone_namekey` varchar(255) NOT NULL DEFAULT '',   `payment_ordering` int(10) unsigned NOT NULL DEFAULT '0',   `payment_published` tinyint(4) NOT NULL DEFAULT '1',   `payment_access` varchar(255) NOT NULL DEFAULT 'all',   `payment_shipping_methods` text NOT NULL,   `payment_currency` varchar(255) NOT NULL,   `payment_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   PRIMARY KEY (`payment_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:22:"vionc_hikashop_payment";}}s:21:"vionc_hikashop_plugin";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:438:"CREATE TABLE `vionc_hikashop_plugin` (   `plugin_id` int(10) NOT NULL AUTO_INCREMENT,   `plugin_type` varchar(255) NOT NULL,   `plugin_published` int(4) NOT NULL DEFAULT '0',   `plugin_name` varchar(255) NOT NULL,   `plugin_ordering` int(10) NOT NULL DEFAULT '0',   `plugin_description` text,   `plugin_params` text,   `plugin_access` varchar(255) NOT NULL DEFAULT 'all',   PRIMARY KEY (`plugin_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:21:"vionc_hikashop_plugin";}}s:20:"vionc_hikashop_price";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:593:"CREATE TABLE `vionc_hikashop_price` (   `price_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `price_currency_id` int(10) unsigned NOT NULL DEFAULT '0',   `price_product_id` int(10) unsigned NOT NULL DEFAULT '0',   `price_value` decimal(17,5) NOT NULL DEFAULT '0.00000',   `price_min_quantity` int(10) unsigned NOT NULL DEFAULT '0',   `price_access` varchar(255) NOT NULL DEFAULT 'all',   `price_users` varchar(255) NOT NULL DEFAULT '',   `price_site_id` varchar(255) DEFAULT '',   PRIMARY KEY (`price_id`),   KEY `price_product_id` (`price_product_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:20:"vionc_hikashop_price";}}s:22:"vionc_hikashop_product";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2892:"CREATE TABLE `vionc_hikashop_product` (   `product_id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `product_parent_id` int(11) unsigned NOT NULL DEFAULT '0',   `product_name` varchar(255) NOT NULL,   `product_description` text NOT NULL,   `product_quantity` int(11) NOT NULL DEFAULT '-1',   `product_code` varchar(255) NOT NULL,   `product_published` tinyint(4) NOT NULL DEFAULT '0',   `product_hit` int(11) unsigned NOT NULL DEFAULT '0',   `product_created` int(11) unsigned NOT NULL DEFAULT '0',   `product_sale_start` int(10) unsigned NOT NULL DEFAULT '0',   `product_sale_end` int(10) unsigned NOT NULL DEFAULT '0',   `product_delay_id` int(10) unsigned NOT NULL DEFAULT '0',   `product_tax_id` int(10) unsigned NOT NULL DEFAULT '0',   `product_type` varchar(255) NOT NULL DEFAULT '',   `product_vendor_id` int(10) unsigned NOT NULL DEFAULT '0',   `product_manufacturer_id` int(10) unsigned NOT NULL DEFAULT '0',   `product_url` varchar(255) NOT NULL,   `product_weight` decimal(12,3) unsigned NOT NULL DEFAULT '0.000',   `product_keywords` text NOT NULL,   `product_weight_unit` varchar(255) NOT NULL DEFAULT 'kg',   `product_modified` int(10) unsigned NOT NULL DEFAULT '0',   `product_meta_description` varchar(255) NOT NULL DEFAULT '',   `product_dimension_unit` varchar(255) NOT NULL DEFAULT 'm',   `product_width` decimal(12,3) NOT NULL DEFAULT '0.000',   `product_length` decimal(12,3) NOT NULL DEFAULT '0.000',   `product_height` decimal(12,3) NOT NULL DEFAULT '0.000',   `product_max_per_order` int(10) unsigned DEFAULT '0',   `product_access` varchar(255) NOT NULL DEFAULT 'all',   `product_group_after_purchase` varchar(255) NOT NULL DEFAULT '',   `product_min_per_order` int(10) unsigned DEFAULT '0',   `product_contact` smallint(5) unsigned NOT NULL DEFAULT '0',   `product_display_quantity_field` smallint(5) NOT NULL DEFAULT '0',   `product_last_seen_date` int(10) unsigned DEFAULT '0',   `product_sales` int(10) unsigned DEFAULT '0',   `product_waitlist` smallint(5) unsigned NOT NULL DEFAULT '0',   `product_layout` varchar(255) NOT NULL DEFAULT '',   `product_average_score` float NOT NULL,   `product_total_vote` int(11) NOT NULL DEFAULT '0',   `product_page_title` varchar(255) NOT NULL DEFAULT '',   `product_alias` varchar(255) NOT NULL DEFAULT '',   `product_price_percentage` decimal(15,7) NOT NULL DEFAULT '0.0000000',   `product_msrp` decimal(15,7) DEFAULT '0.0000000',   `product_canonical` varchar(255) NOT NULL DEFAULT '',   `product_warehouse_id` int(10) unsigned NOT NULL DEFAULT '0',   `product_quantity_layout` varchar(255) NOT NULL DEFAULT '',   `product_sort_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   PRIMARY KEY (`product_id`),   UNIQUE KEY `product_code` (`product_code`),   KEY `product_parent_id` (`product_parent_id`),   KEY `product_main_index` (`product_type`,`product_quantity`,`product_published`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:22:"vionc_hikashop_product";}}s:31:"vionc_hikashop_product_category";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:421:"CREATE TABLE `vionc_hikashop_product_category` (   `product_category_id` int(255) unsigned NOT NULL AUTO_INCREMENT,   `category_id` int(10) unsigned NOT NULL,   `product_id` int(10) unsigned NOT NULL,   `ordering` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`product_category_id`),   UNIQUE KEY `category_id` (`category_id`,`product_id`),   KEY `product_id` (`product_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:31:"vionc_hikashop_product_category";}}s:30:"vionc_hikashop_product_related";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:435:"CREATE TABLE `vionc_hikashop_product_related` (   `product_id` int(10) unsigned NOT NULL,   `product_related_id` int(10) unsigned NOT NULL,   `product_related_type` varchar(255) NOT NULL DEFAULT 'related',   `product_related_ordering` int(10) unsigned DEFAULT '0',   `product_related_quantity` int(10) unsigned DEFAULT '0',   PRIMARY KEY (`product_id`,`product_related_id`,`product_related_type`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:30:"vionc_hikashop_product_related";}}s:23:"vionc_hikashop_shipping";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:838:"CREATE TABLE `vionc_hikashop_shipping` (   `shipping_id` int(11) NOT NULL AUTO_INCREMENT,   `shipping_type` varchar(255) NOT NULL DEFAULT 'manual',   `shipping_zone_namekey` varchar(255) NOT NULL,   `shipping_tax_id` int(10) unsigned NOT NULL DEFAULT '0',   `shipping_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `shipping_currency_id` int(10) unsigned NOT NULL DEFAULT '0',   `shipping_name` varchar(255) NOT NULL,   `shipping_description` text NOT NULL,   `shipping_published` tinyint(4) NOT NULL DEFAULT '1',   `shipping_ordering` int(10) unsigned NOT NULL DEFAULT '0',   `shipping_currency` varchar(255) NOT NULL,   `shipping_params` text NOT NULL,   `shipping_images` varchar(255) NOT NULL DEFAULT '',   `shipping_access` varchar(255) NOT NULL DEFAULT 'all',   PRIMARY KEY (`shipping_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:23:"vionc_hikashop_shipping";}}s:29:"vionc_hikashop_shipping_price";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:521:"CREATE TABLE `vionc_hikashop_shipping_price` (   `shipping_price_id` int(11) NOT NULL AUTO_INCREMENT,   `shipping_id` int(11) NOT NULL,   `shipping_price_ref_id` int(11) NOT NULL,   `shipping_price_ref_type` varchar(255) NOT NULL DEFAULT 'product',   `shipping_price_min_quantity` int(11) NOT NULL DEFAULT '0',   `shipping_price_value` decimal(15,7) NOT NULL DEFAULT '0.0000000',   `shipping_fee_value` decimal(15,7) NOT NULL DEFAULT '0.0000000',   PRIMARY KEY (`shipping_price_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:29:"vionc_hikashop_shipping_price";}}s:18:"vionc_hikashop_tax";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:198:"CREATE TABLE `vionc_hikashop_tax` (   `tax_namekey` varchar(255) NOT NULL,   `tax_rate` decimal(17,5) NOT NULL DEFAULT '0.00000',   PRIMARY KEY (`tax_namekey`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:18:"vionc_hikashop_tax";}}s:23:"vionc_hikashop_taxation";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1098:"CREATE TABLE `vionc_hikashop_taxation` (   `taxation_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `zone_namekey` varchar(255) NOT NULL,   `category_namekey` varchar(255) NOT NULL,   `tax_namekey` varchar(255) NOT NULL,   `taxation_published` tinyint(4) NOT NULL DEFAULT '0',   `taxation_type` varchar(255) NOT NULL DEFAULT 'individual',   `taxation_access` varchar(255) NOT NULL DEFAULT 'all',   `taxation_cumulative` tinyint(4) DEFAULT NULL,   `taxation_post_code` varchar(255) NOT NULL DEFAULT '',   `taxation_date_start` int(10) unsigned NOT NULL DEFAULT '0',   `taxation_date_end` int(10) unsigned NOT NULL DEFAULT '0',   `taxation_internal_code` varchar(15) NOT NULL DEFAULT '' COMMENT 'Accounting internal code',   `taxation_note` text NOT NULL COMMENT 'Note to add in the invoice when this tax is used - It uses the language file for the translation',   `taxation_site_id` varchar(255) NOT NULL DEFAULT '' COMMENT 'Reference to JMS site ID',   `taxation_ordering` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`taxation_id`) ) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:23:"vionc_hikashop_taxation";}}s:19:"vionc_hikashop_user";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:962:"CREATE TABLE `vionc_hikashop_user` (   `user_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `user_cms_id` int(10) unsigned NOT NULL,   `user_email` varchar(255) NOT NULL DEFAULT '',   `user_partner_email` varchar(255) NOT NULL,   `user_params` text NOT NULL,   `user_partner_id` int(10) unsigned NOT NULL DEFAULT '0',   `user_partner_price` decimal(17,5) NOT NULL DEFAULT '0.00000',   `user_partner_paid` tinyint(4) NOT NULL DEFAULT '0',   `user_created_ip` varchar(255) NOT NULL DEFAULT '',   `user_unpaid_amount` decimal(17,5) NOT NULL DEFAULT '0.00000',   `user_partner_currency_id` int(10) unsigned NOT NULL DEFAULT '0',   `user_created` int(10) unsigned NOT NULL DEFAULT '0',   `user_currency_id` int(10) unsigned NOT NULL DEFAULT '0',   `user_partner_activated` tinyint(4) NOT NULL DEFAULT '0',   PRIMARY KEY (`user_id`),   UNIQUE KEY `user_email` (`user_email`),   KEY `user_cms_id` (`user_cms_id`) ) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:19:"vionc_hikashop_user";}}s:22:"vionc_hikashop_variant";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:353:"CREATE TABLE `vionc_hikashop_variant` (   `variant_characteristic_id` int(10) unsigned NOT NULL,   `variant_product_id` int(10) unsigned NOT NULL,   `ordering` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`variant_characteristic_id`,`variant_product_id`),   KEY `variant_product_id` (`variant_product_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:22:"vionc_hikashop_variant";}}s:19:"vionc_hikashop_vote";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:568:"CREATE TABLE `vionc_hikashop_vote` (   `vote_id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `vote_ref_id` int(11) NOT NULL,   `vote_type` varchar(15) NOT NULL,   `vote_user_id` varchar(255) NOT NULL,   `vote_rating` float NOT NULL,   `vote_comment` text NOT NULL,   `vote_useful` int(11) NOT NULL,   `vote_pseudo` varchar(255) NOT NULL,   `vote_ip` varchar(255) NOT NULL,   `vote_email` varchar(255) NOT NULL,   `vote_date` int(10) unsigned NOT NULL,   `vote_published` tinyint(4) NOT NULL DEFAULT '1',   PRIMARY KEY (`vote_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:19:"vionc_hikashop_vote";}}s:24:"vionc_hikashop_vote_user";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:200:"CREATE TABLE `vionc_hikashop_vote_user` (   `vote_user_id` int(11) NOT NULL,   `vote_user_user_id` varchar(26) NOT NULL,   `vote_user_useful` tinyint(4) NOT NULL ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:24:"vionc_hikashop_vote_user";}}s:23:"vionc_hikashop_waitlist";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:372:"CREATE TABLE `vionc_hikashop_waitlist` (   `waitlist_id` int(11) NOT NULL AUTO_INCREMENT,   `product_id` int(11) NOT NULL,   `date` int(11) NOT NULL,   `email` varchar(255) NOT NULL,   `name` varchar(255) DEFAULT NULL,   `product_item_id` int(11) NOT NULL,   `language` varchar(255) NOT NULL DEFAULT '',   PRIMARY KEY (`waitlist_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:23:"vionc_hikashop_waitlist";}}s:24:"vionc_hikashop_warehouse";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:454:"CREATE TABLE `vionc_hikashop_warehouse` (   `warehouse_id` int(10) NOT NULL AUTO_INCREMENT,   `warehouse_name` varchar(255) NOT NULL DEFAULT '',   `warehouse_published` tinyint(4) NOT NULL DEFAULT '1',   `warehouse_description` text NOT NULL,   `warehouse_ordering` int(10) NOT NULL DEFAULT '0',   `warehouse_created` int(10) DEFAULT NULL,   `warehouse_modified` int(10) DEFAULT NULL,   PRIMARY KEY (`warehouse_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:24:"vionc_hikashop_warehouse";}}s:21:"vionc_hikashop_widget";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:410:"CREATE TABLE `vionc_hikashop_widget` (   `widget_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `widget_name` varchar(255) NOT NULL,   `widget_params` text NOT NULL,   `widget_published` tinyint(4) NOT NULL DEFAULT '0',   `widget_ordering` int(11) NOT NULL DEFAULT '0',   `widget_access` varchar(250) NOT NULL DEFAULT 'all',   PRIMARY KEY (`widget_id`) ) ENGINE=MyISAM AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:21:"vionc_hikashop_widget";}}s:19:"vionc_hikashop_zone";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:616:"CREATE TABLE `vionc_hikashop_zone` (   `zone_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `zone_namekey` varchar(255) NOT NULL,   `zone_name` varchar(255) NOT NULL,   `zone_name_english` varchar(255) NOT NULL,   `zone_code_2` varchar(255) NOT NULL,   `zone_code_3` varchar(255) NOT NULL,   `zone_type` varchar(255) NOT NULL DEFAULT 'country',   `zone_published` tinyint(4) NOT NULL DEFAULT '0',   `zone_currency_id` int(10) unsigned DEFAULT '0',   PRIMARY KEY (`zone_id`),   UNIQUE KEY `zone_namekey` (`zone_namekey`),   KEY `zone_code_3` (`zone_code_3`) ) ENGINE=MyISAM AUTO_INCREMENT=4571 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:19:"vionc_hikashop_zone";}}s:24:"vionc_hikashop_zone_link";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:242:"CREATE TABLE `vionc_hikashop_zone_link` (   `zone_parent_namekey` varchar(255) NOT NULL,   `zone_child_namekey` varchar(255) NOT NULL,   PRIMARY KEY (`zone_parent_namekey`(150),`zone_child_namekey`(150)) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:1:{i:0;s:24:"vionc_hikashop_zone_link";}}s:15:"vionc_languages";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1093:"CREATE TABLE `vionc_languages` (   `lang_id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `asset_id` int(10) unsigned NOT NULL DEFAULT '0',   `lang_code` char(7) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,   `title` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,   `title_native` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,   `sef` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,   `image` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,   `description` varchar(512) COLLATE utf8mb4_unicode_ci NOT NULL,   `metakey` text COLLATE utf8mb4_unicode_ci NOT NULL,   `metadesc` text COLLATE utf8mb4_unicode_ci NOT NULL,   `sitename` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `published` int(11) NOT NULL DEFAULT '0',   `access` int(10) unsigned NOT NULL DEFAULT '0',   `ordering` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`lang_id`),   UNIQUE KEY `idx_sef` (`sef`),   UNIQUE KEY `idx_langcode` (`lang_code`),   KEY `idx_access` (`access`),   KEY `idx_ordering` (`ordering`) ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:15:"vionc_languages";}}s:10:"vionc_menu";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2724:"CREATE TABLE `vionc_menu` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `menutype` varchar(24) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The type of menu this item belongs to. FK to #__menu_types.menutype',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The display title of the menu item.',   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT 'The SEF alias of the menu item.',   `note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `path` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The computed path of the menu item based on the alias field.',   `link` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The actually link the menu item refers to.',   `type` varchar(16) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The type of link: Component, URL, Alias, Separator',   `published` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'The published state of the menu link.',   `parent_id` int(10) unsigned NOT NULL DEFAULT '1' COMMENT 'The parent menu item in the menu tree.',   `level` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'The relative level in the tree.',   `component_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'FK to #__extensions.id',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'FK to #__users.id',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'The time the menu item was checked out.',   `browserNav` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'The click behaviour of the link.',   `access` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'The access level required to view the menu item.',   `img` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The image of the menu item.',   `template_style_id` int(10) unsigned NOT NULL DEFAULT '0',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'JSON encoded data for the menu item.',   `lft` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set lft.',   `rgt` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set rgt.',   `home` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT 'Indicates if this menu item is the home or default page.',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `client_id` tinyint(4) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `idx_client_id_parent_id_alias_language` (`client_id`,`parent_id`,`alias`(100),`language`),   KEY `idx_componentid` (`component_id`,`menutype`,`published`,`access`),   KEY `idx_menutype` (`menutype`),   KEY `idx_left_right` (`lft`,`rgt`),   KEY `idx_alias` (`alias`(100)),   KEY `idx_path` (`path`(100)),   KEY `idx_language` (`language`) ) ENGINE=InnoDB AUTO_INCREMENT=149 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:10:"vionc_menu";}}s:16:"vionc_menu_types";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:525:"CREATE TABLE `vionc_menu_types` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `asset_id` int(10) unsigned NOT NULL DEFAULT '0',   `menutype` varchar(24) COLLATE utf8mb4_unicode_ci NOT NULL,   `title` varchar(48) COLLATE utf8mb4_unicode_ci NOT NULL,   `description` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `client_id` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `idx_menutype` (`menutype`) ) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:16:"vionc_menu_types";}}s:14:"vionc_messages";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:687:"CREATE TABLE `vionc_messages` (   `message_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `user_id_from` int(10) unsigned NOT NULL DEFAULT '0',   `user_id_to` int(10) unsigned NOT NULL DEFAULT '0',   `folder_id` tinyint(3) unsigned NOT NULL DEFAULT '0',   `date_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `state` tinyint(1) NOT NULL DEFAULT '0',   `priority` tinyint(1) unsigned NOT NULL DEFAULT '0',   `subject` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `message` text COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`message_id`),   KEY `useridto_state` (`user_id_to`,`state`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:14:"vionc_messages";}}s:18:"vionc_messages_cfg";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:360:"CREATE TABLE `vionc_messages_cfg` (   `user_id` int(10) unsigned NOT NULL DEFAULT '0',   `cfg_name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `cfg_value` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   UNIQUE KEY `idx_user_var_name` (`user_id`,`cfg_name`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:18:"vionc_messages_cfg";}}s:13:"vionc_modules";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1328:"CREATE TABLE `vionc_modules` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `asset_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'FK to the #__assets table.',   `title` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `content` text COLLATE utf8mb4_unicode_ci NOT NULL,   `ordering` int(11) NOT NULL DEFAULT '0',   `position` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `published` tinyint(1) NOT NULL DEFAULT '0',   `module` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `access` int(10) unsigned NOT NULL DEFAULT '0',   `showtitle` tinyint(3) unsigned NOT NULL DEFAULT '1',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `client_id` tinyint(4) NOT NULL DEFAULT '0',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`id`),   KEY `published` (`published`,`access`),   KEY `newsfeeds` (`module`,`published`),   KEY `idx_language` (`language`) ) ENGINE=InnoDB AUTO_INCREMENT=111 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:13:"vionc_modules";}}s:18:"vionc_modules_menu";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:224:"CREATE TABLE `vionc_modules_menu` (   `moduleid` int(11) NOT NULL DEFAULT '0',   `menuid` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`moduleid`,`menuid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:18:"vionc_modules_menu";}}s:15:"vionc_newsfeeds";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2178:"CREATE TABLE `vionc_newsfeeds` (   `catid` int(11) NOT NULL DEFAULT '0',   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `link` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `published` tinyint(1) NOT NULL DEFAULT '0',   `numarticles` int(10) unsigned NOT NULL DEFAULT '1',   `cache_time` int(10) unsigned NOT NULL DEFAULT '3600',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `ordering` int(11) NOT NULL DEFAULT '0',   `rtl` tinyint(4) NOT NULL DEFAULT '0',   `access` int(10) unsigned NOT NULL DEFAULT '0',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(10) unsigned NOT NULL DEFAULT '0',   `created_by_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `metakey` text COLLATE utf8mb4_unicode_ci NOT NULL,   `metadesc` text COLLATE utf8mb4_unicode_ci NOT NULL,   `metadata` text COLLATE utf8mb4_unicode_ci NOT NULL,   `xreference` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'A reference to enable linkages to external data sets.',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `description` text COLLATE utf8mb4_unicode_ci NOT NULL,   `version` int(10) unsigned NOT NULL DEFAULT '1',   `hits` int(10) unsigned NOT NULL DEFAULT '0',   `images` text COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`id`),   KEY `idx_access` (`access`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_state` (`published`),   KEY `idx_catid` (`catid`),   KEY `idx_createdby` (`created_by`),   KEY `idx_language` (`language`),   KEY `idx_xreference` (`xreference`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:15:"vionc_newsfeeds";}}s:15:"vionc_overrider";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:359:"CREATE TABLE `vionc_overrider` (   `id` int(10) NOT NULL AUTO_INCREMENT COMMENT 'Primary Key',   `constant` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `string` text COLLATE utf8mb4_unicode_ci NOT NULL,   `file` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:15:"vionc_overrider";}}s:26:"vionc_postinstall_messages";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1610:"CREATE TABLE `vionc_postinstall_messages` (   `postinstall_message_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,   `extension_id` bigint(20) NOT NULL DEFAULT '700' COMMENT 'FK to #__extensions',   `title_key` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'Lang key for the title',   `description_key` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'Lang key for description',   `action_key` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `language_extension` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'com_postinstall' COMMENT 'Extension holding lang keys',   `language_client_id` tinyint(3) NOT NULL DEFAULT '1',   `type` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'link' COMMENT 'Message type - message, link, action',   `action_file` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT '' COMMENT 'RAD URI to the PHP file containing action method',   `action` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT '' COMMENT 'Action method name or URL',   `condition_file` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT 'RAD URI to file holding display condition method',   `condition_method` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT 'Display condition method, must return boolean',   `version_introduced` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '3.2.0' COMMENT 'Version when this message was introduced',   `enabled` tinyint(3) NOT NULL DEFAULT '1',   PRIMARY KEY (`postinstall_message_id`) ) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:26:"vionc_postinstall_messages";}}s:20:"vionc_redirect_links";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:787:"CREATE TABLE `vionc_redirect_links` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `old_url` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL,   `new_url` varchar(2048) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `referer` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL,   `comment` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `hits` int(10) unsigned NOT NULL DEFAULT '0',   `published` tinyint(4) NOT NULL,   `created_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `header` smallint(3) NOT NULL DEFAULT '301',   PRIMARY KEY (`id`),   KEY `idx_old_url` (`old_url`(100)),   KEY `idx_link_modifed` (`modified_date`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:20:"vionc_redirect_links";}}s:13:"vionc_schemas";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:242:"CREATE TABLE `vionc_schemas` (   `extension_id` int(11) NOT NULL,   `version_id` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`extension_id`,`version_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:13:"vionc_schemas";}}s:13:"vionc_session";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:550:"CREATE TABLE `vionc_session` (   `session_id` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `client_id` tinyint(3) unsigned DEFAULT NULL,   `guest` tinyint(4) unsigned DEFAULT '1',   `time` varchar(14) COLLATE utf8mb4_unicode_ci DEFAULT '',   `data` mediumtext COLLATE utf8mb4_unicode_ci,   `userid` int(11) DEFAULT '0',   `username` varchar(150) COLLATE utf8mb4_unicode_ci DEFAULT '',   PRIMARY KEY (`session_id`),   KEY `userid` (`userid`),   KEY `time` (`time`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:13:"vionc_session";}}s:10:"vionc_tags";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2281:"CREATE TABLE `vionc_tags` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `parent_id` int(10) unsigned NOT NULL DEFAULT '0',   `lft` int(11) NOT NULL DEFAULT '0',   `rgt` int(11) NOT NULL DEFAULT '0',   `level` int(10) unsigned NOT NULL DEFAULT '0',   `path` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `description` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `published` tinyint(1) NOT NULL DEFAULT '0',   `checked_out` int(11) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `access` int(10) unsigned NOT NULL DEFAULT '0',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `metadesc` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The meta description for the page.',   `metakey` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The meta keywords for the page.',   `metadata` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'JSON encoded metadata properties.',   `created_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `created_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `modified_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `modified_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `images` text COLLATE utf8mb4_unicode_ci NOT NULL,   `urls` text COLLATE utf8mb4_unicode_ci NOT NULL,   `hits` int(10) unsigned NOT NULL DEFAULT '0',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL,   `version` int(10) unsigned NOT NULL DEFAULT '1',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   PRIMARY KEY (`id`),   KEY `tag_idx` (`published`,`access`),   KEY `idx_access` (`access`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_path` (`path`(100)),   KEY `idx_left_right` (`lft`,`rgt`),   KEY `idx_alias` (`alias`(100)),   KEY `idx_language` (`language`) ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:10:"vionc_tags";}}s:21:"vionc_template_styles";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:575:"CREATE TABLE `vionc_template_styles` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `template` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `client_id` tinyint(1) unsigned NOT NULL DEFAULT '0',   `home` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '0',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`id`),   KEY `idx_template` (`template`),   KEY `idx_home` (`home`) ) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:21:"vionc_template_styles";}}s:14:"vionc_ucm_base";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:400:"CREATE TABLE `vionc_ucm_base` (   `ucm_id` int(10) unsigned NOT NULL,   `ucm_item_id` int(10) NOT NULL,   `ucm_type_id` int(11) NOT NULL,   `ucm_language_id` int(11) NOT NULL,   PRIMARY KEY (`ucm_id`),   KEY `idx_ucm_item_id` (`ucm_item_id`),   KEY `idx_ucm_type_id` (`ucm_type_id`),   KEY `idx_ucm_language_id` (`ucm_language_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:14:"vionc_ucm_base";}}s:17:"vionc_ucm_content";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:3161:"CREATE TABLE `vionc_ucm_content` (   `core_content_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `core_type_alias` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'FK to the content types table',   `core_title` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `core_alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `core_body` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `core_state` tinyint(1) NOT NULL DEFAULT '0',   `core_checked_out_time` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '0000-00-00 00:00:00',   `core_checked_out_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `core_access` int(10) unsigned NOT NULL DEFAULT '0',   `core_params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `core_featured` tinyint(4) unsigned NOT NULL DEFAULT '0',   `core_metadata` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'JSON encoded metadata properties.',   `core_created_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `core_created_by_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `core_created_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `core_modified_user_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Most recent user that modified',   `core_modified_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `core_language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `core_publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `core_publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `core_content_item_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'ID from the individual type table',   `asset_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'FK to the #__assets table.',   `core_images` text COLLATE utf8mb4_unicode_ci NOT NULL,   `core_urls` text COLLATE utf8mb4_unicode_ci NOT NULL,   `core_hits` int(10) unsigned NOT NULL DEFAULT '0',   `core_version` int(10) unsigned NOT NULL DEFAULT '1',   `core_ordering` int(11) NOT NULL DEFAULT '0',   `core_metakey` text COLLATE utf8mb4_unicode_ci NOT NULL,   `core_metadesc` text COLLATE utf8mb4_unicode_ci NOT NULL,   `core_catid` int(10) unsigned NOT NULL DEFAULT '0',   `core_xreference` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'A reference to enable linkages to external data sets.',   `core_type_id` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`core_content_id`),   KEY `tag_idx` (`core_state`,`core_access`),   KEY `idx_access` (`core_access`),   KEY `idx_alias` (`core_alias`(100)),   KEY `idx_language` (`core_language`),   KEY `idx_title` (`core_title`(100)),   KEY `idx_modified_time` (`core_modified_time`),   KEY `idx_created_time` (`core_created_time`),   KEY `idx_content_type` (`core_type_alias`(100)),   KEY `idx_core_modified_user_id` (`core_modified_user_id`),   KEY `idx_core_checked_out_user_id` (`core_checked_out_user_id`),   KEY `idx_core_created_user_id` (`core_created_user_id`),   KEY `idx_core_type_id` (`core_type_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Contains core content data in name spaced fields';
";s:12:"dependencies";a:1:{i:0;s:17:"vionc_ucm_content";}}s:17:"vionc_ucm_history";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1020:"CREATE TABLE `vionc_ucm_history` (   `version_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `ucm_item_id` int(10) unsigned NOT NULL,   `ucm_type_id` int(10) unsigned NOT NULL,   `version_note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'Optional version name',   `save_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `editor_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `character_count` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Number of characters in this version.',   `sha1_hash` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'SHA1 hash of the version_data column.',   `version_data` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'json-encoded string of version data',   `keep_forever` tinyint(4) NOT NULL DEFAULT '0' COMMENT '0=auto delete; 1=keep',   PRIMARY KEY (`version_id`),   KEY `idx_ucm_item_id` (`ucm_type_id`,`ucm_item_id`),   KEY `idx_save_date` (`save_date`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:17:"vionc_ucm_history";}}s:18:"vionc_update_sites";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:557:"CREATE TABLE `vionc_update_sites` (   `update_site_id` int(11) NOT NULL AUTO_INCREMENT,   `name` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT '',   `type` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT '',   `location` text COLLATE utf8mb4_unicode_ci NOT NULL,   `enabled` int(11) DEFAULT '0',   `last_check_timestamp` bigint(20) DEFAULT '0',   `extra_query` varchar(1000) COLLATE utf8mb4_unicode_ci DEFAULT '',   PRIMARY KEY (`update_site_id`) ) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Update Sites';
";s:12:"dependencies";a:1:{i:0;s:18:"vionc_update_sites";}}s:29:"vionc_update_sites_extensions";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:302:"CREATE TABLE `vionc_update_sites_extensions` (   `update_site_id` int(11) NOT NULL DEFAULT '0',   `extension_id` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`update_site_id`,`extension_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Links extensions to update sites';
";s:12:"dependencies";a:1:{i:0;s:29:"vionc_update_sites_extensions";}}s:13:"vionc_updates";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:935:"CREATE TABLE `vionc_updates` (   `update_id` int(11) NOT NULL AUTO_INCREMENT,   `update_site_id` int(11) DEFAULT '0',   `extension_id` int(11) DEFAULT '0',   `name` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT '',   `description` text COLLATE utf8mb4_unicode_ci NOT NULL,   `element` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT '',   `type` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT '',   `folder` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT '',   `client_id` tinyint(3) DEFAULT '0',   `version` varchar(32) COLLATE utf8mb4_unicode_ci DEFAULT '',   `data` text COLLATE utf8mb4_unicode_ci NOT NULL,   `detailsurl` text COLLATE utf8mb4_unicode_ci NOT NULL,   `infourl` text COLLATE utf8mb4_unicode_ci NOT NULL,   `extra_query` varchar(1000) COLLATE utf8mb4_unicode_ci DEFAULT '',   PRIMARY KEY (`update_id`) ) ENGINE=InnoDB AUTO_INCREMENT=78 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Available Updates';
";s:12:"dependencies";a:1:{i:0;s:13:"vionc_updates";}}s:15:"vionc_user_keys";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:572:"CREATE TABLE `vionc_user_keys` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `user_id` varchar(150) COLLATE utf8mb4_unicode_ci NOT NULL,   `token` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `series` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,   `invalid` tinyint(4) NOT NULL,   `time` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL,   `uastring` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`id`),   UNIQUE KEY `series` (`series`),   KEY `user_id` (`user_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:15:"vionc_user_keys";}}s:16:"vionc_user_notes";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1067:"CREATE TABLE `vionc_user_notes` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `user_id` int(10) unsigned NOT NULL DEFAULT '0',   `catid` int(10) unsigned NOT NULL DEFAULT '0',   `subject` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `body` text COLLATE utf8mb4_unicode_ci NOT NULL,   `state` tinyint(3) NOT NULL DEFAULT '0',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `created_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_user_id` int(10) unsigned NOT NULL,   `modified_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `review_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   PRIMARY KEY (`id`),   KEY `idx_user_id` (`user_id`),   KEY `idx_category_id` (`catid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:16:"vionc_user_notes";}}s:19:"vionc_user_profiles";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:413:"CREATE TABLE `vionc_user_profiles` (   `user_id` int(11) NOT NULL,   `profile_key` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,   `profile_value` text COLLATE utf8mb4_unicode_ci NOT NULL,   `ordering` int(11) NOT NULL DEFAULT '0',   UNIQUE KEY `idx_user_id_profile_key` (`user_id`,`profile_key`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Simple user profile storage table';
";s:12:"dependencies";a:1:{i:0;s:19:"vionc_user_profiles";}}s:24:"vionc_user_usergroup_map";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:329:"CREATE TABLE `vionc_user_usergroup_map` (   `user_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Foreign Key to #__users.id',   `group_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Foreign Key to #__usergroups.id',   PRIMARY KEY (`user_id`,`group_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:24:"vionc_user_usergroup_map";}}s:16:"vionc_usergroups";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:730:"CREATE TABLE `vionc_usergroups` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Primary Key',   `parent_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Adjacency List Reference Id',   `lft` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set lft.',   `rgt` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set rgt.',   `title` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   PRIMARY KEY (`id`),   UNIQUE KEY `idx_usergroup_parent_title_lookup` (`parent_id`,`title`),   KEY `idx_usergroup_title_lookup` (`title`),   KEY `idx_usergroup_adjacency_lookup` (`parent_id`),   KEY `idx_usergroup_nested_set_lookup` (`lft`,`rgt`)  ) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:16:"vionc_usergroups";}}s:11:"vionc_users";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1470:"CREATE TABLE `vionc_users` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `name` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `username` varchar(150) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `email` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `password` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `block` tinyint(4) NOT NULL DEFAULT '0',   `sendEmail` tinyint(4) DEFAULT '0',   `registerDate` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `lastvisitDate` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `activation` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `params` text COLLATE utf8mb4_unicode_ci NOT NULL,   `lastResetTime` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Date of last password reset',   `resetCount` int(11) NOT NULL DEFAULT '0' COMMENT 'Count of password resets since lastResetTime',   `otpKey` varchar(1000) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'Two factor authentication encrypted keys',   `otep` varchar(1000) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'One time emergency passwords',   `requireReset` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'Require user to reset password on next login',   PRIMARY KEY (`id`),   KEY `idx_name` (`name`(100)),   KEY `idx_block` (`block`),   KEY `username` (`username`),   KEY `email` (`email`) ) ENGINE=InnoDB AUTO_INCREMENT=115 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:11:"vionc_users";}}s:21:"vionc_utf8_conversion";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:153:"CREATE TABLE `vionc_utf8_conversion` (   `converted` tinyint(4) NOT NULL DEFAULT '0' ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:21:"vionc_utf8_conversion";}}s:16:"vionc_viewlevels";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:479:"CREATE TABLE `vionc_viewlevels` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Primary Key',   `title` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `ordering` int(11) NOT NULL DEFAULT '0',   `rules` varchar(5120) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'JSON encoded access control.',   PRIMARY KEY (`id`),   UNIQUE KEY `idx_assetgroup_title_lookup` (`title`) ) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:1:{i:0;s:16:"vionc_viewlevels";}}}s:17:" * table_name_map";a:306:{s:23:"gr0us_acymailing_action";s:20:"#__acymailing_action";s:23:"gr0us_acymailing_config";s:20:"#__acymailing_config";s:23:"gr0us_acymailing_fields";s:20:"#__acymailing_fields";s:23:"gr0us_acymailing_filter";s:20:"#__acymailing_filter";s:24:"gr0us_acymailing_forward";s:21:"#__acymailing_forward";s:28:"gr0us_acymailing_geolocation";s:25:"#__acymailing_geolocation";s:24:"gr0us_acymailing_history";s:21:"#__acymailing_history";s:21:"gr0us_acymailing_list";s:18:"#__acymailing_list";s:29:"gr0us_acymailing_listcampaign";s:26:"#__acymailing_listcampaign";s:25:"gr0us_acymailing_listmail";s:22:"#__acymailing_listmail";s:24:"gr0us_acymailing_listsub";s:21:"#__acymailing_listsub";s:21:"gr0us_acymailing_mail";s:18:"#__acymailing_mail";s:22:"gr0us_acymailing_queue";s:19:"#__acymailing_queue";s:22:"gr0us_acymailing_rules";s:19:"#__acymailing_rules";s:22:"gr0us_acymailing_stats";s:19:"#__acymailing_stats";s:27:"gr0us_acymailing_subscriber";s:24:"#__acymailing_subscriber";s:20:"gr0us_acymailing_tag";s:17:"#__acymailing_tag";s:24:"gr0us_acymailing_tagmail";s:21:"#__acymailing_tagmail";s:25:"gr0us_acymailing_template";s:22:"#__acymailing_template";s:20:"gr0us_acymailing_url";s:17:"#__acymailing_url";s:25:"gr0us_acymailing_urlclick";s:22:"#__acymailing_urlclick";s:26:"gr0us_acymailing_userstats";s:23:"#__acymailing_userstats";s:17:"gr0us_ak_profiles";s:14:"#__ak_profiles";s:14:"gr0us_ak_stats";s:11:"#__ak_stats";s:16:"gr0us_ak_storage";s:13:"#__ak_storage";s:19:"gr0us_akeeba_common";s:16:"#__akeeba_common";s:12:"gr0us_assets";s:9:"#__assets";s:18:"gr0us_associations";s:15:"#__associations";s:20:"gr0us_banner_clients";s:17:"#__banner_clients";s:19:"gr0us_banner_tracks";s:16:"#__banner_tracks";s:13:"gr0us_banners";s:10:"#__banners";s:16:"gr0us_categories";s:13:"#__categories";s:21:"gr0us_contact_details";s:18:"#__contact_details";s:13:"gr0us_content";s:10:"#__content";s:23:"gr0us_content_frontpage";s:20:"#__content_frontpage";s:20:"gr0us_content_rating";s:17:"#__content_rating";s:19:"gr0us_content_types";s:16:"#__content_types";s:25:"gr0us_contentitem_tag_map";s:22:"#__contentitem_tag_map";s:23:"gr0us_core_log_searches";s:20:"#__core_log_searches";s:16:"gr0us_extensions";s:13:"#__extensions";s:12:"gr0us_fields";s:9:"#__fields";s:23:"gr0us_fields_categories";s:20:"#__fields_categories";s:19:"gr0us_fields_groups";s:16:"#__fields_groups";s:19:"gr0us_fields_values";s:16:"#__fields_values";s:20:"gr0us_finder_filters";s:17:"#__finder_filters";s:18:"gr0us_finder_links";s:15:"#__finder_links";s:25:"gr0us_finder_links_terms0";s:22:"#__finder_links_terms0";s:25:"gr0us_finder_links_terms1";s:22:"#__finder_links_terms1";s:25:"gr0us_finder_links_terms2";s:22:"#__finder_links_terms2";s:25:"gr0us_finder_links_terms3";s:22:"#__finder_links_terms3";s:25:"gr0us_finder_links_terms4";s:22:"#__finder_links_terms4";s:25:"gr0us_finder_links_terms5";s:22:"#__finder_links_terms5";s:25:"gr0us_finder_links_terms6";s:22:"#__finder_links_terms6";s:25:"gr0us_finder_links_terms7";s:22:"#__finder_links_terms7";s:25:"gr0us_finder_links_terms8";s:22:"#__finder_links_terms8";s:25:"gr0us_finder_links_terms9";s:22:"#__finder_links_terms9";s:25:"gr0us_finder_links_termsa";s:22:"#__finder_links_termsa";s:25:"gr0us_finder_links_termsb";s:22:"#__finder_links_termsb";s:25:"gr0us_finder_links_termsc";s:22:"#__finder_links_termsc";s:25:"gr0us_finder_links_termsd";s:22:"#__finder_links_termsd";s:25:"gr0us_finder_links_termse";s:22:"#__finder_links_termse";s:25:"gr0us_finder_links_termsf";s:22:"#__finder_links_termsf";s:21:"gr0us_finder_taxonomy";s:18:"#__finder_taxonomy";s:25:"gr0us_finder_taxonomy_map";s:22:"#__finder_taxonomy_map";s:18:"gr0us_finder_terms";s:15:"#__finder_terms";s:25:"gr0us_finder_terms_common";s:22:"#__finder_terms_common";s:19:"gr0us_finder_tokens";s:16:"#__finder_tokens";s:29:"gr0us_finder_tokens_aggregate";s:26:"#__finder_tokens_aggregate";s:18:"gr0us_finder_types";s:15:"#__finder_types";s:22:"gr0us_hikashop_address";s:19:"#__hikashop_address";s:20:"gr0us_hikashop_badge";s:17:"#__hikashop_badge";s:21:"gr0us_hikashop_banner";s:18:"#__hikashop_banner";s:19:"gr0us_hikashop_cart";s:16:"#__hikashop_cart";s:27:"gr0us_hikashop_cart_product";s:24:"#__hikashop_cart_product";s:23:"gr0us_hikashop_category";s:20:"#__hikashop_category";s:29:"gr0us_hikashop_characteristic";s:26:"#__hikashop_characteristic";s:20:"gr0us_hikashop_click";s:17:"#__hikashop_click";s:21:"gr0us_hikashop_config";s:18:"#__hikashop_config";s:23:"gr0us_hikashop_currency";s:20:"#__hikashop_currency";s:23:"gr0us_hikashop_discount";s:20:"#__hikashop_discount";s:23:"gr0us_hikashop_download";s:20:"#__hikashop_download";s:20:"gr0us_hikashop_entry";s:17:"#__hikashop_entry";s:20:"gr0us_hikashop_field";s:17:"#__hikashop_field";s:19:"gr0us_hikashop_file";s:16:"#__hikashop_file";s:21:"gr0us_hikashop_filter";s:18:"#__hikashop_filter";s:26:"gr0us_hikashop_geolocation";s:23:"#__hikashop_geolocation";s:22:"gr0us_hikashop_history";s:19:"#__hikashop_history";s:20:"gr0us_hikashop_limit";s:17:"#__hikashop_limit";s:25:"gr0us_hikashop_massaction";s:22:"#__hikashop_massaction";s:20:"gr0us_hikashop_order";s:17:"#__hikashop_order";s:28:"gr0us_hikashop_order_product";s:25:"#__hikashop_order_product";s:26:"gr0us_hikashop_orderstatus";s:23:"#__hikashop_orderstatus";s:22:"gr0us_hikashop_payment";s:19:"#__hikashop_payment";s:21:"gr0us_hikashop_plugin";s:18:"#__hikashop_plugin";s:20:"gr0us_hikashop_price";s:17:"#__hikashop_price";s:22:"gr0us_hikashop_product";s:19:"#__hikashop_product";s:31:"gr0us_hikashop_product_category";s:28:"#__hikashop_product_category";s:30:"gr0us_hikashop_product_related";s:27:"#__hikashop_product_related";s:23:"gr0us_hikashop_shipping";s:20:"#__hikashop_shipping";s:29:"gr0us_hikashop_shipping_price";s:26:"#__hikashop_shipping_price";s:18:"gr0us_hikashop_tax";s:15:"#__hikashop_tax";s:23:"gr0us_hikashop_taxation";s:20:"#__hikashop_taxation";s:19:"gr0us_hikashop_user";s:16:"#__hikashop_user";s:22:"gr0us_hikashop_variant";s:19:"#__hikashop_variant";s:19:"gr0us_hikashop_vote";s:16:"#__hikashop_vote";s:24:"gr0us_hikashop_vote_user";s:21:"#__hikashop_vote_user";s:23:"gr0us_hikashop_waitlist";s:20:"#__hikashop_waitlist";s:24:"gr0us_hikashop_warehouse";s:21:"#__hikashop_warehouse";s:21:"gr0us_hikashop_widget";s:18:"#__hikashop_widget";s:19:"gr0us_hikashop_zone";s:16:"#__hikashop_zone";s:24:"gr0us_hikashop_zone_link";s:21:"#__hikashop_zone_link";s:15:"gr0us_languages";s:12:"#__languages";s:10:"gr0us_menu";s:7:"#__menu";s:16:"gr0us_menu_types";s:13:"#__menu_types";s:14:"gr0us_messages";s:11:"#__messages";s:18:"gr0us_messages_cfg";s:15:"#__messages_cfg";s:13:"gr0us_modules";s:10:"#__modules";s:18:"gr0us_modules_menu";s:15:"#__modules_menu";s:15:"gr0us_newsfeeds";s:12:"#__newsfeeds";s:15:"gr0us_overrider";s:12:"#__overrider";s:26:"gr0us_postinstall_messages";s:23:"#__postinstall_messages";s:20:"gr0us_redirect_links";s:17:"#__redirect_links";s:13:"gr0us_schemas";s:10:"#__schemas";s:13:"gr0us_session";s:10:"#__session";s:10:"gr0us_tags";s:7:"#__tags";s:21:"gr0us_template_styles";s:18:"#__template_styles";s:14:"gr0us_ucm_base";s:11:"#__ucm_base";s:17:"gr0us_ucm_content";s:14:"#__ucm_content";s:17:"gr0us_ucm_history";s:14:"#__ucm_history";s:18:"gr0us_update_sites";s:15:"#__update_sites";s:29:"gr0us_update_sites_extensions";s:26:"#__update_sites_extensions";s:13:"gr0us_updates";s:10:"#__updates";s:15:"gr0us_user_keys";s:12:"#__user_keys";s:16:"gr0us_user_notes";s:13:"#__user_notes";s:19:"gr0us_user_profiles";s:16:"#__user_profiles";s:24:"gr0us_user_usergroup_map";s:21:"#__user_usergroup_map";s:16:"gr0us_usergroups";s:13:"#__usergroups";s:11:"gr0us_users";s:8:"#__users";s:21:"gr0us_utf8_conversion";s:18:"#__utf8_conversion";s:16:"gr0us_viewlevels";s:13:"#__viewlevels";s:17:"gr0us_wf_profiles";s:14:"#__wf_profiles";s:23:"vionc_acymailing_action";s:23:"vionc_acymailing_action";s:23:"vionc_acymailing_config";s:23:"vionc_acymailing_config";s:23:"vionc_acymailing_fields";s:23:"vionc_acymailing_fields";s:23:"vionc_acymailing_filter";s:23:"vionc_acymailing_filter";s:24:"vionc_acymailing_forward";s:24:"vionc_acymailing_forward";s:28:"vionc_acymailing_geolocation";s:28:"vionc_acymailing_geolocation";s:24:"vionc_acymailing_history";s:24:"vionc_acymailing_history";s:21:"vionc_acymailing_list";s:21:"vionc_acymailing_list";s:29:"vionc_acymailing_listcampaign";s:29:"vionc_acymailing_listcampaign";s:25:"vionc_acymailing_listmail";s:25:"vionc_acymailing_listmail";s:24:"vionc_acymailing_listsub";s:24:"vionc_acymailing_listsub";s:21:"vionc_acymailing_mail";s:21:"vionc_acymailing_mail";s:22:"vionc_acymailing_queue";s:22:"vionc_acymailing_queue";s:22:"vionc_acymailing_rules";s:22:"vionc_acymailing_rules";s:22:"vionc_acymailing_stats";s:22:"vionc_acymailing_stats";s:27:"vionc_acymailing_subscriber";s:27:"vionc_acymailing_subscriber";s:20:"vionc_acymailing_tag";s:20:"vionc_acymailing_tag";s:24:"vionc_acymailing_tagmail";s:24:"vionc_acymailing_tagmail";s:25:"vionc_acymailing_template";s:25:"vionc_acymailing_template";s:20:"vionc_acymailing_url";s:20:"vionc_acymailing_url";s:25:"vionc_acymailing_urlclick";s:25:"vionc_acymailing_urlclick";s:26:"vionc_acymailing_userstats";s:26:"vionc_acymailing_userstats";s:20:"vionc_admintools_acl";s:20:"vionc_admintools_acl";s:28:"vionc_admintools_adminiplist";s:28:"vionc_admintools_adminiplist";s:25:"vionc_admintools_badwords";s:25:"vionc_admintools_badwords";s:24:"vionc_admintools_cookies";s:24:"vionc_admintools_cookies";s:28:"vionc_admintools_customperms";s:28:"vionc_admintools_customperms";s:27:"vionc_admintools_filescache";s:27:"vionc_admintools_filescache";s:26:"vionc_admintools_ipautoban";s:26:"vionc_admintools_ipautoban";s:33:"vionc_admintools_ipautobanhistory";s:33:"vionc_admintools_ipautobanhistory";s:24:"vionc_admintools_ipblock";s:24:"vionc_admintools_ipblock";s:20:"vionc_admintools_log";s:20:"vionc_admintools_log";s:25:"vionc_admintools_profiles";s:25:"vionc_admintools_profiles";s:26:"vionc_admintools_redirects";s:26:"vionc_admintools_redirects";s:27:"vionc_admintools_scanalerts";s:27:"vionc_admintools_scanalerts";s:22:"vionc_admintools_scans";s:22:"vionc_admintools_scans";s:24:"vionc_admintools_storage";s:24:"vionc_admintools_storage";s:30:"vionc_admintools_wafblacklists";s:30:"vionc_admintools_wafblacklists";s:30:"vionc_admintools_wafexceptions";s:30:"vionc_admintools_wafexceptions";s:29:"vionc_admintools_waftemplates";s:29:"vionc_admintools_waftemplates";s:17:"vionc_ak_profiles";s:17:"vionc_ak_profiles";s:14:"vionc_ak_stats";s:14:"vionc_ak_stats";s:16:"vionc_ak_storage";s:16:"vionc_ak_storage";s:19:"vionc_akeeba_common";s:19:"vionc_akeeba_common";s:29:"vionc_ark_editor_inline_views";s:29:"vionc_ark_editor_inline_views";s:26:"vionc_ark_editor_languages";s:26:"vionc_ark_editor_languages";s:24:"vionc_ark_editor_plugins";s:24:"vionc_ark_editor_plugins";s:25:"vionc_ark_editor_toolbars";s:25:"vionc_ark_editor_toolbars";s:12:"vionc_assets";s:12:"vionc_assets";s:18:"vionc_associations";s:18:"vionc_associations";s:20:"vionc_banner_clients";s:20:"vionc_banner_clients";s:19:"vionc_banner_tracks";s:19:"vionc_banner_tracks";s:13:"vionc_banners";s:13:"vionc_banners";s:16:"vionc_categories";s:16:"vionc_categories";s:23:"vionc_chronoengine_acls";s:23:"vionc_chronoengine_acls";s:29:"vionc_chronoengine_extensions";s:29:"vionc_chronoengine_extensions";s:25:"vionc_chronoengine_forms6";s:25:"vionc_chronoengine_forms6";s:21:"vionc_contact_details";s:21:"vionc_contact_details";s:13:"vionc_content";s:13:"vionc_content";s:23:"vionc_content_frontpage";s:23:"vionc_content_frontpage";s:20:"vionc_content_rating";s:20:"vionc_content_rating";s:19:"vionc_content_types";s:19:"vionc_content_types";s:25:"vionc_contentitem_tag_map";s:25:"vionc_contentitem_tag_map";s:23:"vionc_core_log_searches";s:23:"vionc_core_log_searches";s:16:"vionc_extensions";s:16:"vionc_extensions";s:12:"vionc_fields";s:12:"vionc_fields";s:23:"vionc_fields_categories";s:23:"vionc_fields_categories";s:19:"vionc_fields_groups";s:19:"vionc_fields_groups";s:19:"vionc_fields_values";s:19:"vionc_fields_values";s:20:"vionc_finder_filters";s:20:"vionc_finder_filters";s:18:"vionc_finder_links";s:18:"vionc_finder_links";s:25:"vionc_finder_links_terms0";s:25:"vionc_finder_links_terms0";s:25:"vionc_finder_links_terms1";s:25:"vionc_finder_links_terms1";s:25:"vionc_finder_links_terms2";s:25:"vionc_finder_links_terms2";s:25:"vionc_finder_links_terms3";s:25:"vionc_finder_links_terms3";s:25:"vionc_finder_links_terms4";s:25:"vionc_finder_links_terms4";s:25:"vionc_finder_links_terms5";s:25:"vionc_finder_links_terms5";s:25:"vionc_finder_links_terms6";s:25:"vionc_finder_links_terms6";s:25:"vionc_finder_links_terms7";s:25:"vionc_finder_links_terms7";s:25:"vionc_finder_links_terms8";s:25:"vionc_finder_links_terms8";s:25:"vionc_finder_links_terms9";s:25:"vionc_finder_links_terms9";s:25:"vionc_finder_links_termsa";s:25:"vionc_finder_links_termsa";s:25:"vionc_finder_links_termsb";s:25:"vionc_finder_links_termsb";s:25:"vionc_finder_links_termsc";s:25:"vionc_finder_links_termsc";s:25:"vionc_finder_links_termsd";s:25:"vionc_finder_links_termsd";s:25:"vionc_finder_links_termse";s:25:"vionc_finder_links_termse";s:25:"vionc_finder_links_termsf";s:25:"vionc_finder_links_termsf";s:21:"vionc_finder_taxonomy";s:21:"vionc_finder_taxonomy";s:25:"vionc_finder_taxonomy_map";s:25:"vionc_finder_taxonomy_map";s:18:"vionc_finder_terms";s:18:"vionc_finder_terms";s:25:"vionc_finder_terms_common";s:25:"vionc_finder_terms_common";s:19:"vionc_finder_tokens";s:19:"vionc_finder_tokens";s:29:"vionc_finder_tokens_aggregate";s:29:"vionc_finder_tokens_aggregate";s:18:"vionc_finder_types";s:18:"vionc_finder_types";s:22:"vionc_hikashop_address";s:22:"vionc_hikashop_address";s:20:"vionc_hikashop_badge";s:20:"vionc_hikashop_badge";s:21:"vionc_hikashop_banner";s:21:"vionc_hikashop_banner";s:19:"vionc_hikashop_cart";s:19:"vionc_hikashop_cart";s:27:"vionc_hikashop_cart_product";s:27:"vionc_hikashop_cart_product";s:23:"vionc_hikashop_category";s:23:"vionc_hikashop_category";s:29:"vionc_hikashop_characteristic";s:29:"vionc_hikashop_characteristic";s:20:"vionc_hikashop_click";s:20:"vionc_hikashop_click";s:21:"vionc_hikashop_config";s:21:"vionc_hikashop_config";s:23:"vionc_hikashop_currency";s:23:"vionc_hikashop_currency";s:23:"vionc_hikashop_discount";s:23:"vionc_hikashop_discount";s:23:"vionc_hikashop_download";s:23:"vionc_hikashop_download";s:20:"vionc_hikashop_entry";s:20:"vionc_hikashop_entry";s:20:"vionc_hikashop_field";s:20:"vionc_hikashop_field";s:19:"vionc_hikashop_file";s:19:"vionc_hikashop_file";s:21:"vionc_hikashop_filter";s:21:"vionc_hikashop_filter";s:26:"vionc_hikashop_geolocation";s:26:"vionc_hikashop_geolocation";s:22:"vionc_hikashop_history";s:22:"vionc_hikashop_history";s:20:"vionc_hikashop_limit";s:20:"vionc_hikashop_limit";s:25:"vionc_hikashop_massaction";s:25:"vionc_hikashop_massaction";s:20:"vionc_hikashop_order";s:20:"vionc_hikashop_order";s:28:"vionc_hikashop_order_product";s:28:"vionc_hikashop_order_product";s:26:"vionc_hikashop_orderstatus";s:26:"vionc_hikashop_orderstatus";s:22:"vionc_hikashop_payment";s:22:"vionc_hikashop_payment";s:21:"vionc_hikashop_plugin";s:21:"vionc_hikashop_plugin";s:20:"vionc_hikashop_price";s:20:"vionc_hikashop_price";s:22:"vionc_hikashop_product";s:22:"vionc_hikashop_product";s:31:"vionc_hikashop_product_category";s:31:"vionc_hikashop_product_category";s:30:"vionc_hikashop_product_related";s:30:"vionc_hikashop_product_related";s:23:"vionc_hikashop_shipping";s:23:"vionc_hikashop_shipping";s:29:"vionc_hikashop_shipping_price";s:29:"vionc_hikashop_shipping_price";s:18:"vionc_hikashop_tax";s:18:"vionc_hikashop_tax";s:23:"vionc_hikashop_taxation";s:23:"vionc_hikashop_taxation";s:19:"vionc_hikashop_user";s:19:"vionc_hikashop_user";s:22:"vionc_hikashop_variant";s:22:"vionc_hikashop_variant";s:19:"vionc_hikashop_vote";s:19:"vionc_hikashop_vote";s:24:"vionc_hikashop_vote_user";s:24:"vionc_hikashop_vote_user";s:23:"vionc_hikashop_waitlist";s:23:"vionc_hikashop_waitlist";s:24:"vionc_hikashop_warehouse";s:24:"vionc_hikashop_warehouse";s:21:"vionc_hikashop_widget";s:21:"vionc_hikashop_widget";s:19:"vionc_hikashop_zone";s:19:"vionc_hikashop_zone";s:24:"vionc_hikashop_zone_link";s:24:"vionc_hikashop_zone_link";s:15:"vionc_languages";s:15:"vionc_languages";s:10:"vionc_menu";s:10:"vionc_menu";s:16:"vionc_menu_types";s:16:"vionc_menu_types";s:14:"vionc_messages";s:14:"vionc_messages";s:18:"vionc_messages_cfg";s:18:"vionc_messages_cfg";s:13:"vionc_modules";s:13:"vionc_modules";s:18:"vionc_modules_menu";s:18:"vionc_modules_menu";s:15:"vionc_newsfeeds";s:15:"vionc_newsfeeds";s:15:"vionc_overrider";s:15:"vionc_overrider";s:26:"vionc_postinstall_messages";s:26:"vionc_postinstall_messages";s:20:"vionc_redirect_links";s:20:"vionc_redirect_links";s:13:"vionc_schemas";s:13:"vionc_schemas";s:13:"vionc_session";s:13:"vionc_session";s:10:"vionc_tags";s:10:"vionc_tags";s:21:"vionc_template_styles";s:21:"vionc_template_styles";s:14:"vionc_ucm_base";s:14:"vionc_ucm_base";s:17:"vionc_ucm_content";s:17:"vionc_ucm_content";s:17:"vionc_ucm_history";s:17:"vionc_ucm_history";s:18:"vionc_update_sites";s:18:"vionc_update_sites";s:29:"vionc_update_sites_extensions";s:29:"vionc_update_sites_extensions";s:13:"vionc_updates";s:13:"vionc_updates";s:15:"vionc_user_keys";s:15:"vionc_user_keys";s:16:"vionc_user_notes";s:16:"vionc_user_notes";s:19:"vionc_user_profiles";s:19:"vionc_user_profiles";s:24:"vionc_user_usergroup_map";s:24:"vionc_user_usergroup_map";s:16:"vionc_usergroups";s:16:"vionc_usergroups";s:11:"vionc_users";s:11:"vionc_users";s:21:"vionc_utf8_conversion";s:21:"vionc_utf8_conversion";s:16:"vionc_viewlevels";s:16:"vionc_viewlevels";}s:15:" * dependencies";a:0:{}s:12:" * nextTable";s:0:"";s:12:" * nextRange";i:0;s:11:" * maxRange";s:1:"5";s:18:" * extendedInserts";b:1;s:13:" * packetSize";s:8:"209715.2";s:8:" * query";s:0:"";s:11:" * partSize";s:6:"524288";s:13:" * isPrepared";b:1;s:12:" * isRunning";b:0;s:13:" * isFinished";b:1;s:9:" * hasRan";b:0;s:16:" * active_domain";s:0:"";s:14:" * active_step";s:0:"";s:17:" * active_substep";s:0:"";s:19:" * _parametersArray";a:10:{s:4:"host";s:9:"localhost";s:4:"port";s:0:"";s:8:"username";s:4:"root";s:8:"password";N;s:8:"database";s:20:"coffeecu_beta_vionic";s:6:"prefix";s:6:"gr0us_";s:8:"dumpFile";s:8:"site.sql";s:6:"driver";s:28:"\Akeeba\Engine\Driver\Joomla";s:4:"root";s:8:"[SITEDB]";s:20:"process_empty_prefix";b:1;}s:15:" * databaseRoot";s:8:"[SITEDB]";s:41:" Akeeba\Engine\Base\Part warnings_pointer";i:-1;s:15:" * nest_logging";b:0;s:20:" * installerSettings";O:8:"stdClass":9:{s:4:"name";s:23:"ANGIE for Joomla! Sites";s:7:"package";s:26:"angie.jpa,angie-joomla.jpa";s:8:"language";s:38:"language-angie.jpa,language-joomla.jpa";s:13:"installerroot";s:12:"installation";s:7:"sqlroot";s:16:"installation/sql";s:12:"databasesini";s:1:"1";s:6:"readme";s:1:"1";s:9:"extrainfo";s:1:"1";s:8:"password";s:1:"1";}s:15:" * waitTimeMsec";i:0;s:29:" * ignoreMinimumExecutionTime";b:0;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:13:" * isPrepared";b:1;s:12:" * isRunning";b:0;s:13:" * isFinished";b:1;s:9:" * hasRan";b:0;s:16:" * active_domain";s:0:"";s:14:" * active_step";s:0:"";s:17:" * active_substep";s:0:"";s:19:" * _parametersArray";a:10:{s:4:"host";s:9:"localhost";s:4:"port";s:0:"";s:8:"username";s:4:"root";s:8:"password";N;s:8:"database";s:20:"coffeecu_beta_vionic";s:6:"prefix";s:6:"gr0us_";s:8:"dumpFile";s:8:"site.sql";s:6:"driver";s:28:"\Akeeba\Engine\Driver\Joomla";s:4:"root";s:8:"[SITEDB]";s:20:"process_empty_prefix";b:1;}s:15:" * databaseRoot";s:8:"[SITEDB]";s:41:" Akeeba\Engine\Base\Part warnings_pointer";i:0;s:15:" * nest_logging";b:0;s:20:" * installerSettings";O:8:"stdClass":9:{s:4:"name";s:23:"ANGIE for Joomla! Sites";s:7:"package";s:26:"angie.jpa,angie-joomla.jpa";s:8:"language";s:38:"language-angie.jpa,language-joomla.jpa";s:13:"installerroot";s:12:"installation";s:7:"sqlroot";s:16:"installation/sql";s:12:"databasesini";s:1:"1";s:6:"readme";s:1:"1";s:9:"extrainfo";s:1:"1";s:8:"password";s:1:"1";}s:15:" * waitTimeMsec";i:0;s:29:" * ignoreMinimumExecutionTime";b:0;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;s:10:"partNumber";i:6;}s:31:"\Akeeba\Engine\Core\Domain\Pack";O:30:"Akeeba\Engine\Core\Domain\Pack":38:{s:46:" Akeeba\Engine\Core\Domain\Pack directory_list";a:26:{i:0;s:27:"C:/wamp64/www/vionicph/.git";i:1;s:36:"C:/wamp64/www/vionicph/administrator";i:2;s:29:"C:/wamp64/www/vionicph/backup";i:3;s:26:"C:/wamp64/www/vionicph/bin";i:4;s:28:"C:/wamp64/www/vionicph/cache";i:5;s:26:"C:/wamp64/www/vionicph/cli";i:6;s:48:"C:/wamp64/www/vionicph/components/com_acymailing";i:7;s:42:"C:/wamp64/www/vionicph/components/com_ajax";i:8;s:44:"C:/wamp64/www/vionicph/components/com_akeeba";i:9;s:45:"C:/wamp64/www/vionicph/components/com_banners";i:10;s:44:"C:/wamp64/www/vionicph/components/com_config";i:11;s:45:"C:/wamp64/www/vionicph/components/com_contact";i:12;s:45:"C:/wamp64/www/vionicph/components/com_content";i:13;s:52:"C:/wamp64/www/vionicph/components/com_contenthistory";i:14;s:44:"C:/wamp64/www/vionicph/components/com_fields";i:15;s:44:"C:/wamp64/www/vionicph/components/com_finder";i:16;s:46:"C:/wamp64/www/vionicph/components/com_hikashop";i:17;s:57:"C:/wamp64/www/vionicph/components/com_jce/editor/elements";i:18;s:59:"C:/wamp64/www/vionicph/components/com_jce/editor/extensions";i:19;s:66:"C:/wamp64/www/vionicph/components/com_jce/editor/libraries/classes";i:20;s:62:"C:/wamp64/www/vionicph/components/com_jce/editor/libraries/css";i:21;s:64:"C:/wamp64/www/vionicph/components/com_jce/editor/libraries/fonts";i:22;s:62:"C:/wamp64/www/vionicph/components/com_jce/editor/libraries/img";i:23;s:65:"C:/wamp64/www/vionicph/components/com_jce/editor/libraries/jquery";i:24;s:61:"C:/wamp64/www/vionicph/components/com_jce/editor/libraries/js";i:25;s:70:"C:/wamp64/www/vionicph/components/com_jce/editor/libraries/mediaplayer";}s:41:" Akeeba\Engine\Core\Domain\Pack file_list";a:1:{i:0;s:78:"C:/wamp64/www/vionicph/components/com_jce/editor/libraries/uikit/uikit.min.css";}s:52:" Akeeba\Engine\Core\Domain\Pack done_subdir_scanning";b:0;s:50:" Akeeba\Engine\Core\Domain\Pack done_file_scanning";b:1;s:47:" Akeeba\Engine\Core\Domain\Pack excluded_folder";b:0;s:55:" Akeeba\Engine\Core\Domain\Pack excluded_subdirectories";b:0;s:46:" Akeeba\Engine\Core\Domain\Pack excluded_files";b:0;s:43:" Akeeba\Engine\Core\Domain\Pack path_prefix";s:0:"";s:50:" Akeeba\Engine\Core\Domain\Pack remove_path_prefix";s:22:"C:\wamp64\www\vionicph";s:48:" Akeeba\Engine\Core\Domain\Pack root_definitions";a:0:{}s:55:" Akeeba\Engine\Core\Domain\Pack processed_files_counter";i:2;s:49:" Akeeba\Engine\Core\Domain\Pack current_directory";s:64:"C:/wamp64/www/vionicph/components/com_jce/editor/libraries/uikit";s:49:" Akeeba\Engine\Core\Domain\Pack getFiles_position";N;s:51:" Akeeba\Engine\Core\Domain\Pack getFolders_position";N;s:36:" Akeeba\Engine\Core\Domain\Pack root";s:10:"[SITEROOT]";s:43:" Akeeba\Engine\Core\Domain\Pack total_roots";i:1;s:43:" Akeeba\Engine\Core\Domain\Pack total_files";i:6863;s:42:" Akeeba\Engine\Core\Domain\Pack done_files";i:6863;s:45:" Akeeba\Engine\Core\Domain\Pack total_folders";i:1678;s:44:" Akeeba\Engine\Core\Domain\Pack done_folders";i:1653;s:13:" * isPrepared";b:1;s:12:" * isRunning";b:0;s:13:" * isFinished";b:0;s:9:" * hasRan";b:0;s:16:" * active_domain";s:0:"";s:14:" * active_step";s:64:"C:/wamp64/www/vionicph/components/com_jce/editor/libraries/uikit";s:17:" * active_substep";s:0:"";s:19:" * _parametersArray";a:4:{s:11:"description";s:43:"Backup taken on Sunday, 15 April 2018 08:59";s:7:"comment";s:0:"";s:6:"jpskey";s:0:"";s:8:"angiekey";s:0:"";}s:15:" * databaseRoot";a:0:{}s:41:" Akeeba\Engine\Base\Part warnings_pointer";i:0;s:15:" * nest_logging";b:0;s:20:" * installerSettings";O:8:"stdClass":9:{s:4:"name";s:23:"ANGIE for Joomla! Sites";s:7:"package";s:26:"angie.jpa,angie-joomla.jpa";s:8:"language";s:38:"language-angie.jpa,language-joomla.jpa";s:13:"installerroot";s:12:"installation";s:7:"sqlroot";s:16:"installation/sql";s:12:"databasesini";s:1:"1";s:6:"readme";s:1:"1";s:9:"extrainfo";s:1:"1";s:8:"password";s:1:"1";}s:15:" * waitTimeMsec";i:0;s:29:" * ignoreMinimumExecutionTime";b:0;s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:25:"\Akeeba\Engine\Scan\Smart";O:24:"Akeeba\Engine\Scan\Smart":4:{s:38:" Akeeba\Engine\Base\BaseObject _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:40:" Akeeba\Engine\Base\BaseObject _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}}}